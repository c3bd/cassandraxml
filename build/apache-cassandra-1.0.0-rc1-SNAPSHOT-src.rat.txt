
*****************************************************
Summary
-------
Notes: 19
Binaries: 1789
Archives: 58
Standards: 1156

Apache Licensed: 764
Generated Documents: 21

JavaDocs are generated and so license header is optional
Generated files do not required license headers

371 Unknown Licenses

*******************************

Unapproved licenses:

  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/.rat-excludes
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/CHANGES.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/cassandra.yaml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/XPathCompiler.jj
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/XPathParser.jj
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathtoken/XPathToken.jj
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/Cli.tokens
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/Cql.tokens
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/mime-types.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/package.html
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/schema-sample.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/build.properties.default
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/cassandra.yaml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/schema-sample.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/pig/example-script.pig
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/README.Debian
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/TODO
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.conf
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.in.sh
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.install
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.postinst
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/compat
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/control
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/default
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/dirs
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/init
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/rules
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/doc/cql/CQL.textile
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/client_only/conf/cassandra.yaml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/build.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/test/JUnitPerf_LICENSE
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/maven.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/project.properties
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/project.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/log4j-NOTICE.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/serializer-NOTICE.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmldb-LICENSE.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmlrpc-NOTICE.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/antlr-3.1.3.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/high-scale-lib-1.1.2.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/jline-0.9.94.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/slf4j-api-1.6.1.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/slf4j-log4j12-1.6.1.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/xmldb/xmldb-LICENSE.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/myChanges.txt
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/apache-cassandra.spec
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/cassandra
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/cassandra.conf
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/cassandra.in.sh
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/default
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/CollectionStore.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/CollectionStoreMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/XMLDBStore.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/XMLStore.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/XMLStoreMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLNodeDigestResolver.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeCallback.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeCommand.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeResponse.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeVerbHandler.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryCallback.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryCommand.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryResolver.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryResponse.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryVerbHandler.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/AvgResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/CountResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/FunctionReturn.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/FunctionReturnSerializer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/MaxResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/MinResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/SeqResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/SumResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/TextResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XMLDocNodeIDs.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XMLDocXMLParts.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XMLNodeForMutations.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XPathResultFactory.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/CollectionMetaData.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/DataFlushServiceFactory.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/InstantMetaDataFlushService.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/MutationFlushService.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/SysConfig.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLDBCatalogManager.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLDBCatalogManagerMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLMetaData.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLSchemaMetaData.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/AttributeNode.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/AttributeNodeImpl.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/AttributeNodeSerializer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/ElementNode.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/ElementNodeImpl.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/ElementNodeSerializer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/LocalXMLReadRunnable.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/NodeProxy.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNode.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeForMutation.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeImpl.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeSerializer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/cache/CacheManager.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/cache/DomNodeCache.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/cache/SubSequenceCache.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/formatter/IXMLNodeFormatter.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/formatter/IndentedXMLNodeFormatter.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/formatter/NormalXMLNodeFormatter.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/numbering/INumberingSchema.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/numbering/NumberingSchema.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/ComplexType.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemaElement.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemaSimpleType.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemaType.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemasTree.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/XMLSchema.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/DoubleComparator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/IntegerComparator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/LongComparator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/TypeResolver.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/UTF8Comparator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/ValueType.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/gms/IGMSObserver.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/gms/IGMSSubject.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/gms/ZooKeeperBasedGMS.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/ComparatorByRangeFirst.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/FileSizeKeyComparator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/Node.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeBinding.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeComparator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeIDComparator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeUnit.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/XMLIndexManager.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/BtreeDecorator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/BtreeFactory.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/CFBasedBtree.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/CFBasedBtreeMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/CacheBtree.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/ComposeKeyBtree.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/ComposeKeyBtreeMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/DbEnv.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/IBtree.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/IndexQueryResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/LazyCacheBtree.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/cache/IIndexCache.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/cache/IndexCache.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/IXMLFilter.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/IdentityXMLFilter.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/RootNodeFilter.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/XMLLocalDocFilter.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/CFInvertIndex.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/CFInvertIndexMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/ICFRetrievalStrategy.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/IInvertIndex.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/InvertIndexDecorator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/ParallelCFRetrieval.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/MessageDigester.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/Permission.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/PermissionDeniedException.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/PermissionFactory.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/UnixStylePermission.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/UnixStylePermissionSerializer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/User.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/UserSerializer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/XMLDBSecurityManager.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/CassandraSchemaProxy.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ColumnFamilySerializable.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ColumnFamilyStoreProxy.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ColumnFamilyStoreSerializable.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/DroppableRunnable.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/FileUtil.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/IDigestAble.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ISerializable.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/IXMLNodeSerializer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/IXPathResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/LocalCFStoreProxy.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/StringOutputStream.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/XMLNodeSerializerMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/XMLUtilities.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ZooKeeperUtil.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/DistributeXPathProcessor.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/ExecContext.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/LocalXPathQueryRunnable.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathConstant.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathProcessorV2.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathProcessorV2MBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathSequence.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/FunctionDef.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/FunctionPool.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/IXPathFunction.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathAverage.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathContainFunc.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathContainsFileSize.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathCount.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementGEFileSize.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQFileSize.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQInt.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQString.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsGEFileSize.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsGTFileSize.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsGTInt.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLEFileSize.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTFileSize.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTInt.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTString.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathMax.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathMin.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSubSeqStep2.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSubsequence.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSubsequence1.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSum.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathText.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathcompile/XPathCompiler.jj
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/IMCXPathException.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/XPathParser.jj
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathtoken/XPathToken.jj
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/AppendHandler.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/AppendHandlerMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/AppendRollBack.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/XUpdateProcessor.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/DisXMLDbServer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/XMLDBServerBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/servlets/HttpServletRequestWrapper.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/servlets/Log4jInit.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/TableMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/FileSizeType.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ArrayUtils.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Base64Decoder.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Base64Encoder.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ByteArray.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ByteArrayPool.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ByteConversion.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CharArrayPool.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CharSlice.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CollectionScanner.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CompressedWhitespace.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Compressor.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/DatabaseConfigurationException.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/DeadlockException.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/DirectoryScanner.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/EXistInputSource.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/EXistOutputKeys.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ExistSAXParserFactory.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FastByteBuffer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FastStringBuffer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FileInputSource.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FileUtils.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FixedByteArray.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FloatingPointConverter.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/GZIPInputSource.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/GlobToRegex.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Heap.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/IncludeXMLFilter.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/LockException.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/MimeType.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/OrderedLinkedList.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/PorterStemmer.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ProgressBar.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ProgressIndicator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ProgressListener.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Range.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ReadOnlyException.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/SelectorUtils.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/SwapVals.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/SyntaxException.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/UTF8.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/XMLChar.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ZipEntryInputSource.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/mime-types.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/AbstractRemoteResource.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/CollectionImpl.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/CollectionManagementServiceImpl.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/DatabaseImpl.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/DatabaseInstanceManager.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/EXistResource.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/ExtendedResource.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/FullXmldbURI.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/MapResourceSet.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteBinaryResource.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteCollection.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteCollectionManagementService.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteCompiledExpression.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteDatabaseInstanceManager.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteResourceIterator.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteResourceSet.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteUserManagementService.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteXMLResource.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteXPathQueryService.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteXUpdateQueryService.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/ResourceSetHelper.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/ShutdownListener.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/UserManagementService.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/XPathQueryServiceImpl.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/XQueryService.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/XmldbURI.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/package.html
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/AbstractCachedResult.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcAPI.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcConnection.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcConnectionMBean.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcServlet.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/XmldbRequestProcessorFactory.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xquery/Constants.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xquery/XPathException.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xquery/util/URIUtils.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/conf/cassandra.yaml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/complex.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.Truncation.bin
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.WriteResponse.bin
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace1.bin
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace2.bin
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace3.bin
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace4.bin
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace5.bin
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/service.TreeResponse.bin
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/CounterCF.json
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/SimpleCF.json
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/SimpleCF.oldformat.json
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/SuperCF.json
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/UnsortedSuperCF.json
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/JavaTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/BtreeTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/CFInvertIndexCleaner.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/CFInvertIndexTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/RemoveCollectionTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/cassandra/verbhandler/result/ResultTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/Config.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/CreateCollection.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/CreateXMLDoc.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/FileSystemTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/ParseColIDFromCFNameTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/RemoveCollection.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/RemoveXMLDoc.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/dom/XMLNodeForMutationTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/dom/formatter/IndentedXMLNodeFormatterTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/dom/numbering/NumberingSchemaTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/security/UserModTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/storexml/StoreNoSplitXMLTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/storexml/StoreSplittedXMLTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/storexml/StoreTextTypeTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/StringOutputStreamTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/TestUtilities.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/XMLUtilitiesTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/XUpdateTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xmlrpc/XmlRpcServerTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/ComplexXPathTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/QueryColRecursiveTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/QueryMultiCollectionTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathCompilerTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathFunctionTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathTokenParserTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathTypeTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/AppendLevel2Test.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/RollbackTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateAppendMultiAttr.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateAppendTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateClientTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateDeleteTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateTextTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/performance/PerformanceTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/performance/xpathtokenparser/XPathTokenParserPerformTest.java
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/ads.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/anotation.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/complex.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/number.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/orders.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/people.dtd
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/recurele.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/synthetic.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/texttype1.xml
  apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/texttype2.xml

*******************************

Archives (+ indicates readable, $ unreadable): 

 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/antlr-3.2.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/avro-1.4.0-fixes.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/avro-1.4.0-sources-fixes.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/commons-cli-1.1.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/commons-codec-1.2.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/commons-lang-2.4.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/commons-logging-1.1.1.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/compress-lzf-0.8.4.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/concurrentlinkedhashmap-lru-1.2.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/dom4j-1.6.1.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/jaxen-1.1-beta-6.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/jaxme-api-0.3.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/jsr173_1.0_api.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/msv-20030807.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/pull-parser-2.1.10.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/relaxngDatatype-20030807.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/test/jsr173_1.0_ri.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/test/junit-3.8.1.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/test/junitperf-1.8.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/isorelax-20030108.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/jaxme-0.3.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/jaxme-js-0.3.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/jaxme-xs-0.3.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/jtidy-4aug2000r7-dev.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/xalan-2.5.1.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/xercesImpl-2.6.2.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/xpp3-1.1.3.3.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/xsdlib-20030807.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/guava-r08.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/high-scale-lib-1.1.2.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jackson-core-asl-1.4.0.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jackson-mapper-asl-1.4.0.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jamm-0.2.5.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/je-5.0.34.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/commons-io-1.4.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/javax.servlet-1.4.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/log4j-1.2.15.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/org.mortbay.jetty.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/serializer-2.9.1.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/ws-commons-util-1.0.2.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmldb.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmlrpc-client-3.1.2.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmlrpc-common-3.1.2.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmlrpc-server-3.1.2.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jline-0.9.94.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jna.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/json-simple-1.1.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/libthrift-0.6.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/log4j-1.2.16.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/mx4j-tools.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/platform.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/servlet-api-2.5-20081211.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/slf4j-api-1.6.1.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/slf4j-log4j12-1.6.1.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/snakeyaml-1.6.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/snappy-java-1.0.3.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/xmldb/xmldb.jar
 $ apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/zookeeper-3.3.5.jar
 
*****************************************************
  Files with Apache License headers will be marked AL
  Binary files (which do not require AL headers) will be marked B
  Compressed archives will be marked A
  Notices, licenses etc will be marked N
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/.rat-excludes
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/CHANGES.txt
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/LICENSE.txt
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/NEWS.txt
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/NOTICE.txt
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/README.txt
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/JavaTest.class
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/README.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/access.properties
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/cassandra-env.sh
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/cassandra-topology.properties
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/cassandra.yaml
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/BtreeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/CFInvertIndexCleaner$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/CFInvertIndexCleaner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/CFInvertIndexTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/CollectionStore.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/CollectionStoreMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/RemoveCollectionTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/XMLDBStore.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/XMLStore$XMLHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/XMLStore.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/XMLStoreMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XMLNodeDigestResolver.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XMLReadNodeCallback.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XMLReadNodeCommand.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XMLReadNodeCommandSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XMLReadNodeResponse.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XMLReadNodeResponseSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XMLReadNodeVerbHandler$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XMLReadNodeVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathQueryCallback.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathQueryCommand.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathQueryCommandSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathQueryResolver.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathQueryResponse.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathQueryResponseSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathQueryVerbHandler$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathQueryVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathResult$XPathResultType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/XPathResultSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/AvgResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/AvgResultSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/CountResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/CountResultSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/FunctionReturn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/FunctionReturnSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/MaxResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/MaxResultSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/MinResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/MinResultSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/ResultTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/SeqResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/SeqResultSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/SumResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/SumResultSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/TextResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/TextResultSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/XMLDocNodeIDs.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/XMLDocXMLParts.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/XMLNodeForMutations.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/cassandra/verbhandler/result/XPathResultFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/CollectionMetaData.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/Config.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/CreateCollection.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/CreateXMLDoc.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/DataFlushServiceFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/FileSystemTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/InstantMetaDataFlushService$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/InstantMetaDataFlushService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/MutationFlushService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/ParseColIDFromCFNameTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/RemoveCollection.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/RemoveXMLDoc.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/SysConfig.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/XMLDBCatalogManager$FlushRunnable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/XMLDBCatalogManager$RefreshMetaTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/XMLDBCatalogManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/XMLDBCatalogManagerMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/XMLMetaData.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/config/XMLSchemaMetaData.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/AttributeNode.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/AttributeNodeImpl.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/AttributeNodeSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/ElementNode.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/ElementNodeImpl.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/ElementNodeSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/LocalXMLReadRunnable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/NodeProxy$NodeProxyType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/NodeProxy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/XMLNode$XMLNodeComparatorByID.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/XMLNode.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/XMLNodeForMutation.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/XMLNodeForMutationTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/XMLNodeImpl.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/XMLNodeMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/XMLNodeSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/cache/CacheManager$CacheType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/cache/CacheManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/cache/DomNodeCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/cache/SubSequenceCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/formatter/IXMLNodeFormatter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/formatter/IndentedXMLNodeFormatter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/formatter/IndentedXMLNodeFormatterTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/formatter/NormalXMLNodeFormatter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/numbering/INumberingSchema.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/numbering/NumberingSchema.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/numbering/NumberingSchemaTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/schema/ComplexType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/schema/SchemaElement.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/schema/SchemaSimpleType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/schema/SchemaType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/schema/SchemasTree$TreeNode.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/schema/SchemasTree.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/schema/XMLSchema.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/typesystem/DoubleComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/typesystem/IntegerComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/typesystem/LongComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/typesystem/TypeResolver.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/typesystem/UTF8Comparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/dom/typesystem/ValueType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/gms/IGMSObserver.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/gms/IGMSSubject.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/gms/ZooKeeperBasedGMS.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/ComparatorByRangeFirst.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/FileSizeKeyComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/Node.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/NodeBinding.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/NodeComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/NodeIDComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/NodeUnit.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/XMLIndexManager$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/XMLIndexManager$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/XMLIndexManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/BtreeDecorator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/BtreeFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/CFBasedBtree.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/CFBasedBtreeMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/CacheBtree.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/ComposeKeyBtree.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/ComposeKeyBtreeMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/DbEnv.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/IBtree.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/IndexQueryResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/LazyCacheBtree$UpdateSpeed.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/btree/LazyCacheBtree.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/cache/IIndexCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/cache/IndexCache$PosterList.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/cache/IndexCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/filter/IXMLFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/filter/IdentityXMLFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/filter/RootNodeFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/filter/XMLLocalDocFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/invertindex/CFInvertIndex$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/invertindex/CFInvertIndex.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/invertindex/CFInvertIndexMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/invertindex/ICFRetrievalStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/invertindex/IInvertIndex.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/invertindex/InvertIndexDecorator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/invertindex/ParallelCFRetrieval$RetrievalTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/index/invertindex/ParallelCFRetrieval.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/MessageDigester.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/Permission.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/PermissionDeniedException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/PermissionFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/UnixStylePermission.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/UnixStylePermissionSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/User.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/UserModTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/UserSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/XMLDBSecurityManager$RefreshMetaTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/security/XMLDBSecurityManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/storexml/StoreNoSplitXMLTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/storexml/StoreSplittedXMLTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/storexml/StoreTextTypeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/CassandraSchemaProxy$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/CassandraSchemaProxy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/ColumnFamilySerializable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/ColumnFamilyStoreProxy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/ColumnFamilyStoreSerializable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/DroppableRunnable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/FileUtil.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/IDigestAble.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/ISerializable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/IXMLNodeSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/IXPathResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/LocalCFStoreProxy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/StringOutputStream.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/StringOutputStreamTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/TestUtilities.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/XMLNodeSerializerMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/XMLUtilities.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/XMLUtilitiesTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/XUpdateTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/util/ZooKeeperUtil.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xmlrpc/XmlRpcServerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/ComplexXPathTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/DistributeXPathProcessor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/ExecContext.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/LocalXPathQueryRunnable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/QueryColRecursiveTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/QueryMultiCollectionTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/XPathCompilerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/XPathConstant.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/XPathFunctionTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/XPathProcessorV2$XPathError.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/XPathProcessorV2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/XPathProcessorV2MBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/XPathSequence.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/XPathTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/XPathTokenParserTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/XPathTypeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/FunctionDef.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/FunctionPool.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/IXPathFunction.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathAverage.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathContainFunc.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathContainsFileSize.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathCount.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementGEFileSize.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQFileSize.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQInt.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQString.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementsGEFileSize.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementsGTFileSize.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementsGTInt.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementsLEFileSize.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTFileSize.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTInt.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTString.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathMax.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathMin.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathSubSeqStep2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathSubsequence.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathSubsequence1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathSum.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/function/functionimpl/XPathText.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/ParseException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/SimpleCharStream.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/Token.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/TokenMgrError.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/XPathCompiler$JJCalls.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/XPathCompiler$LookaheadSuccess.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/XPathCompiler.class
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/XPathCompiler.jj
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/XPathCompilerConstants.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/XPathCompilerTokenManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/IMCXPathException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/ParseException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/SimpleCharStream.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/Token.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/TokenMgrError.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/XPathParser$JJCalls.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/XPathParser$LookaheadSuccess.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/XPathParser.class
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/XPathParser.jj
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/XPathParserConstants.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/XPathParserTokenManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathtoken/ParseException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathtoken/SimpleCharStream.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathtoken/Token.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathtoken/TokenMgrError.class
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathtoken/XPathToken.jj
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathtoken/XPathTokenParser.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathtoken/XPathTokenParserConstants.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathtoken/XPathTokenParserTokenManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/AppendHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/AppendHandlerMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/AppendLevel2Test.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/AppendRollBack.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/RollbackTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/XUpdateAppendMultiAttr.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/XUpdateAppendTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/XUpdateClientTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/XUpdateDeleteTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/XUpdateProcessor$AppendContext.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/XUpdateProcessor$DeleteContext.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/XUpdateProcessor$UpdateContext.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/XUpdateProcessor$XMLHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/XUpdateProcessor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xupdate/XUpdateTextTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/DisXMLDbServer$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/DisXMLDbServer$ServletBootstrap.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/DisXMLDbServer$ShutdownListener$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/DisXMLDbServer$ShutdownListener.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/DisXMLDbServer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/XMLDBServerBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/servlets/HttpServletRequestWrapper$CachingServletInputStream.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/servlets/HttpServletRequestWrapper$RequestParamater.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/servlets/HttpServletRequestWrapper$StringEnumeration.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/servlets/HttpServletRequestWrapper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/jettyserver/servlets/Log4jInit.class
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/log4j-server.properties
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/log4j-tools.properties
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/AbstractSerializationsTester$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/AbstractSerializationsTester.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/CleanupHelper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/EmbeddedServer$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/EmbeddedServer$GatewayService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/EmbeddedServer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/InterNode.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/SchemaLoader$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/SchemaLoader$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/SchemaLoader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/Util.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/AllowAllAuthenticator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/AllowAllAuthority.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/AuthenticatedUser.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/IAuthenticator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/IAuthority.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/Permission.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/Resources.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/SimpleAuthenticator$PasswordMode.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/SimpleAuthenticator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/SimpleAuthority.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/auth/SimpleAuthorityTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/AutoSavingCache$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/AutoSavingCache$Writer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/AutoSavingCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/AutoSavingKeyCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/AutoSavingRowCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/CacheProviderTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/CacheProviderTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/ConcurrentLinkedHashCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/ConcurrentLinkedHashCacheProvider.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/FreeableMemory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/ICache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/IRowCacheProvider.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/InstrumentingCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/InstrumentingCacheMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/SerializingCache$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/SerializingCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cache/SerializingCacheProvider.class
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/Cli.g
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/Cli.tokens
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliClient$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliClient$AddKeyspaceArgument.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliClient$CfDefNamesComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliClient$ColumnFamilyArgument.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliClient$Function.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliClient$KsDefNamesComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliClient.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliCommandHelp.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliCompiler$ANTLRNoCaseStringStream.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliCompiler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliCompleter.class
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliHelp.yaml
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliLexer$DFA15.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliLexer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliMain.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliOptions$CLIOptions.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliOptions.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$DFA2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$DFA6.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$addColumnFamily_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$addKeyspace_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$arrayConstruct_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$assumeStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$attrValueDouble_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$attrValueInt_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$attrValueString_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$attrValue_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$attr_name_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$columnFamilyExpr_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$columnFamily_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$columnName_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$columnOrSuperColumn_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$command_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$comparator_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$connectStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$consistencyLevelStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$countStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$delColumnFamily_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$delKeyspace_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$delStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$describeCluster_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$describeTable_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$dropIndex_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$entityName_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$exitStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$functionArgument_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$functionCall_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$getCondition_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$getStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$hashConstruct_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$hashElementPair_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$helpStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$host_name_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$host_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$incrStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$incrementValue_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$ip_address_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$keyRangeExpr_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$keyValuePairExpr_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$keyValuePair_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$keyspaceNewName_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$keyspace_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$listStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$newColumnFamily_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$operator_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$password_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$port_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$replica_placement_strategy_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$root_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$rowKey_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$rowValue_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$setStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$showClusterName_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$showKeyspaces_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$showSchema_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$showStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$showVersion_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$statement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$truncateStatement_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$typeIdentifier_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$updateColumnFamily_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$updateKeyspace_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$useKeyspace_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$username_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser$value_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliParser.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliSessionState.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliUserHelp.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/CliUtils.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/client/RingCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/client/TestRingCache.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/AIOExecutorService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/Context.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/CreationTimeAwareFuture.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutorTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutorTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/IExecutorMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/JMXConfigurableThreadPoolExecutor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/JMXConfigurableThreadPoolExecutorMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutorMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/NamedThreadFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/Stage.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/concurrent/StageManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/CFMetaData.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/CFMetaDataTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/ColumnDefinition.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/ColumnDefinitionTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/Config$CommitLogSync.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/Config$DiskAccessMode.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/Config$RequestSchedulerId.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/Config$XMLServerMode.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/Config.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/ConfigurationException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/DatabaseDescriptor$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/DatabaseDescriptor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/DatabaseDescriptorTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/EncryptionOptions$InternodeEncryption.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/EncryptionOptions.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/KSMetaData.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/ReplicationStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/RequestSchedulerOptions.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/Schema.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/config/SeedProviderDef.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/AbstractModification.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/AlterTableStatement$OperationType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/AlterTableStatement.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/Attributes.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/BatchStatement.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CQLStatement.class
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/Cql.g
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/Cql.tokens
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CqlLexer$DFA14.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CqlLexer$DFA7.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CqlLexer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CqlParser$DFA1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CqlParser$DFA39.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CqlParser$DFA9.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CqlParser$comparatorType_return.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CqlParser.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CreateColumnFamilyStatement.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CreateIndexStatement.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/CreateKeyspaceStatement.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/DeleteStatement.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/DropIndexStatement.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/EntityType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/Operation$OperationType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/Operation.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/QueryProcessor$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/QueryProcessor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/Relation.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/RelationType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/SelectExpression.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/SelectStatement.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/StatementType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/Term.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/TermType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/UpdateStatement.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/WhereClause.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/AbstractJdbcType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/AbstractJdbcUUID.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcAscii.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcBoolean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcBytes.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcCounterColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcDate.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcDecimal.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcDouble.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcFloat.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcInt32.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcInteger.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcLexicalUUID.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcLong.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcTimeUUID.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcUTF8.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/JdbcUUID.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/MarshalException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/jdbc/TypesMap.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/AbstractColumnContainer$DeletionInfo.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/AbstractColumnContainer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ArrayBackedSortedColumns$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ArrayBackedSortedColumns$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ArrayBackedSortedColumns$ColumnNamesSet$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ArrayBackedSortedColumns$ColumnNamesSet.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ArrayBackedSortedColumns$ForwardSortedCollection.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ArrayBackedSortedColumns$ReverseSortedCollection$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ArrayBackedSortedColumns$ReverseSortedCollection.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ArrayBackedSortedColumns.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ArrayBackedSortedColumnsTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CleanupTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CollationController$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CollationController.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Column.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamily.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyNotDefinedException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilySerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyStore$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyStore$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyStore$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyStore$CacheType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyStore$ViewFragment.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyStore.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyStoreMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyStoreTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyStoreTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnFamilyType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnIndexer$RowHeader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnIndexer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnSerializer$CorruptColumnException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ColumnSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CommitLogTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CounterColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CounterColumnTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CounterMutation.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CounterMutationSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CounterMutationTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CounterMutationVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/CounterUpdateColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DBConstants.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DataTracker$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DataTracker$View.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DataTracker.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DecoratedKey$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DecoratedKey.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DefinitionsUpdateVerbHandler$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DefinitionsUpdateVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DefsTable$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DefsTable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DefsTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/DeletedColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/EchoedRow.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ExpiringColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/HintedHandOffManager$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/HintedHandOffManager$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/HintedHandOffManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/HintedHandOffManagerMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/IColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/IColumnContainer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/IMutation.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ISortedColumns$Factory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ISortedColumns.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/IndexScanCommand$IndexScanCommandSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/IndexScanCommand.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/KeyCacheTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/KeyspaceNotDefinedException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Memtable$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Memtable$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Memtable$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Memtable$4.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Memtable$5.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Memtable$6.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Memtable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/MeteredFlusher$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/MeteredFlusher.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/MultitableTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/NameSortTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RangeSliceCommand.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RangeSliceCommandSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RangeSliceReply.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ReadCommand.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ReadCommandSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ReadMessageTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ReadRepairVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ReadResponse.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ReadResponseSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ReadVerbHandler$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ReadVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RecoveryManager2Test.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RecoveryManager3Test.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RecoveryManagerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RecoveryManagerTruncateTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RemoveColumnFamilyTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RemoveColumnFamilyWithFlush1Test.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RemoveColumnFamilyWithFlush2Test.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RemoveColumnTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RemoveSubColumnTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RemoveSuperColumnTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Row$RowSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Row.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowCacheTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowIterationTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowIteratorFactory$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowIteratorFactory$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowIteratorFactory$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowIteratorFactory$ConvertToColumnIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowIteratorFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowMutation$RowMutationSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowMutation$XUpdateCommand.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowMutation.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowMutationVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/RowTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SchemaCheckVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ScrubTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SerializationsTest$Statics$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SerializationsTest$Statics$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SerializationsTest$Statics.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SerializationsTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SliceByNamesReadCommand.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SliceByNamesReadCommandSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SliceFromReadCommand.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SliceFromReadCommandSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SuperColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SuperColumnSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SuperColumnTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SystemTable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/SystemTableTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Table$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Table$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Table.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TableMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TableTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TableTest$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TableTest$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TableTest$4.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TableTest$5.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TableTest$6.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TableTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ThreadSafeSortedColumns$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/ThreadSafeSortedColumns.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TimeSortTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TreeMapBackedSortedColumns$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TreeMapBackedSortedColumns.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TruncateResponse$TruncateResponseSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TruncateResponse.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TruncateVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/Truncation.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/TruncationSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/UnserializableColumnFamilyException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/WriteResponse$WriteResponseSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/WriteResponse.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/IColumnIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/ICountableColumnIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/IdentityQueryFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/IndexedSliceReader$BlockFetcher.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/IndexedSliceReader$IndexedBlockFetcher.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/IndexedSliceReader$SimpleBlockFetcher.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/IndexedSliceReader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/SSTableNamesIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/SSTableSliceIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/SimpleAbstractColumnIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/columniterator/SimpleSliceReader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/AbstractCommitLogExecutorService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/BatchCommitLogExecutorService$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/BatchCommitLogExecutorService$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/BatchCommitLogExecutorService$CheaterFutureTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/BatchCommitLogExecutorService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/CommitLog$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/CommitLog$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/CommitLog$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/CommitLog$4.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/CommitLog$5.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/CommitLog$6.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/CommitLog$LogRecordAdder.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/CommitLog.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/CommitLogMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/CommitLogSegment.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/ICommitLogExecutorService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/PeriodicCommitLogExecutorService$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/PeriodicCommitLogExecutorService$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/PeriodicCommitLogExecutorService$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/PeriodicCommitLogExecutorService$4.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/PeriodicCommitLogExecutorService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/ReplayPosition$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/ReplayPosition$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/ReplayPosition$ReplayPositionSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/commitlog/ReplayPosition.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/AbstractCompactedRow.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/AbstractCompactionIterable$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/AbstractCompactionIterable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/AbstractCompactionStrategy$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/AbstractCompactionStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/AbstractCompactionTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionController.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionInfo$Holder.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionInfo.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionIterable$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionIterable$Reducer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionIterable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$4.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$5.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$6.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$7.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$8.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$9.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$CleanupInfo.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$CompactionExecutor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$CompactionExecutorStatsCollector.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$ScrubInfo.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$SimpleFuture.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$ValidationCompactionIterable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager$ValidationExecutor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionManagerMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionsPurgeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/CompactionsTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/LazilyCompactedRow$Reducer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/LazilyCompactedRow.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/LeveledCompactionStrategy$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/LeveledCompactionTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/LeveledManifest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/OneCompactionTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/OperationType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable$CompactedRowContainer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable$Deserializer$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable$Deserializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable$NotifyingSSTableIdentityIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable$Reducer$DeserializedColumnIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable$Reducer$MergeTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable$Reducer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable$RowContainer$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable$RowContainer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable$Unwrapper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/ParallelCompactionIterable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/PrecompactedRow.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategy$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategy$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategyTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/context/CounterContext$ContextState.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/context/CounterContext$LazyHolder.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/context/CounterContext.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/context/CounterContextTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/context/IContext$ContextRelationship.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/context/IContext.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/filter/AbstractColumnIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/filter/IFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/filter/NamesQueryFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/filter/QueryFilter$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/filter/QueryFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/filter/QueryPath.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/filter/SliceQueryFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/index/PerColumnSecondaryIndex.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/index/PerRowSecondaryIndex.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/index/SecondaryIndex$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/index/SecondaryIndex.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/index/SecondaryIndexBuilder.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/index/SecondaryIndexManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/index/SecondaryIndexSearcher.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/index/keys/KeysIndex.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/index/keys/KeysSearcher.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/AbstractCommutativeType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/AbstractCompositeType$ParsedComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/AbstractCompositeType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/AbstractType$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/AbstractType$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/AbstractType$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/AbstractType$4.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/AbstractType$5.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/AbstractType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/AsciiType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/BooleanType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/BytesType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/CompositeType$StaticParsedComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/CompositeType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/CompositeTypeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/CounterColumnType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/DateType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/DecimalType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/DoubleType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/DynamicCompositeType$DynamicParsedComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/DynamicCompositeType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/DynamicCompositeTypeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/FileSizeType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/FloatType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/Int32Type.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/IntegerType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/IntegerTypeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/LexicalUUIDType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/LocalByPartionerType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/LongType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/MarshalException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/ReversedType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/ReversedTypeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/RoundTripTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/TimeUUIDType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/TimeUUIDTypeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/TypeCompareTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/TypeParser.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/TypeParserTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/TypeValidationTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/UTF8Type$UTF8Validator$State.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/UTF8Type$UTF8Validator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/UTF8Type.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/UUIDType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/marshal/UUIDTypeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/AddColumnFamily.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/AddKeyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/DropColumnFamily.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/DropKeyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/Migration.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/RenameColumnFamily.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/RenameKeyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/SerializationsTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/UpdateColumnFamily.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/UpdateKeyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/AddColumnFamily.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/AddKeyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/CfDef.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/ColumnDef.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/DropColumnFamily.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/DropKeyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/IndexType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/KsDef.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/Migration.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/RenameColumnFamily.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/RenameKeyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/UpdateColumnFamily.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/db/migration/avro/UpdateKeyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/AbstractBounds$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/AbstractBounds$AbstractBoundsSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/AbstractBounds$Type.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/AbstractBounds.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/AbstractBoundsTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/AbstractByteOrderedPartitioner$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/AbstractByteOrderedPartitioner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/BigIntegerToken.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/BootStrapper$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/BootStrapper$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/BootStrapper$BootstrapTokenCallback.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/BootStrapper$BootstrapTokenVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/BootStrapper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/BootStrapperTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/BootStrapperTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/Bounds.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/ByteOrderedPartitioner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/ByteOrderedPartitionerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/BytesToken.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/CollatingOrderPreservingPartitioner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/CollatingOrderPreservingPartitionerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/IPartitioner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/LocalPartitioner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/LocalToken.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/OrderPreservingPartitioner$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/OrderPreservingPartitioner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/OrderPreservingPartitionerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/PartitionerTestCase.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/RandomPartitioner$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/RandomPartitioner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/RandomPartitionerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/Range.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/RangeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/StringToken.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/Token$TokenFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/Token$TokenSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/dht/Token.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/ApplicationState.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/ArrivalWindow.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/ArrivalWindowTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/EndpointState.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/EndpointStateSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/EndpointStatesSerializationHelper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/FailureDetector.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/FailureDetectorMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestAck2Message.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestAck2MessageSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestAck2VerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestAckMessage.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestAckMessageSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestAckVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestSerializationHelper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestSynMessage.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestSynMessageSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestSynVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossipDigestTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/Gossiper$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/Gossiper$GossipTask$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/Gossiper$GossipTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/Gossiper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/GossiperMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/HeartBeatState.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/HeartBeatStateSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/IEndpointStateChangeSubscriber.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/IFailureDetectionEventListener.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/IFailureDetector.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/IFailureNotification.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/PureRandom.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/SerializationsTest$Statics.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/SerializationsTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/VersionGenerator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/VersionedValue$VersionedValueFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/VersionedValue$VersionedValueSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/gms/VersionedValue.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ColumnFamilyInputFormat$SplitCallable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ColumnFamilyInputFormat.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ColumnFamilyInputFormatTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ColumnFamilyOutputFormat$NullOutputCommitter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ColumnFamilyOutputFormat.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ColumnFamilyRecordReader$RowIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ColumnFamilyRecordReader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ColumnFamilyRecordWriter$RangeClient.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ColumnFamilyRecordWriter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ColumnFamilySplit.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/hadoop/ConfigHelper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/BloomFilterTrackerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/CompactSerializerTest$1DirScanner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/CompactSerializerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/IColumnSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/ICompactSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/ICompactSerializer2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/ICompactSerializer3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/LazilyCompactedRowTest$LazilyCompactingController.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/LazilyCompactedRowTest$PreCompactingController.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/LazilyCompactedRowTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/SerDeUtils.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/CompressedRandomAccessReader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/CompressedRandomAccessReaderTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/CompressedRandomAccessReaderTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/CompressedSequentialWriter$CompressedFileWriterMark.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/CompressedSequentialWriter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/CompressionMetadata$Chunk.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/CompressionMetadata$Writer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/CompressionMetadata.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/CompressionParameters.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/CorruptedBlockException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/DeflateCompressor$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/DeflateCompressor$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/DeflateCompressor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/ICompressor$WrappedArray.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/ICompressor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/compress/SnappyCompressor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/AbstractSSTableSimpleWriter$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/AbstractSSTableSimpleWriter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/BloomFilterTracker.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/Component$Type.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/Component.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/Descriptor$TempState.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/Descriptor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/DescriptorTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/IndexHelper$IndexInfo.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/IndexHelper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/IndexHelperTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/IndexSummary$KeyPosition.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/IndexSummary.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/KeyIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/LegacySSTableTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/ReducingKeyIterator$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/ReducingKeyIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTable$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTable$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTable$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableBoundedScanner$BoundedKeyScanningIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableBoundedScanner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableDeletingTask$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableDeletingTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableIdentityIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableLoader$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableLoader$Client.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableLoader$CountDownCallback.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableLoader$LoaderFuture.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableLoader$OutputHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableLoader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableMetadata$Collector.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableMetadata$SSTableMetadataSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableMetadata.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableMetadataSerializerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableReader$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableReader$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableReader$3$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableReader$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableReader$Operator$Equals.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableReader$Operator$GreaterThan.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableReader$Operator$GreaterThanOrEqualTo.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableReader$Operator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableReader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableReaderTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableScanner$KeyScanningIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableScanner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableSimpleUnsortedWriter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableSimpleWriter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableSimpleWriterTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableUtils$Appender.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableUtils$Context$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableUtils$Context$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableUtils$Context.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableUtils.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableWriter$IndexWriter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/sstable/SSTableWriter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/AbstractDataInput.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$10.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$11.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$4.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$5.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$6.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$7.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$8.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest$9.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedRandomAccessFileTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedSegmentedFile$Builder.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/BufferedSegmentedFile.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/ColumnIterator$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/ColumnIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/ColumnSet.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/ColumnSortedMap.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/CompressedSegmentedFile$Builder.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/CompressedSegmentedFile.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/DataOutputBuffer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/FastByteArrayInputStream.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/FastByteArrayOutputStream.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/FileDataInput.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/FileMark.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/FileUtils$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/FileUtils$FileComparator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/FileUtils.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/IIterableColumns.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/MappedFileDataInput$MappedFileDataInputMark.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/MappedFileDataInput.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/MemoryInputStream.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/MemoryOutputStream.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/MmappedSegmentedFile$Builder.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/MmappedSegmentedFile.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/OutputBuffer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/RandomAccessReader$BufferedRandomAccessFileMark.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/RandomAccessReader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/SegmentedFile$Builder.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/SegmentedFile$Segment.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/SegmentedFile$SegmentIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/SegmentedFile.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/SequentialWriter$BufferedFileWriterMark.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/io/util/SequentialWriter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/AbstractEndpointSnitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/AbstractNetworkTopologySnitch$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/AbstractNetworkTopologySnitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/AbstractReplicationStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/AdaptiveLatencyTracker.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/DynamicEndpointSnitch$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/DynamicEndpointSnitch$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/DynamicEndpointSnitch$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/DynamicEndpointSnitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/DynamicEndpointSnitchMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/DynamicEndpointSnitchTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/EC2SnitchTest$TestEC2Snitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/EC2SnitchTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/Ec2MultiRegionSnitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/Ec2Snitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/EndpointSnitchInfo.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/EndpointSnitchInfoMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/IEndpointSnitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/ILatencySubscriber.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/LocalStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/NetworkTopologyStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/NetworkTopologyStrategyTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/OldNetworkTopologyStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/OldNetworkTopologyStrategyTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/PropertyFileSnitch$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/PropertyFileSnitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/RackInferringSnitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/ReplicationStrategyEndpointCacheTest$FakeNetworkTopologyStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/ReplicationStrategyEndpointCacheTest$FakeOldNetworkTopologyStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/ReplicationStrategyEndpointCacheTest$FakeSimpleStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/ReplicationStrategyEndpointCacheTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/SeedProvider.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/SimpleSeedProvider.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/SimpleSnitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/SimpleStrategy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/SimpleStrategyTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/TokenMetadata$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/TokenMetadata.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/locator/TokenMetadataTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/AsyncResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/CachingMessageProducer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/CallbackInfo.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/CompactEndpointSerializationHelper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/Header.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/HeaderSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/HeaderTypes.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/IAsyncCallback.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/IAsyncResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/IMessageCallback.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/IVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/IncomingTcpConnection.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/Message.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/MessageDeliveryTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/MessageProducer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/MessageSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/MessagingService$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/MessagingService$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/MessagingService$MSHandle.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/MessagingService$SocketThread.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/MessagingService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/MessagingServiceMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/OutboundTcpConnection.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/OutboundTcpConnectionPool.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/ProtocolHeader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/ResponseVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/io/SerializerType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/sink/IMessageSink.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/net/sink/SinkManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/notifications/INotification.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/notifications/INotificationConsumer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/notifications/SSTableAddedNotification.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/notifications/SSTableListChangedNotification.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/scheduler/IRequestScheduler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/scheduler/NoScheduler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/scheduler/RoundRobinScheduler$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/scheduler/RoundRobinScheduler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/scheduler/WeightedQueue$Entry.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/scheduler/WeightedQueue.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/scheduler/WeightedQueueMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/security/SSLFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AbstractCassandraDaemon$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AbstractCassandraDaemon$CleaningThreadPool.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AbstractCassandraDaemon.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AbstractRowResolver.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AbstractWriteResponseHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$CFPair.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$RepairFuture.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$RepairSession$Differencer$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$RepairSession$Differencer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$RepairSession$RepairJob.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$RepairSession.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$TreeRequest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$TreeRequestVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$TreeResponse.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$TreeResponseVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService$Validator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyServiceCounterTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyServiceStandardTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyServiceTestAbstract$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AntiEntropyServiceTestAbstract.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AsyncRepairCallback$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/AsyncRepairCallback.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/CassandraDaemon.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/CassandraServerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/ClientState.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/ConsistencyLevelTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/ConsistencyLevelTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/DatacenterReadCallback.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/DatacenterSyncWriteResponseHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/DatacenterWriteResponseHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/DigestMismatchException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/EmbeddedCassandraService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/EmbeddedCassandraServiceTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/GCInspector$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/GCInspector.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/IReadCommand.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/IResponseResolver.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/IWriteResponseHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/IndexScanVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/InitClientTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/LeaveAndBootstrapTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/LoadBroadcaster$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/LoadBroadcaster.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/MigrationManager$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/MigrationManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/MoveTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RangeSliceResponseResolver$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RangeSliceResponseResolver$Reducer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RangeSliceResponseResolver$RowIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RangeSliceResponseResolver.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RangeSliceVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/ReadCallback$AsyncRepairRunner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/ReadCallback.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RemoveTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RemoveTest$ReplicationSink.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RemoveTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RepairCallback.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RowDigestResolver.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RowRepairResolver.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/RowResolverTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/SerializationsTest$Statics.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/SerializationsTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/SocketSessionManagementService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$4.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$5.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$6$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$6.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$7.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$8.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$DroppableRunnable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$LocalReadRunnable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy$WritePerformer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxy.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxyMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageProxyTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService$4.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService$5.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService$6.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService$7.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService$8.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService$9.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService$Verb.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageServiceAccessor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageServiceClientTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageServiceMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/StorageServiceServerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/TruncateResponseHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/service/WriteResponseHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/BootstrapTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/FileStreamTask$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/FileStreamTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/IncomingStreamReader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/OperationType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/PendingFile$PendingFileSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/PendingFile.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/ReplicationFinishedVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/SerializationsTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamHeader$StreamHeaderSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamHeader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamIn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamInSession.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamOut.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamOutSession.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamReply$FileStatusSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamReply$Status.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamReply.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamReplyVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamRequestMessage$StreamRequestMessageSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamRequestMessage.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamRequestVerbHandler.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamUtil.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingRepairTask$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingRepairTask$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingRepairTask$StreamingRepairRequest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingRepairTask$StreamingRepairResponse.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingRepairTask$StreamingRepairTaskSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingRepairTask.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingServiceMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingTransferTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingTransferTest$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingTransferTest$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingTransferTest$Mutator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/streaming/StreamingTransferTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/AuthenticationException$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/AuthenticationException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/AuthenticationRequest$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/AuthenticationRequest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/AuthorizationException$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/AuthorizationException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$Factory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$add_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$batch_mutate_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$describe_cluster_name_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$describe_keyspace_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$describe_keyspaces_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$describe_partitioner_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$describe_ring_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$describe_schema_versions_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$describe_snitch_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$describe_splits_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$describe_version_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$execute_cql_query_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$get_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$get_count_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$get_indexed_slices_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$get_range_slices_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$get_slice_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$insert_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$login_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$multiget_count_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$multiget_slice_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$remove_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$remove_counter_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$set_keyspace_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$system_add_column_family_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$system_add_keyspace_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$system_drop_column_family_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$system_drop_keyspace_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$system_update_column_family_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$system_update_keyspace_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient$truncate_call.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncClient.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$AsyncIface.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Client$Factory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Client.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Iface.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$ProcessFunction.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$add.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$batch_mutate.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$describe_cluster_name.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$describe_keyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$describe_keyspaces.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$describe_partitioner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$describe_ring.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$describe_schema_versions.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$describe_snitch.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$describe_splits.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$describe_version.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$execute_cql_query.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$get.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$get_count.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$get_indexed_slices.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$get_range_slices.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$get_slice.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$insert.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$login.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$multiget_count.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$multiget_slice.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$remove.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$remove_counter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$set_keyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$system_add_column_family.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$system_add_keyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$system_drop_column_family.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$system_drop_keyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$system_update_column_family.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$system_update_keyspace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor$truncate.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$Processor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$add_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$add_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$add_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$add_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$batch_mutate_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$batch_mutate_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$batch_mutate_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$batch_mutate_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_cluster_name_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_cluster_name_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_cluster_name_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_cluster_name_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_keyspace_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_keyspace_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_keyspace_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_keyspace_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_keyspaces_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_keyspaces_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_keyspaces_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_keyspaces_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_partitioner_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_partitioner_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_partitioner_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_partitioner_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_ring_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_ring_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_ring_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_ring_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_schema_versions_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_schema_versions_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_schema_versions_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_schema_versions_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_snitch_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_snitch_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_snitch_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_snitch_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_splits_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_splits_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_splits_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_splits_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_version_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_version_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_version_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$describe_version_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$execute_cql_query_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$execute_cql_query_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$execute_cql_query_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$execute_cql_query_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_count_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_count_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_count_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_count_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_indexed_slices_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_indexed_slices_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_indexed_slices_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_indexed_slices_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_range_slices_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_range_slices_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_range_slices_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_range_slices_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_slice_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_slice_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_slice_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$get_slice_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$insert_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$insert_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$insert_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$insert_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$login_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$login_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$login_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$login_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$multiget_count_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$multiget_count_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$multiget_count_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$multiget_count_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$multiget_slice_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$multiget_slice_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$multiget_slice_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$multiget_slice_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$remove_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$remove_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$remove_counter_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$remove_counter_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$remove_counter_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$remove_counter_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$remove_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$remove_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$set_keyspace_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$set_keyspace_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$set_keyspace_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$set_keyspace_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_add_column_family_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_add_column_family_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_add_column_family_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_add_column_family_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_add_keyspace_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_add_keyspace_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_add_keyspace_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_add_keyspace_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_drop_column_family_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_drop_column_family_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_drop_column_family_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_drop_column_family_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_drop_keyspace_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_drop_keyspace_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_drop_keyspace_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_drop_keyspace_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_update_column_family_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_update_column_family_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_update_column_family_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_update_column_family_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_update_keyspace_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_update_keyspace_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_update_keyspace_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$system_update_keyspace_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$truncate_args$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$truncate_args.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$truncate_result$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra$truncate_result.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Cassandra.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CassandraDaemon$ThriftServer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CassandraDaemon.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CassandraServer$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CassandraServer$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CassandraServer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CfDef$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CfDef.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Column$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Column.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ColumnDef$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ColumnDef.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ColumnOrSuperColumn$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ColumnOrSuperColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ColumnParent$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ColumnParent.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ColumnPath$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ColumnPath.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Compression.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ConsistencyLevel.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Constants.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CounterColumn$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CounterColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CounterSuperColumn$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CounterSuperColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CqlMetadata$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CqlMetadata.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CqlResult$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CqlResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CqlResultType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CqlRow$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CqlRow.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CustomTHsHaServer$Invocation.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CustomTHsHaServer$SelectorThread.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CustomTHsHaServer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CustomTNonBlockingServer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CustomTThreadPoolServer$WorkerProcess.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/CustomTThreadPoolServer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Deletion$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Deletion.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/IndexClause$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/IndexClause.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/IndexExpression$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/IndexExpression.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/IndexOperator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/IndexType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/InvalidRequestException$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/InvalidRequestException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/KeyCount$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/KeyCount.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/KeyRange$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/KeyRange.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/KeySlice$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/KeySlice.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/KsDef$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/KsDef.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Mutation$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/Mutation.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/NotFoundException$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/NotFoundException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/SchemaDisagreementException$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/SchemaDisagreementException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/SlicePredicate$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/SlicePredicate.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/SliceRange$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/SliceRange.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/SuperColumn$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/SuperColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/TBinaryProtocol$Factory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/TBinaryProtocol.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/TCustomNonblockingServerSocket.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/TCustomServerSocket.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ThriftValidation.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/ThriftValidationTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/TimedOutException$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/TimedOutException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/TokenRange$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/TokenRange.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/UnavailableException$_Fields.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/thrift/UnavailableException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/BulkLoader$CmdLineOptions.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/BulkLoader$ExternalClient.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/BulkLoader$LoaderOptions.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/BulkLoader$ProgressIndicator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/BulkLoader.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/ColumnFamilyStoreMBeanIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/GetVersion.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/NodeCmd$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/NodeCmd$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/NodeCmd$NodeCommand.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/NodeCmd$ToolCommandLine.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/NodeCmd$ToolOptions.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/NodeCmd.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/NodeProbe.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/SSTableExport.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/SSTableExportTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/SSTableImport$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/SSTableImport$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/SSTableImport$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/SSTableImport$JsonColumn.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/SSTableImport.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/SSTableImportTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/tools/ThreadPoolProxyMBeanIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/AbstractStatsDeque.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/Allocator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/BloomCalculations$BloomSpecification.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/BloomCalculations.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/BloomFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/BloomFilterSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/BloomFilterTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/BoundedStatsDeque.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/BoundedStatsDequeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/ByteBufferUtil$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/ByteBufferUtil.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/ByteBufferUtilTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/BytesReadTracker.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/BytesReadTrackerTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/CLibrary.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/CloseableIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/DefaultDouble.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/DefaultInteger.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/DestructivePQIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/EstimatedHistogram$EstimatedHistogramSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/EstimatedHistogram.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/EstimatedHistogramTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/ExpiringMap$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/ExpiringMap$CacheableObject.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/ExpiringMap.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/FBUtilities$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/FBUtilities$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/FBUtilities$3.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/FBUtilities$WrappedCloseableIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/FBUtilities.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/FBUtilitiesTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/Filter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/FilterTestHelper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/GuidGenerator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/HeapAllocator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/IMergeIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/IntervalTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/IntervalTree/Interval$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/IntervalTree/Interval$2.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/IntervalTree/Interval.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/IntervalTree/IntervalNode.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/IntervalTree/IntervalTree.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/IntervalTreeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/KeyGenerator$IntGenerator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/KeyGenerator$RandomStringGenerator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/KeyGenerator$WordGenerator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/KeyGenerator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/LatencyTracker.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/LegacyBloomFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/LegacyBloomFilterSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/LegacyBloomFilterTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MergeIterator$Candidate.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MergeIterator$ManyToOne.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MergeIterator$OneToOne.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MergeIterator$Reducer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MergeIterator$TrivialOneToOne.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MergeIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MergeIteratorTest$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MergeIteratorTest$CLI.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MergeIteratorTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$Hashable$HashableSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$Hashable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$Inner$InnerSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$Inner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$Leaf$LeafSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$Leaf.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$MerkleTreeSerializer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$RowHash.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$StopRecursion$BadRange.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$StopRecursion$InvalidHash.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$StopRecursion$TooDeep.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$StopRecursion.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$TreeRange.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree$TreeRangeIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTree.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTreeTest$HIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MerkleTreeTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/MurmurHash.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/Mx4jTool.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/NodeId$LocalIds.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/NodeId$LocalNodeIdHistory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/NodeId$NodeIdRecord.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/NodeId$OneShotRenewer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/NodeId.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/Pair.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/ResetableIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/ResourceWatcher$WatchedResource.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/ResourceWatcher.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/SerializationsTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/SimpleCondition.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/SkipNullRepresenter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/SlabAllocator$Region.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/SlabAllocator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/StatusLogger.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/Throttle$ThroughputFunction.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/Throttle.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/UUIDGen.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/UUIDTests.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/WrappedRunnable.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/XMLUtils.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/avro/UUID.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/obs/ArrayUtil.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/obs/BitUtil.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/utils/obs/OpenBitSet.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ArrayUtils.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/Base64Decoder.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/Base64Encoder.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ByteArray.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ByteArrayPool$PoolThreadLocal.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ByteArrayPool.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ByteConversion.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/CharArrayPool$PoolThreadLocal.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/CharArrayPool.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/CharSlice.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/CollectionScanner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/CompressedWhitespace.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/Compressor.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/DatabaseConfigurationException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/DeadlockException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/DirectoryScanner.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/EXistInputSource.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/EXistOutputKeys.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ExistSAXParserFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/FastByteBuffer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/FastStringBuffer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/FileInputSource.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/FileUtils$DeleteDir$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/FileUtils$DeleteDir.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/FileUtils$FileRef.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/FileUtils.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/FixedByteArray.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/FloatingPointConverter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/GZIPInputSource.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/GlobToRegex.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/Heap.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/IncludeXMLFilter.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/LockException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/MimeType.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/OrderedLinkedList$Node.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/OrderedLinkedList$OrderedListIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/OrderedLinkedList$SimpleNode.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/OrderedLinkedList.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/PorterStemmer.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ProgressBar.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ProgressIndicator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ProgressListener.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/Range.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ReadOnlyException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/SelectorUtils.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/SwapVals.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/SyntaxException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/UTF8.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/XMLChar.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/ZipEntryInputSource.class
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/mime-types.xml
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/AbstractRemoteResource.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/CollectionImpl.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/CollectionManagementServiceImpl.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/DatabaseImpl.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/DatabaseInstanceManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/EXistResource.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/ExtendedResource.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/FullXmldbURI.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/MapResourceSet$NewResourceIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/MapResourceSet.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteBinaryResource.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteCollection.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteCollectionManagementService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteCompiledExpression.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteDatabaseInstanceManager.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteResourceIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteResourceSet$NewResourceIterator.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteResourceSet.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteUserManagementService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteXMLResource.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteXPathQueryService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/RemoteXUpdateQueryService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/ResourceSetHelper.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/ShutdownListener.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/UserManagementService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/XPathQueryServiceImpl.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/XQueryService.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/XmldbURI.class
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/package.html
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmlrpc/AbstractCachedResult.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmlrpc/RpcAPI.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmlrpc/RpcConnection$1.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmlrpc/RpcConnection.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmlrpc/RpcConnectionMBean.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmlrpc/RpcServlet$DefaultHandlerMapping.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmlrpc/RpcServlet$XmldbRequestProcessorFactoryFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmlrpc/RpcServlet.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmlrpc/XmldbRequestProcessorFactory.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xquery/Constants.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xquery/XPathException.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xquery/util/URIUtils.class
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/passwd.properties
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/performance/PerformanceTest.class
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/performance/xpathtokenparser/XPathTokenParserPerformTest.class
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/schema-sample.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/build.properties.default
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/build.xml
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/README.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/access.properties
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/cassandra-env.sh
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/cassandra-topology.properties
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/cassandra.yaml
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/log4j-server.properties
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/log4j-tools.properties
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/passwd.properties
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/schema-sample.txt
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/javautils/README
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/javautils/build.xml
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/javautils/src/main/java/org/apache/cassandra/contrib/utils/service/CassandraServiceDataCleaner.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/javautils/src/test/java/org/apache/cassandra/contrib/utils/service/CassandraServiceTest.java
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/pig/README.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/pig/bin/pig_cassandra
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/pig/build.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/pig/example-script.pig
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/pig/src/java/org/apache/cassandra/hadoop/pig/CassandraStorage.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/README.Debian
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/TODO
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.conf
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.in.sh
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.install
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.postinst
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/changelog
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/compat
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/control
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/copyright
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/default
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/dirs
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/init
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/rules
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/doc/cql/CQL.textile
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/doc/xml/XQuery.jude
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/client_only/README.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/client_only/bin/client_only
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/client_only/build.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/client_only/conf/cassandra.yaml
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/client_only/src/ClientOnlyExample.java
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/hadoop_word_count/README.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/hadoop_word_count/bin/word_count
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/hadoop_word_count/bin/word_count_counters
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/hadoop_word_count/bin/word_count_setup
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/hadoop_word_count/build.xml
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/hadoop_word_count/ivy.xml
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/hadoop_word_count/src/WordCount.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/hadoop_word_count/src/WordCountCounters.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/hadoop_word_count/src/WordCountSetup.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/cassandra.thrift
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/AuthenticationException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/AuthenticationRequest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/AuthorizationException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/Cassandra.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/CfDef.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/Column.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/ColumnDef.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/ColumnOrSuperColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/ColumnParent.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/ColumnPath.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/Compression.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/ConsistencyLevel.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/Constants.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/CounterColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/CounterSuperColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/CqlMetadata.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/CqlResult.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/CqlResultType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/CqlRow.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/Deletion.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/IndexClause.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/IndexExpression.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/IndexOperator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/IndexType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/InvalidRequestException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/KeyCount.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/KeyRange.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/KeySlice.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/KsDef.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/Mutation.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/NotFoundException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/SchemaDisagreementException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/SlicePredicate.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/SliceRange.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/SuperColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/TimedOutException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/TokenRange.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/interface/thrift/gen-java/org/apache/cassandra/thrift/UnavailableException.java
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/antlr-3.2.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/avro-1.4.0-fixes.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/avro-1.4.0-sources-fixes.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/commons-cli-1.1.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/commons-codec-1.2.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/commons-lang-2.4.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/commons-logging-1.1.1.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/compress-lzf-0.8.4.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/concurrentlinkedhashmap-lru-1.2.jar
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/LICENSE.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/build.xml
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/dom4j-1.6.1.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/jaxen-1.1-beta-6.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/jaxme-api-0.3.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/jsr173_1.0_api.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/msv-20030807.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/pull-parser-2.1.10.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/relaxngDatatype-20030807.jar
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/test/JUnitPerf_LICENSE
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/test/jsr173_1.0_ri.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/test/junit-3.8.1.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/test/junitperf-1.8.jar
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/clover.license
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/isorelax-20030108.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/jaxme-0.3.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/jaxme-js-0.3.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/jaxme-xs-0.3.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/jtidy-4aug2000r7-dev.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/xalan-2.5.1.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/tools/xercesImpl-2.6.2.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/xpp3-1.1.3.3.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/xsdlib-20030807.jar
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/maven.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/project.properties
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/project.xml
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/guava-r08.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/high-scale-lib-1.1.2.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jackson-core-asl-1.4.0.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jackson-mapper-asl-1.4.0.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jamm-0.2.5.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/je-5.0.34.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/commons-io-1.4.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/javax.servlet-1.4.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/log4j-1.2.15.jar
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/log4j-LICENSE.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/log4j-NOTICE.txt
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/org.mortbay.jetty.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/serializer-2.9.1.jar
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/serializer-LICENSE.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/serializer-NOTICE.txt
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/ws-commons-util-1.0.2.jar
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/ws-commons-util-LICENSE.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmldb-LICENSE.txt
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmldb.jar
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmlrpc-LICENSE.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmlrpc-NOTICE.txt
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmlrpc-client-3.1.2.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmlrpc-common-3.1.2.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmlrpc-server-3.1.2.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jline-0.9.94.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jna.jar
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jna.license.txt
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/json-simple-1.1.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/libthrift-0.6.jar
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/antlr-3.1.3.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/avro-1.3.1-dev.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/commons-cli-1.1.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/commons-codec-1.2.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/commons-collections-3.2.1.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/commons-lang-2.4.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/compress-lzf-0.8.4.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/concurrentlinkedhashmap-lru-1.2.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/guava-r08.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/high-scale-lib-1.1.2.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/jackson-core-asl-1.4.0.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/jackson-mapper-asl-1.4.0.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/jamm-0.2.2.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/jetty-6.1.21.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/jetty-util-6.1.21.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/jline-0.9.94.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/json-simple-1.1.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/libthrift-0.5.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/log4j-1.2.16.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/servlet-api-2.5-20081211.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/slf4j-api-1.6.1.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/slf4j-log4j12-1.6.1.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/snakeyaml-1.6.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/snappy-java-1.0.3.txt
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/log4j-1.2.16.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/mx4j-tools.jar
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/mx4j.license.txt
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/platform.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/servlet-api-2.5-20081211.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/slf4j-api-1.6.1.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/slf4j-log4j12-1.6.1.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/snakeyaml-1.6.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/snappy-java-1.0.3.jar
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/xmldb/xmldb-LICENSE.txt
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/xmldb/xmldb.jar
  A     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/zookeeper-3.3.5.jar
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/myChanges.txt
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/apache-cassandra.spec
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/cassandra
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/cassandra.conf
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/cassandra.in.sh
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/default
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/avro/internode.genavro
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/CollectionStore.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/CollectionStoreMBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/XMLDBStore.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/XMLStore.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/XMLStoreMBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLNodeDigestResolver.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeCallback.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeCommand.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeResponse.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeVerbHandler.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryCallback.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryCommand.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryResolver.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryResponse.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryVerbHandler.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/AvgResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/CountResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/FunctionReturn.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/FunctionReturnSerializer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/MaxResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/MinResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/SeqResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/SumResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/TextResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XMLDocNodeIDs.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XMLDocXMLParts.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XMLNodeForMutations.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XPathResultFactory.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/CollectionMetaData.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/DataFlushServiceFactory.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/InstantMetaDataFlushService.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/MutationFlushService.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/SysConfig.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLDBCatalogManager.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLDBCatalogManagerMBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLMetaData.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLSchemaMetaData.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/AttributeNode.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/AttributeNodeImpl.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/AttributeNodeSerializer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/ElementNode.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/ElementNodeImpl.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/ElementNodeSerializer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/LocalXMLReadRunnable.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/NodeProxy.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNode.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeForMutation.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeImpl.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeMBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeSerializer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/cache/CacheManager.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/cache/DomNodeCache.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/cache/SubSequenceCache.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/formatter/IXMLNodeFormatter.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/formatter/IndentedXMLNodeFormatter.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/formatter/NormalXMLNodeFormatter.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/numbering/INumberingSchema.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/numbering/NumberingSchema.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/ComplexType.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemaElement.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemaSimpleType.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemaType.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemasTree.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/XMLSchema.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/DoubleComparator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/IntegerComparator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/LongComparator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/TypeResolver.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/UTF8Comparator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/ValueType.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/gms/IGMSObserver.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/gms/IGMSSubject.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/gms/ZooKeeperBasedGMS.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/ComparatorByRangeFirst.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/FileSizeKeyComparator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/Node.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeBinding.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeComparator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeIDComparator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeUnit.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/XMLIndexManager.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/BtreeDecorator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/BtreeFactory.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/CFBasedBtree.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/CFBasedBtreeMBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/CacheBtree.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/ComposeKeyBtree.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/ComposeKeyBtreeMBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/DbEnv.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/IBtree.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/IndexQueryResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/LazyCacheBtree.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/cache/IIndexCache.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/cache/IndexCache.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/IXMLFilter.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/IdentityXMLFilter.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/RootNodeFilter.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/XMLLocalDocFilter.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/CFInvertIndex.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/CFInvertIndexMBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/ICFRetrievalStrategy.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/IInvertIndex.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/InvertIndexDecorator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/ParallelCFRetrieval.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/MessageDigester.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/Permission.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/PermissionDeniedException.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/PermissionFactory.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/UnixStylePermission.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/UnixStylePermissionSerializer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/User.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/UserSerializer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/XMLDBSecurityManager.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/CassandraSchemaProxy.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ColumnFamilySerializable.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ColumnFamilyStoreProxy.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ColumnFamilyStoreSerializable.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/DroppableRunnable.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/FileUtil.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/IDigestAble.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ISerializable.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/IXMLNodeSerializer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/IXPathResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/LocalCFStoreProxy.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/StringOutputStream.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/XMLNodeSerializerMBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/XMLUtilities.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ZooKeeperUtil.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/DistributeXPathProcessor.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/ExecContext.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/LocalXPathQueryRunnable.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathConstant.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathProcessorV2.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathProcessorV2MBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathSequence.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/FunctionDef.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/FunctionPool.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/IXPathFunction.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathAverage.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathContainFunc.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathContainsFileSize.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathCount.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementGEFileSize.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQFileSize.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQInt.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQString.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsGEFileSize.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsGTFileSize.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsGTInt.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLEFileSize.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTFileSize.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTInt.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTString.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathMax.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathMin.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSubSeqStep2.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSubsequence.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSubsequence1.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSum.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathText.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathcompile/ParseException.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathcompile/SimpleCharStream.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathcompile/Token.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathcompile/TokenMgrError.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathcompile/XPathCompiler.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathcompile/XPathCompiler.jj
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathcompile/XPathCompilerConstants.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathcompile/XPathCompilerTokenManager.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/IMCXPathException.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/ParseException.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/SimpleCharStream.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/Token.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/TokenMgrError.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/XPathParser.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/XPathParser.jj
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/XPathParserConstants.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/XPathParserTokenManager.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathtoken/ParseException.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathtoken/SimpleCharStream.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathtoken/Token.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathtoken/TokenMgrError.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathtoken/XPathToken.jj
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathtoken/XPathTokenParser.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathtoken/XPathTokenParserConstants.java
  GEN   apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathtoken/XPathTokenParserTokenManager.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/AppendHandler.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/AppendHandlerMBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/AppendRollBack.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/XUpdateProcessor.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/DisXMLDbServer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/XMLDBServerBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/servlets/HttpServletRequestWrapper.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/servlets/Log4jInit.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/auth/AllowAllAuthenticator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/auth/AllowAllAuthority.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/auth/AuthenticatedUser.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/auth/IAuthenticator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/auth/IAuthority.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/auth/Permission.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/auth/Resources.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/auth/SimpleAuthenticator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/auth/SimpleAuthority.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/AutoSavingCache.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/AutoSavingKeyCache.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/AutoSavingRowCache.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/ConcurrentLinkedHashCache.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/ConcurrentLinkedHashCacheProvider.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/FreeableMemory.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/ICache.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/IRowCacheProvider.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/InstrumentingCache.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/InstrumentingCacheMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/SerializingCache.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cache/SerializingCacheProvider.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cli/Cli.g
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cli/CliClient.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cli/CliCommandHelp.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cli/CliCompiler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cli/CliCompleter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cli/CliMain.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cli/CliOptions.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cli/CliSessionState.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cli/CliUserHelp.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cli/CliUtils.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/client/RingCache.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/AIOExecutorService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/Context.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/CreationTimeAwareFuture.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/IExecutorMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/JMXConfigurableThreadPoolExecutor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/JMXConfigurableThreadPoolExecutorMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutorMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/NamedThreadFactory.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/Stage.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/concurrent/StageManager.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/CFMetaData.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/ColumnDefinition.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/Config.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/ConfigurationException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/EncryptionOptions.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/KSMetaData.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/ReplicationStrategy.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/RequestSchedulerOptions.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/Schema.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/config/SeedProviderDef.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/AbstractModification.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/AlterTableStatement.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/Attributes.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/BatchStatement.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/CQLStatement.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/Cql.g
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/CreateColumnFamilyStatement.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/CreateIndexStatement.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/CreateKeyspaceStatement.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/DeleteStatement.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/DropIndexStatement.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/Operation.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/QueryProcessor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/Relation.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/SelectExpression.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/SelectStatement.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/StatementType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/Term.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/UpdateStatement.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/WhereClause.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/AbstractJdbcType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/AbstractJdbcUUID.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcAscii.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcBoolean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcBytes.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcCounterColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcDate.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcDecimal.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcDouble.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcFloat.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcInt32.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcInteger.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcLexicalUUID.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcLong.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcTimeUUID.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcUTF8.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/JdbcUUID.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/MarshalException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/cql/jdbc/TypesMap.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/AbstractColumnContainer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ArrayBackedSortedColumns.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/CollationController.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/Column.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ColumnFamily.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ColumnFamilyNotDefinedException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ColumnFamilySerializer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ColumnFamilyStoreMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ColumnFamilyType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ColumnIndexer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ColumnSerializer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/CounterColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/CounterMutation.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/CounterMutationVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/CounterUpdateColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/DBConstants.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/DataTracker.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/DecoratedKey.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/DefinitionsUpdateVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/DefsTable.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/DeletedColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/EchoedRow.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ExpiringColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/HintedHandOffManager.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/HintedHandOffManagerMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/IColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/IColumnContainer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/IMutation.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ISortedColumns.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/IndexScanCommand.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/KeyspaceNotDefinedException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/Memtable.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/MeteredFlusher.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/RangeSliceCommand.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/RangeSliceReply.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ReadCommand.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ReadRepairVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ReadResponse.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ReadVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/Row.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/RowIteratorFactory.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/RowMutation.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/RowMutationVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/SchemaCheckVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/SliceByNamesReadCommand.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/SliceFromReadCommand.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/SuperColumn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/SystemTable.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/Table.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/TableMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/ThreadSafeSortedColumns.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/TreeMapBackedSortedColumns.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/TruncateResponse.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/TruncateVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/Truncation.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/UnserializableColumnFamilyException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/WriteResponse.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/columniterator/IColumnIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/columniterator/ICountableColumnIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/columniterator/IdentityQueryFilter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/columniterator/IndexedSliceReader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/columniterator/SSTableNamesIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/columniterator/SSTableSliceIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/columniterator/SimpleAbstractColumnIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/columniterator/SimpleSliceReader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/commitlog/AbstractCommitLogExecutorService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/commitlog/BatchCommitLogExecutorService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/commitlog/CommitLog.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/commitlog/CommitLogMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/commitlog/CommitLogSegment.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/commitlog/ICommitLogExecutorService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/commitlog/PeriodicCommitLogExecutorService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/commitlog/ReplayPosition.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/AbstractCompactedRow.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/AbstractCompactionIterable.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/AbstractCompactionStrategy.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/AbstractCompactionTask.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/CompactionController.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/CompactionInfo.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/CompactionIterable.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/CompactionManager.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/CompactionManagerMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/CompactionTask.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/LazilyCompactedRow.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/LeveledCompactionTask.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/OperationType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/ParallelCompactionIterable.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/PrecompactedRow.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategy.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/context/CounterContext.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/context/IContext.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/filter/AbstractColumnIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/filter/IFilter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/filter/NamesQueryFilter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/filter/QueryFilter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/filter/QueryPath.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/filter/SliceQueryFilter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/index/PerColumnSecondaryIndex.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/index/PerRowSecondaryIndex.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/index/SecondaryIndex.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/index/SecondaryIndexBuilder.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/index/SecondaryIndexManager.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/index/SecondaryIndexSearcher.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/index/keys/KeysIndex.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/index/keys/KeysSearcher.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/AbstractCommutativeType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/AbstractCompositeType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/AbstractType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/AsciiType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/BooleanType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/BytesType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/CompositeType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/CounterColumnType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/DateType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/DecimalType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/DoubleType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/DynamicCompositeType.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/FileSizeType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/FloatType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/Int32Type.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/IntegerType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/LexicalUUIDType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/LocalByPartionerType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/LongType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/MarshalException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/ReversedType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/TimeUUIDType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/TypeParser.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/UTF8Type.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/UUIDType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/migration/AddColumnFamily.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/migration/AddKeyspace.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/migration/DropKeyspace.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/migration/Migration.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/migration/RenameColumnFamily.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/migration/RenameKeyspace.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/migration/UpdateColumnFamily.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/migration/UpdateKeyspace.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/AbstractBounds.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/AbstractByteOrderedPartitioner.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/BigIntegerToken.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/BootStrapper.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/Bounds.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/ByteOrderedPartitioner.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/BytesToken.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/CollatingOrderPreservingPartitioner.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/IPartitioner.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/LocalPartitioner.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/LocalToken.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/OrderPreservingPartitioner.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/RandomPartitioner.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/Range.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/StringToken.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/dht/Token.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/ApplicationState.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/EndpointState.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/FailureDetector.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/FailureDetectorMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/GossipDigest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/GossipDigestAck2Message.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/GossipDigestAck2VerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/GossipDigestAckMessage.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/GossipDigestAckVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/GossipDigestSynMessage.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/Gossiper.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/GossiperMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/HeartBeatState.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/IEndpointStateChangeSubscriber.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/IFailureDetectionEventListener.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/IFailureDetector.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/IFailureNotification.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/PureRandom.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/VersionGenerator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/gms/VersionedValue.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/hadoop/ColumnFamilyInputFormat.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/hadoop/ColumnFamilyOutputFormat.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordReader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordWriter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/hadoop/ColumnFamilySplit.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/hadoop/ConfigHelper.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/IColumnSerializer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/ICompactSerializer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/ICompactSerializer2.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/ICompactSerializer3.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/SerDeUtils.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/compress/CompressedRandomAccessReader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/compress/CompressedSequentialWriter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/compress/CompressionMetadata.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/compress/CompressionParameters.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/compress/CorruptedBlockException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/compress/DeflateCompressor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/compress/ICompressor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/compress/SnappyCompressor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/AbstractSSTableSimpleWriter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/BloomFilterTracker.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/Component.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/Descriptor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/IndexHelper.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/IndexSummary.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/KeyIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/ReducingKeyIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTable.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTableBoundedScanner.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTableDeletingTask.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTableIdentityIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTableLoader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTableMetadata.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTableReader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTableScanner.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTableSimpleUnsortedWriter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTableSimpleWriter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/sstable/SSTableWriter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/AbstractDataInput.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/BufferedSegmentedFile.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/ColumnSortedMap.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/CompressedSegmentedFile.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/DataOutputBuffer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/FastByteArrayInputStream.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/FastByteArrayOutputStream.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/FileDataInput.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/FileMark.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/FileUtils.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/IIterableColumns.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/MappedFileDataInput.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/MemoryInputStream.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/MemoryOutputStream.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/MmappedSegmentedFile.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/OutputBuffer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/RandomAccessReader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/SegmentedFile.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/io/util/SequentialWriter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/AbstractEndpointSnitch.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/AbstractNetworkTopologySnitch.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/AbstractReplicationStrategy.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/DynamicEndpointSnitch.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/DynamicEndpointSnitchMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/Ec2MultiRegionSnitch.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/Ec2Snitch.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/EndpointSnitchInfo.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/EndpointSnitchInfoMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/IEndpointSnitch.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/ILatencySubscriber.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/LocalStrategy.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/NetworkTopologyStrategy.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/OldNetworkTopologyStrategy.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/RackInferringSnitch.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/SeedProvider.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/SimpleSeedProvider.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/SimpleSnitch.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/SimpleStrategy.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/locator/TokenMetadata.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/AsyncResult.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/CachingMessageProducer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/CallbackInfo.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/CompactEndpointSerializationHelper.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/Header.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/HeaderTypes.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/IAsyncCallback.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/IAsyncResult.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/IMessageCallback.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/IVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/IncomingTcpConnection.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/Message.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/MessageDeliveryTask.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/MessageProducer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/MessagingService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/MessagingServiceMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/OutboundTcpConnection.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/OutboundTcpConnectionPool.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/ProtocolHeader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/ResponseVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/io/SerializerType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/sink/IMessageSink.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/net/sink/SinkManager.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/notifications/INotification.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/notifications/INotificationConsumer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/notifications/SSTableAddedNotification.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/notifications/SSTableListChangedNotification.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/scheduler/IRequestScheduler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/scheduler/NoScheduler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/scheduler/RoundRobinScheduler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/scheduler/WeightedQueue.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/scheduler/WeightedQueueMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/security/SSLFactory.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/AbstractRowResolver.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/AbstractWriteResponseHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/AntiEntropyService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/AsyncRepairCallback.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/CassandraDaemon.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/ClientState.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/DatacenterReadCallback.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/DatacenterSyncWriteResponseHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/DatacenterWriteResponseHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/DigestMismatchException.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/EmbeddedCassandraService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/GCInspector.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/IReadCommand.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/IResponseResolver.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/IWriteResponseHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/IndexScanVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/LoadBroadcaster.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/MigrationManager.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/RangeSliceResponseResolver.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/RangeSliceVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/ReadCallback.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/RepairCallback.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/RowDigestResolver.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/RowRepairResolver.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/SocketSessionManagementService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/StorageProxy.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/StorageProxyMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/StorageService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/StorageServiceMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/TruncateResponseHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/service/WriteResponseHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/FileStreamTask.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/IncomingStreamReader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/OperationType.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/PendingFile.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/ReplicationFinishedVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamHeader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamIn.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamInSession.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamOut.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamOutSession.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamReply.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamReplyVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamRequestMessage.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamRequestVerbHandler.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamingRepairTask.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamingService.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/streaming/StreamingServiceMBean.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/thrift/CassandraDaemon.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/thrift/CassandraServer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/thrift/CustomTHsHaServer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/thrift/CustomTNonBlockingServer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/thrift/CustomTThreadPoolServer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/thrift/TBinaryProtocol.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/thrift/TCustomNonblockingServerSocket.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/thrift/TCustomServerSocket.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/thrift/ThriftValidation.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/tools/BulkLoader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/tools/GetVersion.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/tools/NodeCmd.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/tools/NodeProbe.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/tools/SSTableExport.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/tools/SSTableImport.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/AbstractStatsDeque.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/Allocator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/BloomCalculations.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/BloomFilter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/BloomFilterSerializer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/BoundedStatsDeque.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/ByteBufferUtil.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/BytesReadTracker.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/CLibrary.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/CloseableIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/DefaultDouble.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/DefaultInteger.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/DestructivePQIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/EstimatedHistogram.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/ExpiringMap.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/FBUtilities.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/Filter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/GuidGenerator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/HeapAllocator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/IMergeIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/IntervalTree/Interval.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/IntervalTree/IntervalNode.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/IntervalTree/IntervalTree.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/LatencyTracker.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/LegacyBloomFilter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/LegacyBloomFilterSerializer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/MergeIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/MerkleTree.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/MurmurHash.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/Mx4jTool.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/NodeId.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/Pair.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/ResourceWatcher.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/SimpleCondition.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/SkipNullRepresenter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/SlabAllocator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/StatusLogger.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/Throttle.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/UUIDGen.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/WrappedRunnable.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/XMLUtils.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/obs/ArrayUtil.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/obs/BitUtil.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/utils/obs/OpenBitSet.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ArrayUtils.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Base64Decoder.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Base64Encoder.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ByteArray.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ByteArrayPool.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ByteConversion.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CharArrayPool.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CharSlice.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CollectionScanner.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CompressedWhitespace.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Compressor.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/DatabaseConfigurationException.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/DeadlockException.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/DirectoryScanner.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/EXistInputSource.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/EXistOutputKeys.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ExistSAXParserFactory.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FastByteBuffer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FastStringBuffer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FileInputSource.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FileUtils.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FixedByteArray.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FloatingPointConverter.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/GZIPInputSource.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/GlobToRegex.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Heap.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/IncludeXMLFilter.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/LockException.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/MimeType.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/OrderedLinkedList.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/PorterStemmer.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ProgressBar.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ProgressIndicator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ProgressListener.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Range.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ReadOnlyException.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/SelectorUtils.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/SwapVals.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/SyntaxException.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/UTF8.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/XMLChar.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ZipEntryInputSource.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/mime-types.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/AbstractRemoteResource.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/CollectionImpl.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/CollectionManagementServiceImpl.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/DatabaseImpl.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/DatabaseInstanceManager.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/EXistResource.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/ExtendedResource.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/FullXmldbURI.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/MapResourceSet.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteBinaryResource.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteCollection.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteCollectionManagementService.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteCompiledExpression.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteDatabaseInstanceManager.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteResourceIterator.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteResourceSet.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteUserManagementService.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteXMLResource.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteXPathQueryService.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteXUpdateQueryService.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/ResourceSetHelper.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/ShutdownListener.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/UserManagementService.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/XPathQueryServiceImpl.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/XQueryService.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/XmldbURI.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/package.html
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/AbstractCachedResult.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcAPI.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcConnection.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcConnectionMBean.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcServlet.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/XmldbRequestProcessorFactory.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xquery/Constants.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xquery/XPathException.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xquery/util/URIUtils.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/resources/org/apache/cassandra/cli/CliHelp.yaml
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/cassandra.in.sh
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/conf/access.properties
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/conf/cassandra-topology.properties
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/conf/cassandra.yaml
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/conf/datacenters.properties
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/conf/log4j-junit.properties
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/conf/log4j-server.properties
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/complex.xml
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/corrupt-sstables/Super5-f-2-Data.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/corrupt-sstables/Super5-f-2-Filter.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/corrupt-sstables/Super5-f-2-Index.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/corrupt-sstables/Super5-f-2-Statistics.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/legacy-sstables/b/Keyspace1/Standard1-b-0-Data.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/legacy-sstables/b/Keyspace1/Standard1-b-0-Filter.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/legacy-sstables/b/Keyspace1/Standard1-b-0-Index.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/legacy-sstables/e/Keyspace1/Standard1-e-0-Data.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/legacy-sstables/e/Keyspace1/Standard1-e-0-Filter.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/legacy-sstables/e/Keyspace1/Standard1-e-0-Index.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/legacy-sstables/e/Keyspace1/Standard1-e-0-Statistics.db
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.RangeSliceCommand.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.Row.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.RowMutation.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.SliceByNamesReadCommand.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.SliceFromReadCommand.bin
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.Truncation.bin
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.WriteResponse.bin
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace1.bin
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace2.bin
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace3.bin
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace4.bin
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace5.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/gms.EndpointState.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/gms.Gossip.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/service.TreeRequest.bin
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/service.TreeResponse.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/streaming.PendingFile.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/streaming.StreamHeader.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/streaming.StreamReply.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/streaming.StreamRequestMessage.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/utils.BloomFilter.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/utils.EstimatedHistogram.bin
  B     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/utils.LegacyBloomFilter.bin
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/distributed/README.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/distributed/org/apache/cassandra/CassandraServiceController.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/distributed/org/apache/cassandra/CountersTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/distributed/org/apache/cassandra/MovementTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/distributed/org/apache/cassandra/MutationTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/distributed/org/apache/cassandra/TestBase.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/distributed/org/apache/cassandra/utils/BlobUtils.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/distributed/org/apache/cassandra/utils/KeyPair.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/long/org/apache/cassandra/db/LongTableTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/long/org/apache/cassandra/db/MeteredFlusherTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/long/org/apache/cassandra/db/compaction/LongCompactionSpeedTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/long/org/apache/cassandra/utils/LongBloomFilterTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/long/org/apache/cassandra/utils/LongLegacyBloomFilterTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/CounterCF.json
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/SimpleCF.json
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/SimpleCF.oldformat.json
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/SuperCF.json
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/UnsortedSuperCF.json
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/functions/configure_cassandra.sh
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/functions/install_cassandra.sh
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/functions/nodetool_cassandra.sh
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/functions/start_cassandra.sh
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/functions/stop_cassandra.sh
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/functions/wipe_cassandra.sh
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/whirr-default.properties
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/system/__init__.py
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/system/test_thrift_server.py
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/JavaTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/BtreeTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/CFInvertIndexCleaner.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/CFInvertIndexTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/RemoveCollectionTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/cassandra/verbhandler/result/ResultTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/Config.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/CreateCollection.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/CreateXMLDoc.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/FileSystemTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/ParseColIDFromCFNameTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/RemoveCollection.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/RemoveXMLDoc.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/dom/XMLNodeForMutationTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/dom/formatter/IndentedXMLNodeFormatterTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/dom/numbering/NumberingSchemaTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/security/UserModTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/storexml/StoreNoSplitXMLTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/storexml/StoreSplittedXMLTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/storexml/StoreTextTypeTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/StringOutputStreamTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/TestUtilities.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/XMLUtilitiesTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/XUpdateTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xmlrpc/XmlRpcServerTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/ComplexXPathTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/QueryColRecursiveTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/QueryMultiCollectionTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathCompilerTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathFunctionTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathTokenParserTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathTypeTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/AppendLevel2Test.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/RollbackTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateAppendMultiAttr.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateAppendTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateClientTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateDeleteTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateTextTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/AbstractSerializationsTester.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/CleanupHelper.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/EmbeddedServer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/SchemaLoader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/Util.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/auth/SimpleAuthorityTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/cache/CacheProviderTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/cli/CliTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/client/TestRingCache.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutorTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/config/CFMetaDataTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/config/ColumnDefinitionTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/config/DatabaseDescriptorTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/ArrayBackedSortedColumnsTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/CleanupTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/ColumnFamilyTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/CommitLogTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/CounterColumnTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/CounterMutationTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/DefsTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/KeyCacheTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/MultitableTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/NameSortTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/ReadMessageTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RecoveryManager2Test.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RecoveryManager3Test.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RecoveryManagerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RecoveryManagerTruncateTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RemoveColumnFamilyTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RemoveColumnFamilyWithFlush1Test.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RemoveColumnFamilyWithFlush2Test.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RemoveColumnTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RemoveSubColumnTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RemoveSuperColumnTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RowCacheTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RowIterationTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/RowTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/ScrubTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/SerializationsTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/SuperColumnTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/SystemTableTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/TableTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/TimeSortTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/compaction/OneCompactionTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategyTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/context/CounterContextTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/marshal/CompositeTypeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/marshal/DynamicCompositeTypeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/marshal/IntegerTypeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/marshal/ReversedTypeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/marshal/RoundTripTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/marshal/TimeUUIDTypeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/marshal/TypeCompareTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/marshal/TypeParserTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/marshal/TypeValidationTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/marshal/UUIDTypeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/db/migration/SerializationsTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/dht/AbstractBoundsTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/dht/BootStrapperTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/dht/ByteOrderedPartitionerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/dht/CollatingOrderPreservingPartitionerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/dht/OrderPreservingPartitionerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/dht/PartitionerTestCase.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/dht/RandomPartitionerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/dht/RangeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/gms/ArrivalWindowTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/gms/GossipDigestTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/gms/SerializationsTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/hadoop/ColumnFamilyInputFormatTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/BloomFilterTrackerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/CompactSerializerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/LazilyCompactedRowTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/compress/CompressedRandomAccessReaderTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/sstable/DescriptorTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/sstable/IndexHelperTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/sstable/SSTableMetadataSerializerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/sstable/SSTableReaderTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/sstable/SSTableSimpleWriterTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/sstable/SSTableTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/sstable/SSTableUtils.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/io/util/BufferedRandomAccessFileTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/locator/DynamicEndpointSnitchTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/locator/EC2SnitchTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/locator/NetworkTopologyStrategyTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/locator/OldNetworkTopologyStrategyTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/locator/ReplicationStrategyEndpointCacheTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/locator/SimpleStrategyTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/locator/TokenMetadataTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/net/MessageSerializer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/AntiEntropyServiceCounterTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/AntiEntropyServiceStandardTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/AntiEntropyServiceTestAbstract.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/CassandraServerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/ConsistencyLevelTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/EmbeddedCassandraServiceTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/InitClientTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/LeaveAndBootstrapTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/MoveTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/RemoveTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/RowResolverTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/SerializationsTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/StorageProxyTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/StorageServiceAccessor.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/StorageServiceClientTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/service/StorageServiceServerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/streaming/BootstrapTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/streaming/SerializationsTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/streaming/StreamUtil.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/streaming/StreamingTransferTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/thrift/ThriftValidationTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/tools/SSTableExportTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/tools/SSTableImportTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/BloomFilterTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/BoundedStatsDequeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/ByteBufferUtilTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/BytesReadTrackerTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/EstimatedHistogramTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/FBUtilitiesTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/FilterTestHelper.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/IntervalTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/IntervalTreeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/KeyGenerator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/LegacyBloomFilterTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/MergeIteratorTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/MerkleTreeTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/ResetableIterator.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/SerializationsTest.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/org/apache/cassandra/utils/UUIDTests.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/performance/PerformanceTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/performance/xpathtokenparser/XPathTokenParserPerformTest.java
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/ads.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/anotation.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/complex.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/number.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/orders.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/people.dtd
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/recurele.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/synthetic.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/texttype1.xml
 !????? apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/texttype2.xml
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/py_stress/README.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/py_stress/stress.py
  N     apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/README.txt
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/bin/stress
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/bin/stressd
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/build.xml
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/Session.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/Stress.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/StressAction.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/StressServer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/operations/CounterAdder.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/operations/CounterGetter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/operations/IndexedRangeSlicer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/operations/Inserter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/operations/MultiGetter.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/operations/RangeSlicer.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/operations/Reader.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/server/StressThread.java
  AL    apache-cassandra-1.0.0-rc1-SNAPSHOT-src/tools/stress/src/org/apache/cassandra/stress/util/Operation.java
 
 *****************************************************
 Printing headers for files without AL header...
 
 
 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/.rat-excludes
 =======================================================================
**/*.avpr
debian/**
.classpath
.rat-excludes
**/.project
**/.pydevproject
CHANGES.txt
.git/**
**/*.json
**/*.patch
interface/*/gen-*/**
src/gen-java/**
build/**
lib/licenses/*.txt
.settings/**
contrib/pig/example-script.pig
**/cassandra.yaml
**/*.db
redhat/apache-cassandra.spec
redhat/cassandra
redhat/cassandra.conf
redhat/cassandra.in.sh
redhat/default
.externalToolBuilders/**
test/data/serialization/*/*
**/*.wpr
conf/schema-sample.txt
drivers/txpy/txcql/cassandra/*
drivers/py/cql/cassandra/*
doc/cql/CQL*
build.properties.default

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/CHANGES.txt
 =======================================================================
1.0.0-rc1
 * Update CQL to generate microsecond timestamps by default (CASSANDRA-3227)
 * Fix counting CFMetadata towards Memtable liveRatio (CASSANDRA-3023)
 * Kill server on wrapped OOME such as from FileChannel.map (CASSANDRA-3201)
 * remove unnecessary copy when adding to row cache (CASSANDRA-3223)
 * Log message when a full repair operation completes (CASSANDRA-3207)
 * Fix streamOutSession keeping sstables references forever if the remote end
   dies (CASSANDRA-3216)
 * Remove dynamic_snitch boolean from example configuration (defaulting to 
   true) and set default badness threshold to 0.1 (CASSANDRA-3229)
 * Base choice of random or "balanced" token on bootstrap on whether
   schema definitions were found (CASSANDRA-3219)
 * Fixes for LeveledCompactionStrategy score computation, prioritization,
   scheduling, and performance (CASSANDRA-3224, 3234)
 * parallelize sstable open at server startup (CASSANDRA-2988)
 * fix handling of exceptions writing to OutboundTcpConnection (CASSANDRA-3235)
 * Allow using quotes in "USE <keyspace>;" CLI command (CASSANDRA-3208)
 * Don't allow any cache loading exceptions to halt startup (CASSANDRA-3218)
 * Fix sstableloader --ignores option (CASSANDRA-3247)
 * File descriptor limit increased in packaging (CASSANDRA-3206)
 * Fix deadlock in commit log during flush (CASSANDRA-3253)


1.0.0-beta1
 * removed binarymemtable (CASSANDRA-2692)
 * add commitlog_total_space_in_mb to prevent fragmented logs (CASSANDRA-2427)
 * removed commitlog_rotation_threshold_in_mb configuration (CASSANDRA-2771)
 * make AbstractBounds.normalize de-overlapp overlapping ranges (CASSANDRA-2641)
 * replace CollatingIterator, ReducingIterator with MergeIterator 
   (CASSANDRA-2062)
 * Fixed the ability to set compaction strategy in cli using create column 
   family command (CASSANDRA-2778)
 * clean up tmp files after failed compaction (CASSANDRA-2468)
 * restrict repair streaming to specific columnfamilies (CASSANDRA-2280)
 * don't bother persisting columns shadowed by a row tombstone (CASSANDRA-2589)
 * reset CF and SC deletion times after gc_grace (CASSANDRA-2317)
 * optimize away seek when compacting wide rows (CASSANDRA-2879)
 * single-pass streaming (CASSANDRA-2677, 3003)
 * use reference counting for deleting sstables instead of relying on GC
   (CASSANDRA-2521, 3179)
 * store hints as serialized mutations instead of pointers to data row
   (CASSANDRA-2045)
 * store hints in the coordinator node instead of in the closest replica 
   (CASSANDRA-2914)
 * add row_cache_keys_to_save CF option (CASSANDRA-1966)
 * check column family validity in nodetool repair (CASSANDRA-2933)
 * use lazy initialization instead of class initialization in NodeId
   (CASSANDRA-2953)
 * add paging to get_count (CASSANDRA-2894)
 * fix "short reads" in [multi]get (CASSANDRA-2643, 3157, 3192)

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/cassandra.yaml
 =======================================================================
# Cassandra storage config YAML 

# NOTE:
#   See http://wiki.apache.org/cassandra/StorageConfiguration for
#   full explanations of configuration directives
# /NOTE

# The name of the cluster. This is mainly used to prevent machines in
# one logical cluster from joining another.
cluster_name: 'seqtest'

# You should always specify InitialToken when setting up a production
# cluster for the first time, and often when adding capacity later.
# The principle is that each node should be given an equal slice of
# the token ring; see http://wiki.apache.org/cassandra/Operations
# for more details.
#
# If blank, Cassandra will request a token bisecting the range of
# the heaviest-loaded existing node.  If there is no load information
# available, such as is the case with a new cluster, it will pick
# a random token, which will lead to hot spots.
initial_token: 113427455640312821154458202477256070485

# See http://wiki.apache.org/cassandra/HintedHandoff
hinted_handoff_enabled: true
# this defines the maximum amount of time a dead host will have hints
# generated.  After it has been dead this long, hints will be dropped.
max_hint_window_in_ms: 3600000 # one hour
# Sleep this long after delivering each row or row fragment
hinted_handoff_throttle_delay_in_ms: 50

# authentication backend, implementing IAuthenticator; used to identify home
authenticator: org.apache.cassandra.auth.AllowAllAuthenticator

# authorization backend, implementing IAuthority; used to limit access/provide permissions
authority: org.apache.cassandra.auth.AllowAllAuthority

# The partitioner is responsible for distributing rows (by key) across
# nodes in the cluster.  Any IPartitioner may be used, including your
# own as long as it is on the classpath.  Out of the box, Cassandra
# provides org.apache.cassandra.dht.RandomPartitioner
# org.apache.cassandra.dht.ByteOrderedPartitioner,
# org.apache.cassandra.dht.OrderPreservingPartitioner (deprecated),
# and org.apache.cassandra.dht.CollatingOrderPreservingPartitioner
# (deprecated).
# 
# - RandomPartitioner distributes rows across the cluster evenly by md5.
#   When in doubt, this is the best option.
# - ByteOrderedPartitioner orders rows lexically by key bytes.  BOP allows
#   scanning rows in key order, but the ordering can generate hot spots

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathcompile/XPathCompiler.jj
 =======================================================================
/**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */
options
{
  JDK_VERSION = "1.5";
  UNICODE_INPUT = true;
  static = false;
}

PARSER_BEGIN(XPathCompiler)
package imc.disxmldb.xpath.xpathcompile;
import org.apache.cassandra.dht.IPartitioner;
import org.apache.cassandra.utils.LatencyTracker;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.index.filter.XMLLocalDocFilter;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathProcessorV2.XPathError;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.FunctionDef;
import imc.disxmldb.xpath.function.FunctionPool;

public class XPathCompiler
{
  public static void main(String args []) throws ParseException
  {
    XPathCompiler parser = new XPathCompiler(System.in);
  }

  public boolean compile() throws ParseException {
			XPath();
			//否者抛出异常
			return true;
	}
}

PARSER_END(XPathCompiler)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathparser/XPathParser.jj
 =======================================================================
/**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */
options
{
  JDK_VERSION = "1.5";
  UNICODE_INPUT = true;
  static = false;
}

PARSER_BEGIN(XPathParser)
package imc.disxmldb.xpath.xpathparser;
import org.apache.cassandra.dht.IPartitioner;
import org.apache.cassandra.utils.LatencyTracker;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.index.filter.XMLLocalDocFilter;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathProcessorV2.XPathError;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.FunctionDef;
import imc.disxmldb.xpath.function.FunctionPool;
import imc.disxmldb.config.SysConfig;

import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;

public class XPathParser
{
  private static LatencyTracker xpathExecLatency = new LatencyTracker();
  private PipedInputStream input = new PipedInputStream(9160);
  private PipedOutputStream output = new PipedOutputStream();
  private boolean connected = false;

public boolean connect()
{
		try {
				output.connect(input);
				ReInit(input, SysConfig.ENCODING);
				connected = true;
				return true;
			} catch (IOException e) {
				return false;
			}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/imc/disxmldb/xpath/xpathtoken/XPathToken.jj
 =======================================================================
 /**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */
options
{
  JDK_VERSION = "1.5";
  UNICODE_INPUT = true;
  static = false;
}

PARSER_BEGIN(XPathTokenParser)
package imc.disxmldb.xpath.xpathtoken;

public class XPathTokenParser
{
  public static void main(String args []) throws ParseException
  {
    XPathTokenParser parser = new XPathTokenParser(System.in);
    while (true)
    {
      System.out.println("Reading from standard input...");
      System.out.print("Enter an expression like \"1+(2+3)*4;\" :");
      try
      {
        Token token = null;
        while ((token = parser.getNextToken()) != null)
        {
          System.out.println(token.image);
        }
      }
      catch (Exception e)
      {
        System.out.println("NOK.");
        System.out.println(e.getMessage());
        break;
      }
      catch (Error e)
      {
        System.out.println("Oops.");
        System.out.println(e.getMessage());
        break;
      }
    }
  }
}

PARSER_END(XPathTokenParser)

SKIP :
{

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cli/Cli.tokens
 =======================================================================
NODE_DESCRIBE=5
NODE_THRIFT_GET_WITH_CONDITIONS=16
TTL=78
NODE_SHOW_KEYSPACES=13
CONDITION=39
COUNT=69
DecimalDigit=99
Identifier=75
NODE_UPDATE_COLUMN_FAMILY=27
SingleStringCharacter=91
NODE_USE_TABLE=7
NODE_DEL_KEYSPACE=24
CREATE=57
NODE_CONNECT=4
CONNECT=47
INCR=66
SingleEscapeCharacter=96
FAMILY=61
GET=64
COMMENT=102
SHOW=53
ARRAY=41
NODE_ADD_KEYSPACE=23
EXIT=51
NODE_THRIFT_DEL=19
IntegerNegativeLiteral=82
ON=80
NODE_DROP_INDEX=32
SEMICOLON=46
KEYSPACES=54
CONDITIONS=40
FILE=86
NODE_LIMIT=44
LIST=70
NODE_DESCRIBE_CLUSTER=6
IP_ADDRESS=84
NODE_THRIFT_SET=17
NODE_NO_OP=10
NODE_ID_LIST=34
WS=101
ASSUME=72
NODE_THRIFT_COUNT=18
DESCRIBE=50
Alnum=90
CharacterEscapeSequence=93
NODE_SHOW_CLUSTER_NAME=11
USE=49
NODE_THRIFT_DECR=21
FUNCTION_CALL=38
EscapeSequence=92

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/apache/cassandra/cql/Cql.tokens
 =======================================================================
LETTER=75
K_CREATE=32
K_PRIMARY=37
T__93=93
T__94=94
T__91=91
K_USE=4
T__92=92
K_VALUES=23
STRING_LITERAL=9
T__90=90
K_ON=41
K_USING=11
K_ADD=45
K_KEY=38
COMMENT=78
K_TRUNCATE=47
T__99=99
T__98=98
T__97=97
T__96=96
T__95=95
D=61
E=49
F=53
G=67
K_COUNT=7
T__80=80
K_KEYSPACE=33
K_TYPE=44
T__81=81
A=59
B=70
T__82=82
T__83=83
C=51
L=50
M=56
N=60
O=55
H=58
I=64
J=72
K_UPDATE=29
K=62
U=65
T=52
W=57
V=69
Q=68

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/util/mime-types.xml
 =======================================================================
<?xml version="1.0" encoding="UTF-8"?>

<!--
    ======================================================
    This file lists all mime types known to eXist.      

    When storing a document with the Java client, the type 
    of the resource is looked up here. A resource will be 
    stored as an XML or a binary resource, depending on the 
    "type" attribute of the corresponding mime-type entry.

    In MimeTable.java mime-types.xml is first searched in 
    directory pointed by property "home.exist", 
    and then as a classpath resource in org/exist/util .
    ======================================================= 

    $Id: mime-types.xml.tmpl 10172 2009-10-01 08:06:00Z shabanovd $
-->

<mime-types xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="schema/mime-types.xsd">

    <!-- Mime types stored as XML -->
    <mime-type name="text/xml" type="xml">
        <description>XML document</description>
        <extensions>.xml,.xsd,.rng,.mods,.xmp,.xmi,.xconf,.xmap,.xsp,.wsdl,.x3d,.rdf,.owl,.dbx,.tei,.xces,.ead,.xqx,.xform,.gml,.fo,.nvdl,.sch,.imdi</extensions>
    </mime-type>
    <mime-type name="application/xslt+xml" type="xml">
        <description>XSL document</description>
        <extensions>.xsl,.xslt</extensions>
    </mime-type>
    <mime-type name="application/xml" type="xml">
        <description>XML document</description>
        <extensions>.xml</extensions>
    </mime-type>
    <mime-type name="application/rdf+xml" type="xml">
        <description>RDF document</description>
        <extensions>.rdf,.rdfs</extensions>
    </mime-type>
    <mime-type name="application/xhtml+xml" type="xml">
        <description>XHTML document</description>
        <extensions>.xhtml,.xht</extensions>
    </mime-type>
    <mime-type name="text/html" type="xml">
        <description>HTML document</description>
        <extensions>.html,.htm</extensions>
    </mime-type>
    <mime-type name="application/atom+xml" type="xml">
        <description>Atom Feed Document</description>
        <extensions>.atom</extensions>
    </mime-type>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/org/exist/xmldb/package.html
 =======================================================================
<html>
	<body>
		eXist's implementation of the XML:DB API.

		eXist has two driver implementations: the first
		uses XML-RPC calls to communicate with a remote
		database, the second talks directly to an embedded
		database instance. The driver class {@link org.exist.xmldb.DatabaseImpl}
		determines dynamically which driver should be used by
		looking at the XML:DB URI provided.
	</body>
</html>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/bin/schema-sample.txt
 =======================================================================
/*This file contains an example Keyspace that can be created using the
cassandra-cli command line interface as follows.

bin/cassandra-cli -host localhost --file conf/schema-sample.txt

The cassandra-cli includes online help that explains the statements below. You can
accessed the help without connecting to a running cassandra instance by starting the
client and typing "help;"
*/

create keyspace Keyspace1
    with strategy_options=[{replication_factor:1}]
    and placement_strategy = 'org.apache.cassandra.locator.SimpleStrategy';

use Keyspace1;

create column family Standard1
    with comparator = BytesType
    and keys_cached = 10000
    and rows_cached = 1000
    and row_cache_save_period = 0
    and key_cache_save_period = 3600
    and memtable_flush_after = 59
    and memtable_throughput = 255
    and memtable_operations = 0.29;

create column family Standard2
    with comparator = UTF8Type
    and read_repair_chance = 0.1
    and keys_cached = 100
    and gc_grace = 0
    and min_compaction_threshold = 5
    and max_compaction_threshold = 31;

create column family StandardByUUID1
    with comparator = TimeUUIDType;

create column family Super1
    with column_type = Super
    and comparator = BytesType
    and subcomparator = BytesType;

create column family Super2
    with column_type = Super
    and subcomparator = UTF8Type
    and rows_cached = 10000
    and keys_cached = 50
    and comment = 'A column family with supercolumns, whose column and subcolumn names are UTF8 strings';

create column family Super3

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/build.properties.default
 =======================================================================
# Maven2 Repository Locations (you can override these in "build.properties" to point to a local proxy, e.g. Nexus)
artifact.remoteRepository.central:     http://repo1.maven.org/maven2
artifact.remoteRepository.java.net2:   http://download.java.net/maven/2
artifact.remoteRepository.apache:      https://repository.apache.org/content/repositories/releases
artifact.remoteRepository.jclouds:     http://jclouds.googlecode.com/svn/repo
artifact.remoteRepository.oauth:       http://oauth.googlecode.com/svn/code/maven


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/cassandra.yaml
 =======================================================================
# Cassandra storage config YAML 

# NOTE:
#   See http://wiki.apache.org/cassandra/StorageConfiguration for
#   full explanations of configuration directives
# /NOTE

# The name of the cluster. This is mainly used to prevent machines in
# one logical cluster from joining another.
cluster_name: 'seqtest'

# You should always specify InitialToken when setting up a production
# cluster for the first time, and often when adding capacity later.
# The principle is that each node should be given an equal slice of
# the token ring; see http://wiki.apache.org/cassandra/Operations
# for more details.
#
# If blank, Cassandra will request a token bisecting the range of
# the heaviest-loaded existing node.  If there is no load information
# available, such as is the case with a new cluster, it will pick
# a random token, which will lead to hot spots.
initial_token: 113427455640312821154458202477256070485

# See http://wiki.apache.org/cassandra/HintedHandoff
hinted_handoff_enabled: true
# this defines the maximum amount of time a dead host will have hints
# generated.  After it has been dead this long, hints will be dropped.
max_hint_window_in_ms: 3600000 # one hour
# Sleep this long after delivering each row or row fragment
hinted_handoff_throttle_delay_in_ms: 50

# authentication backend, implementing IAuthenticator; used to identify home
authenticator: org.apache.cassandra.auth.AllowAllAuthenticator

# authorization backend, implementing IAuthority; used to limit access/provide permissions
authority: org.apache.cassandra.auth.AllowAllAuthority

# The partitioner is responsible for distributing rows (by key) across
# nodes in the cluster.  Any IPartitioner may be used, including your
# own as long as it is on the classpath.  Out of the box, Cassandra
# provides org.apache.cassandra.dht.RandomPartitioner
# org.apache.cassandra.dht.ByteOrderedPartitioner,
# org.apache.cassandra.dht.OrderPreservingPartitioner (deprecated),
# and org.apache.cassandra.dht.CollatingOrderPreservingPartitioner
# (deprecated).
# 
# - RandomPartitioner distributes rows across the cluster evenly by md5.
#   When in doubt, this is the best option.
# - ByteOrderedPartitioner orders rows lexically by key bytes.  BOP allows
#   scanning rows in key order, but the ordering can generate hot spots

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/conf/schema-sample.txt
 =======================================================================
/*This file contains an example Keyspace that can be created using the
cassandra-cli command line interface as follows.

bin/cassandra-cli -host localhost --file conf/schema-sample.txt

The cassandra-cli includes online help that explains the statements below. You can
accessed the help without connecting to a running cassandra instance by starting the
client and typing "help;"
*/

create keyspace Keyspace1
    with strategy_options=[{replication_factor:1}]
    and placement_strategy = 'org.apache.cassandra.locator.SimpleStrategy';

use Keyspace1;

create column family Standard1
    with comparator = BytesType
    and keys_cached = 10000
    and rows_cached = 1000
    and row_cache_save_period = 0
    and key_cache_save_period = 3600
    and memtable_flush_after = 59
    and memtable_throughput = 255
    and memtable_operations = 0.29;

create column family Standard2
    with comparator = UTF8Type
    and read_repair_chance = 0.1
    and keys_cached = 100
    and gc_grace = 0
    and min_compaction_threshold = 5
    and max_compaction_threshold = 31;

create column family StandardByUUID1
    with comparator = TimeUUIDType;

create column family Super1
    with column_type = Super
    and comparator = BytesType
    and subcomparator = BytesType;

create column family Super2
    with column_type = Super
    and subcomparator = UTF8Type
    and rows_cached = 10000
    and keys_cached = 50
    and comment = 'A column family with supercolumns, whose column and subcolumn names are UTF8 strings';

create column family Super3

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/contrib/pig/example-script.pig
 =======================================================================
rows = LOAD 'cassandra://MyKeyspace/MyColumnFamily' USING CassandraStorage() AS (key, columns: bag {T: tuple(name, value)});
cols = FOREACH rows GENERATE flatten(columns);
colnames = FOREACH cols GENERATE $0;
namegroups = GROUP colnames BY (chararray) $0;
namecounts = FOREACH namegroups GENERATE COUNT($1), group;
orderednames = ORDER namecounts BY $0;
topnames = LIMIT orderednames 50;
dump topnames;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/README.Debian
 =======================================================================
Cassandra for Debian
====================

This package is not a part of Debian, (and there are no immediate plans
to have it added). Bugs should be sent to eevans@apache.org, *not* filed
in the Debian BTS.

 -- Eric Evans <eevans@apache.org>  Sun, 26 Jul 2009 14:35:11 -0500

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/TODO
 =======================================================================

 * don't embed jars for which debian packages exist

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.conf
 =======================================================================
# Provided by the cassandra package
cassandra  -  memlock  unlimited
cassandra  -  nofile   100000

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.in.sh
 =======================================================================

# The directory where Cassandra's configs live (required)
CASSANDRA_CONF=/etc/cassandra

CASSANDRA_HOME=/usr/share/cassandra

# The java classpath (required)
if [ -n "$CLASSPATH" ]; then
    CLASSPATH=$CLASSPATH:$CASSANDRA_CONF
else
    CLASSPATH=$CASSANDRA_CONF
fi

for jar in /usr/share/cassandra/lib/*.jar; do
    CLASSPATH=$CLASSPATH:$jar
done

for jar in /usr/share/cassandra/*.jar; do
    CLASSPATH=$CLASSPATH:$jar
done

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.install
 =======================================================================
conf/log4j-server.properties etc/cassandra
conf/cassandra.yaml etc/cassandra
conf/cassandra-env.sh etc/cassandra
debian/cassandra.in.sh usr/share/cassandra
debian/cassandra.conf etc/security/limits.d
bin/cassandra usr/sbin
bin/cassandra-cli usr/bin
bin/nodetool usr/bin
bin/json2sstable usr/bin
bin/sstable2json usr/bin
bin/sstablekeys usr/bin
bin/sstableloader usr/bin
lib/*.jar usr/share/cassandra/lib
lib/licenses usr/share/doc/cassandra

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/cassandra.postinst
 =======================================================================
#!/bin/sh
# postinst script for cassandra

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        if ! getent group cassandra >/dev/null; then
            addgroup --system cassandra
        fi

        if ! getent passwd cassandra >/dev/null; then
            adduser --quiet \
                --system \
                --ingroup cassandra \
                --quiet \
                --disabled-login \
                --disabled-password \
                --home /var/lib/cassandra \
                --no-create-home \
                -gecos "Cassandra database" \
                cassandra
        fi

        if [ -n "$2" ] && dpkg --compare-versions "$2" le 0.6.4-2; then
            chown -R cassandra: /var/lib/cassandra
            chown -R cassandra: /var/log/cassandra
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/compat
 =======================================================================
5

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/control
 =======================================================================
Source: cassandra
Section: misc
Priority: extra
Maintainer: Eric Evans <eevans@apache.org>
Build-Depends: debhelper (>= 5), openjdk-6-jdk (>= 6b11) | java6-sdk, ant (>= 1.7), ant-optional (>= 1.7), subversion
Homepage: http://cassandra.apache.org
Vcs-Svn: https://svn.apache.org/repos/asf/cassandra/trunk
Vcs-Browser: http://svn.apache.org/viewvc/cassandra/trunk
Standards-Version: 3.8.3

Package: cassandra
Architecture: all
Depends: openjdk-6-jre-headless (>= 6b11) | java6-runtime, jsvc (>= 1.0), libcommons-daemon-java (>= 1.0), adduser, libjna-java
Description: distributed storage system for structured data
 Cassandra is a distributed (peer-to-peer) system for the management
 and storage of structured data.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/default
 =======================================================================
# NOTICE: See also /etc/cassandra/cassandra-env.sh

# EXTRA_CLASSPATH provides the means to extend Cassandra's classpath with
# additional libraries.  It is formatted as a colon-delimited list of
# class directories and/or jar files.  For example, to enable the
# JMX-to-web bridge install libmx4j-java and uncomment the following.
#EXTRA_CLASSPATH="/usr/share/java/mx4j-tools.jar"

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/dirs
 =======================================================================
usr/share/cassandra
usr/share/cassandra/lib
usr/sbin
usr/bin
etc/cassandra
var/lib/cassandra
var/log/cassandra

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/init
 =======================================================================
#! /bin/sh
### BEGIN INIT INFO
# Provides:          cassandra
# Required-Start:    $remote_fs $network $named $time
# Required-Stop:     $remote_fs $network $named $time
# Should-Start:      ntp mdadm
# Should-Stop:       ntp mdadm
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: distributed storage system for structured data
# Description:       Cassandra is a distributed (peer-to-peer) system for
#                    the management and storage of structured data.
### END INIT INFO

# Author: Eric Evans <eevans@racklabs.com>

DESC="Cassandra"
NAME=cassandra
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
CONFDIR=/etc/cassandra
JSVC=/usr/bin/jsvc
WAIT_FOR_START=10
CASSANDRA_HOME=/usr/share/cassandra
FD_LIMIT=100000

# The first existing directory is used for JAVA_HOME if needed.
JVM_SEARCH_DIRS="/usr/lib/jvm/java-6-openjdk /usr/lib/jvm/java-6-sun"

[ -e /usr/share/cassandra/apache-cassandra.jar ] || exit 0
[ -e /etc/cassandra/cassandra.yaml ] || exit 0
[ -e /etc/cassandra/cassandra-env.sh ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# If JAVA_HOME has not been set, try to determine it.
if [ -z "$JAVA_HOME" ]; then
    # If java is in PATH, use a JAVA_HOME that corresponds to that. This is
    # both consistent with how the upstream startup script works, and how
    # Debian works (read: the use of alternatives to set a system JVM).
    if [ -n "`which java`" ]; then
        java=`which java`
        # Dereference symlink(s)
        while true; do
            if [ -h "$java" ]; then
                java=`readlink "$java"`
                continue
            fi
            break

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/debian/rules
 =======================================================================
#!/usr/bin/make -f

# Uncomment to enable verbose mode.
#export DH_VERBOSE=1

ANT = /usr/bin/ant
VERSION = $(shell dpkg-parsechangelog | sed -ne 's/^Version: \(.*\)/\1/p')

test:
	dh_testdir
	$(ANT) test

clean:
	dh_testdir
	dh_testroot
	$(ANT) realclean
	rm -f build-stamp build.properties
	rm -rf bin/java
	find -name "*.pyc" -exec rm '{}' ';'
	find -name "*py.class" -exec rm '{}' ';'
	dh_clean

build: build-stamp
build-stamp:
	dh_testdir
	printf "version=%s" $(VERSION) > build.properties

	$(ANT) jar

	touch build-stamp

install: build
	dh_testdir
	dh_testroot
	dh_installdirs
	dh_install

	# Copy in the jar and symlink to something stable
	dh_install build/apache-cassandra-$(VERSION).jar \
		usr/share/cassandra
	dh_install build/apache-cassandra-thrift-$(VERSION).jar \
		usr/share/cassandra

	dh_link usr/share/cassandra/apache-cassandra-$(VERSION).jar \
		usr/share/cassandra/apache-cassandra.jar

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir
	dh_testroot

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/doc/cql/CQL.textile
 =======================================================================
h1. Cassandra Query Language (CQL) v2.0

h2. Table of Contents

{toc}

h2. USE

__Synopsis:__

bc. 
USE <KEYSPACE>;

A @USE@ statement consists of the @USE@ keyword, followed by a valid keyspace name.  Its purpose is to assign the per-connection, current working keyspace.  All subsequent keyspace-specific actions will be performed in the context of the supplied value.

h2. SELECT

__Synopsis:__

bc. 
SELECT [FIRST N] [REVERSED] <SELECT EXPR> FROM <COLUMN FAMILY> [USING <CONSISTENCY>]
        [WHERE <CLAUSE>] [LIMIT N];

A @SELECT@ is used to read one or more records from a Cassandra column family. It returns a result-set of rows, where each row consists of a key and a collection of columns corresponding to the query.

h3. Specifying Columns

bc. 
SELECT [FIRST N] [REVERSED] name1, name2, name3 FROM ...
SELECT [FIRST N] [REVERSED] name1..nameN FROM ...

The SELECT expression determines which columns will appear in the results and takes the form of either a comma separated list of names, or a range. The range notation consists of a start and end column name separated by two periods (@..@). The set of columns returned for a range is start and end inclusive.

The @FIRST@ option accepts an integer argument and can be used to apply a limit to the number of columns returned per row.  When this limit is left unset it defaults to 10,000 columns.

The @REVERSED@ option causes the sort order of the results to be reversed.

It is worth noting that unlike the projection in a SQL SELECT, there is no guarantee that the results will contain all of the columns specified. This is because Cassandra is schema-less and there are no guarantees that a given column exists.

h3. Column Family

bc. 
SELECT ... FROM <COLUMN FAMILY> ...

The @FROM@ clause is used to specify the Cassandra column family applicable to a @SELECT@ query.

bc.
SELECT count(*) FROM <COLUMN FAMILY> ...

The @count@ aggregate function returns a single row, with a single column "count" whose value is the number of rows from the pre-aggregation resultset.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/examples/client_only/conf/cassandra.yaml
 =======================================================================
# Cassandra storage config YAML 

# NOTE:
#   See http://wiki.apache.org/cassandra/StorageConfiguration for
#   full explanations of configuration directives
# /NOTE

# The name of the cluster. This is mainly used to prevent machines in
# one logical cluster from joining another.
cluster_name: 'Test Cluster'

# You should always specify InitialToken when setting up a production
# cluster for the first time, and often when adding capacity later.
# The principle is that each node should be given an equal slice of
# the token ring; see http://wiki.apache.org/cassandra/Operations
# for more details.
#
# If blank, Cassandra will request a token bisecting the range of
# the heaviest-loaded existing node.  If there is no load information
# available, such as is the case with a new cluster, it will pick
# a random token, which will lead to hot spots.
initial_token:

# Set to true to make new [non-seed] nodes automatically migrate data
# to themselves from the pre-existing nodes in the cluster.  Defaults
# to false because you can only bootstrap N machines at a time from
# an existing cluster of N, so if you are bringing up a cluster of
# 10 machines with 3 seeds you would have to do it in stages.  Leaving
# this off for the initial start simplifies that.
auto_bootstrap: false

# See http://wiki.apache.org/cassandra/HintedHandoff
hinted_handoff_enabled: true
# this defines the maximum amount of time a dead host will have hints
# generated.  After it has been dead this long, hints will be dropped.
max_hint_window_in_ms: 3600000 # one hour
# Sleep this long after delivering each row or row fragment
hinted_handoff_throttle_delay_in_ms: 50

# authentication backend, implementing IAuthenticator; used to identify users
authenticator: org.apache.cassandra.auth.AllowAllAuthenticator

# authorization backend, implementing IAuthority; used to limit access/provide permissions
authority: org.apache.cassandra.auth.AllowAllAuthority

# The partitioner is responsible for distributing rows (by key) across
# nodes in the cluster.  Any IPartitioner may be used, including your
# own as long as it is on the classpath.  Out of the box, Cassandra
# provides org.apache.cassandra.dht.RandomPartitioner
# org.apache.cassandra.dht.ByteOrderedPartitioner,

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/build.xml
 =======================================================================
<project default="usage" basedir=".">

    <path id="compile.classpath">
        <fileset dir="./lib/endorsed">
            <include name="*.jar" />
        </fileset>
        <fileset dir="./lib">
            <include name="*.jar" />
        </fileset>
    </path>

    <path id="endorsed.classpath">
        <fileset dir="./lib/endorsed">
            <include name="*.jar" />
        </fileset>
    </path>

    <path id="test.classpath">
        <path refid="compile.classpath" />
        <fileset dir="./lib/test">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="./lib/tools">
            <include name="xalan*.jar" />
            <include name="xerces*.jar" />
        </fileset>
    </path>

    <path id="samples.classpath">
        <fileset dir="./lib/tools">
            <include name="**/*.jar" />
        </fileset>
        <path refid="test.classpath" />
        <pathelement location="."/>
    </path>

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target name="init">
    <tstamp/>
    <property name="Name" value="dom4j"/>
    <property name="name" value="dom4j"/>
    <property name="version" value="1.6.1"/>
    <property name="year" value="2005"/>

    <echo message="----------- ${Name} ${version} [${year}] ------------"/>

    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/lib/test/JUnitPerf_LICENSE
 =======================================================================
Copyright (C) 2001 Clarkware Consulting, Inc.
All Rights Reserved.

Redistribution and use in source and binary forms, with or without 
modification, are permitted provided that the following conditions 
are met:

   1. Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

   2. Redistributions in binary form must reproduce the above copyright 
      notice, this list of conditions and the following disclaimer in the 
      documentation and/or other materials provided with the distribution.

   3. Neither the name of Clarkware Consulting, Inc. nor the names of its 
      contributors may be used to endorse or promote products derived 
      from this software without prior written permission. For written 
      permission, please contact clarkware@clarkware.com.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
CLARKWARE CONSULTING OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
NEGLIGENCE OR OTHERWISE) ARISING IN  ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/maven.xml
 =======================================================================
<project default="dist:build-bin" 
         xmlns:j="jelly:core" 
         xmlns:ant="jelly:ant"
         xmlns:doc="doc"
         xmlns:maven="jelly:maven" >

    <!-- define the classpath used to run examples -->
    <goal name="create-classpath" prereqs="java:compile,test:compile">
        <path id="test.classpath">
            <pathelement path="${maven.build.dest}"/>
            <pathelement path="target/classes"/>
            <pathelement path="target/test-classes"/>
            <pathelement path="src/"/>
            <path refid="maven.dependency.classpath"/>
        </path>
    </goal>

    <postGoal name="clean:clean">
        <delete>
            <fileset dir="${basedir}" includes="junit*.properties"/>
            <fileset dir="${basedir}" includes="javadoc*"/>
        </delete>
    </postGoal>

    <postGoal name="dist:prepare-bin-filesystem">
        <ant:copy todir="${maven.dist.bin.assembly.dir}">
            <fileset dir=".">
                <include name="build.xml" />
                <include name="maven.xml" />
                <include name="project.properties" />
                <include name="project.xml" />
                <include name="LICENSE*" />
                <include name="lib/**" />
                <include name="src/**" />
                <include name="xdocs/**" />
                <include name="xml/**" />
            </fileset>
        </ant:copy>
        <ant:copy todir="${maven.dist.bin.assembly.dir}/docs">
            <fileset dir="target/docs"/>
        </ant:copy>
    </postGoal>

    <postGoal name="dist:prepare-src-filesystem">
        <ant:copy todir="${maven.dist.src.assembly.dir}/lib">
            <fileset dir="lib"/>
        </ant:copy>
    </postGoal>

    <preGoal name="site">

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/project.properties
 =======================================================================
# -------------------------------------------------------------------
# P R O J E C T  P R O P E R T I E S
# -------------------------------------------------------------------
maven.repo.remote=http://www.ibiblio.org/maven

maven.junit.fork=true

maven.compile.debug = on
maven.compile.optimize = off
maven.compile.deprecation = on
maven.compile.target = 1.3
maven.compile.source = 1.3

maven.jarResources.basedir = ${basedir}/src/java

# ------------------------------------------------------------------------
# M A V E N  J A R  O V E R R I D E
# ------------------------------------------------------------------------
maven.jar.override = on

# ------------------------------------------------------------------------
# J A L O P Y  S E T T I N G S
# ------------------------------------------------------------------------
maven.jalopy.style = jalopy.xml
maven.jalopy.filesetExclude = org/dom4j/tree/ConcurrentReaderHashMap.java

maven.checkstyle.properties = ${basedir}/checkstyle.xml
maven.checkstyle.excludes = org/dom4j/tree/ConcurrentReaderHashMap.java

# ------------------------------------------------------------------------
# Jars set explicity by path.
# ------------------------------------------------------------------------
maven.jar.stax = ${basedir}/lib/jsr173_1.0_api.jar
maven.jar.stax-ri = ${basedir}/lib/test/jsr173_1.0_ri.jar
maven.jar.pull-parser = ${basedir}/lib/pull-parser-2.1.10.jar

# -------------------------------------------------------------------
# J A V A D O C  P R O P E R T I E S
# -------------------------------------------------------------------

# Display the date on the Maven web site
maven.xdoc.date = left

# Display the maven version the web site is documenting
maven.xdoc.version = ${pom.currentVersion}

maven.javadoc.links = http://java.sun.com/j2se/1.3/docs/api/, http://java.sun.com/xml/jaxp/dist/1.1/docs/api/

# -------------------------------------------------------------------
# D O C  P R O P E R T I E S

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/dom4j-1.6.1/project.xml
 =======================================================================
<?xml version="1.0" encoding="UTF-8"?>

<project>
  <pomVersion>3</pomVersion>
  <name>dom4j</name>
  <id>dom4j</id>
  <currentVersion>1.6.1</currentVersion>
  
  <organization>
    <name>MetaStuff Ltd.</name>
    <url>http://sourceforge.net/projects/dom4j</url>
    <logo>http://sourceforge.net/sflogo.php?group_id=16035</logo>
  </organization>
  <logo>/images/logo.gif</logo>
  
  <inceptionYear>2001</inceptionYear>
 
  <package>org.dom4j</package>
   <packageGroups>
    <packageGroup>
      <title>Core Developer API</title>
      <packages>org.dom4j,org.dom4j.io</packages>
    </packageGroup>
    <packageGroup>
      <title>Utility classes</title>
      <packages>org.dom4j.util</packages>
    </packageGroup>
    <packageGroup>
      <title>XRule engine for declarative XSLT style processing</title>
      <packages>org.dom4j.rule,org.dom4j.rule.*</packages>
    </packageGroup>
    <packageGroup>
      <title>Alternative dom4j implementations</title>
      <packages>org.dom4j.datatype,org.dom4j.dom,org.dom4j.bean</packages>
    </packageGroup>
    <packageGroup>
      <title>Swing helper classes</title>
      <packages>org.dom4j.swing</packages>
    </packageGroup>
    <packageGroup>
      <title>Implementation classes</title>
      <packages>org.dom4j.tree,org.dom4j.dtd,org.dom4j.xpp,org.dom4j.xpath</packages>
    </packageGroup>
  </packageGroups>
  
  
  <shortDescription>dom4j : XML framework for Java</shortDescription>
  <gumpRepositoryId>dom4j</gumpRepositoryId>

  <description>dom4j: the flexible XML framework for Java</description>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/log4j-NOTICE.txt
 =======================================================================
Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/serializer-NOTICE.txt
 =======================================================================
   =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xalan Java distribution.  ==
   =========================================================================

   Apache Xalan (Xalan serializer)
   Copyright 1999-2006 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software was originally based on the following:
     - software copyright (c) 1999-2002, Lotus Development Corporation.,
       http://www.lotus.com.
     - software copyright (c) 2001-2002, Sun Microsystems.,
       http://www.sun.com.
     - software copyright (c) 2003, IBM Corporation., 
       http://www.ibm.com.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmldb-LICENSE.txt
 =======================================================================
Copyright (c) 2000-2003 The XML:DB Initiative.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      "This product includes software developed by the
       XML:DB Initiative (http://www.xmldb.org/)."
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The name "XML:DB Initiative" must not be used to endorse or
   promote products derived from this software without prior written
   permission. For written permission, please contact info@xmldb.org.

5. Products derived from this software may not be called "XML:DB",
   nor may "XML:DB" appear in their name, without prior written
   permission of the XML:DB Initiative.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the XML:DB Initiative. For more information
on the XML:DB Initiative, please see <http://www.xmldb.org/>.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/jetty/xmlrpc-NOTICE.txt
 =======================================================================
Apache XML-RPC
Copyright 1999-2009 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/antlr-3.1.3.txt
 =======================================================================

Copyright (c) 2003-2006 Terence Parr
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

 1. Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 3. The name of the author may not be used to endorse or promote products
    derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/high-scale-lib-1.1.2.txt
 =======================================================================

The person or persons who have associated work with this document (the
"Dedicator" or "Certifier") hereby either (a) certifies that, to the best
of his knowledge, the work of authorship identified is in the public 
domain of the country from which the work is published, or (b) hereby 
dedicates whatever copyright the dedicators holds in the work of
authorship identified below (the "Work") to the public domain. A
certifier, moreover, dedicates any copyright interest he may have in the
associated work, and for these purposes, is described as a "dedicator"
below.

A certifier has taken reasonable steps to verify the copyright status of
this work. Certifier recognizes that his good faith efforts may not
shield him from liability if in fact the work certified is not in the
public domain.

Dedicator makes this dedication for the benefit of the public at large and
to the detriment of the Dedicator's heirs and successors. Dedicator
intends this dedication to be an overt act of relinquishment in perpetuity
of all present and future rights under copyright law, whether vested or
contingent, in the Work. Dedicator understands that such relinquishment of
all rights includes the relinquishment of all rights to enforce (by
lawsuit or otherwise) those copyrights in the Work.

Dedicator recognizes that, once placed in the public domain, the Work may
be freely reproduced, distributed, transmitted, used, modified, built 
upon, or otherwise exploited by anyone for any purpose, commercial or
non-commercial, and in any way, including by methods that have not yet
been invented or conceived.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/jline-0.9.94.txt
 =======================================================================
Copyright (c) 2002-2006, Marc Prud'hommeaux <mwp1@cornell.edu>
All rights reserved.

Redistribution and use in source and binary forms, with or
without modification, are permitted provided that the following
conditions are met:

Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.

Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer
in the documentation and/or other materials provided with
the distribution.

Neither the name of JLine nor the names of its contributors
may be used to endorse or promote products derived from this
software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
OF THE POSSIBILITY OF SUCH DAMAGE.


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/slf4j-api-1.6.1.txt
 =======================================================================
Copyright (c) 2004-2008 QOS.ch
All rights reserved.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE. 

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/licenses/slf4j-log4j12-1.6.1.txt
 =======================================================================
Copyright (c) 2004-2008 QOS.ch
All rights reserved.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE. 

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/lib/xmldb/xmldb-LICENSE.txt
 =======================================================================
Copyright (c) 2000-2003 The XML:DB Initiative.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      "This product includes software developed by the
       XML:DB Initiative (http://www.xmldb.org/)."
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The name "XML:DB Initiative" must not be used to endorse or
   promote products derived from this software without prior written
   permission. For written permission, please contact info@xmldb.org.

5. Products derived from this software may not be called "XML:DB",
   nor may "XML:DB" appear in their name, without prior written
   permission of the XML:DB Initiative.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the XML:DB Initiative. For more information
on the XML:DB Initiative, please see <http://www.xmldb.org/>.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/myChanges.txt
 =======================================================================
change history
run configuration:
-Djava.rmi.server.hostname=mc1
-Dcom.sun.management.jmxremote.port=7791 
-Dcom.sun.management.jmxremote.ssl=false
-Dcom.sun.management.jmxremote.authenticate=false
-Xmx8192M
-Xms8192M
-XX:+UseParNewGC
 -XX:+UseConcMarkSweepGC
-XX:+CMSParallelRemarkEnabled
-XX:SurvivorRatio=8
-XX:MaxTenuringThreshold=1
-XX:CMSInitiatingOccupancyFraction=75
-XX:+UseCMSInitiatingOccupancyOnly
-XX:+UseCompressedOops

2011-10-06:
add XML_NODE_STORE and XML_QUERY two stages to StageManager
add XML_STORE_NODE and XML_XQUERY two verbhandler to StorageService??verb

2011-10-08:
1.	modify the RowMutation message header to support storing node
	it involves create a class that encapsulate the process of transform a xml node to a super column mutation,
	changing the message header and modifying the RowMutationVerbHandler to support index on xml node.
	
2.  decide whether to write my own xml read handler or just change the original readcommand


xml system table:
create keyspace xmldb_sys_catalog
    with strategy_options=[{replication_factor:3}]
    and placement_strategy = 'org.apache.cassandra.locator.SimpleStrategy';
    
create column family schemaCatalog
    with column_type = standard
    and key_valiation_class = UTF8Type
    and comparator = UTF8Type
    and keys_cached = 10000
    and rows_cached = 150
    and row_cache_save_period = 0
    and key_cache_save_period = 3600
    and memtable_flush_after = 59
    and memtable_throughput = 255
    and memtable_operations = 0.29
    and column_metadata = [{
        column_name : createdate,
        validation_class : LongType},
        {
        column_name : modifydate,

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/apache-cassandra.spec
 =======================================================================
%define __jar_repack %{nil}

%global username cassandra

%define relname %{name}-%{version}-%{release}

Name:           apache-cassandra
Version:        0.7.0
Release:        rc3
Summary:        Cassandra is a highly scalable, eventually consistent, distributed, structured key-value store.

Group:          Development/Libraries
License:        Apache Software License
URL:            http://cassandra.apache.org/
Source0:        http://www.ibiblio.org/pub/mirrors/apache/%{username}/%{version}/%{relname}-src.tar.gz
BuildRoot:      %{_tmppath}/%{relname}-root-%(%{__id_u} -n)

BuildRequires: java-devel
BuildRequires: jpackage-utils
BuildRequires: ant
BuildRequires: ant-nodeps

Conflicts:     cassandra
Obsoletes:     cassandra07

Requires:      java >= 1.6.0
Requires:      jna  >= 3.2.7
Requires:      jpackage-utils
Requires(pre): user(cassandra)
Requires(pre): group(cassandra)
Requires(pre): shadow-utils
Provides:      user(cassandra)
Provides:      group(cassandra)

BuildArch:      noarch

%description
Cassandra brings together the distributed systems technologies from Dynamo
and the data model from Google's BigTable. Like Dynamo, Cassandra is
eventually consistent. Like BigTable, Cassandra provides a ColumnFamily-based
data model richer than typical key/value systems.

For more information see http://cassandra.apache.org/

%prep
%setup -q -n %{relname}-src

%build
ant clean jar -Drelease=true


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/cassandra
 =======================================================================
#!/bin/bash
#
# /etc/init.d/cassandra
#
# Startup script for Cassandra
# 
# chkconfig: 2345 20 80
# description: Starts and stops Cassandra

. /etc/rc.d/init.d/functions

export CASSANDRA_HOME=/usr/share/cassandra/
export CASSANDRA_INCLUDE=/usr/share/cassandra/cassandra.in.sh
export CASSANDRA_CONF=/etc/cassandra/conf
export CASSANDRA_OWNR=cassandra
NAME="cassandra"
log_file=/var/log/cassandra/cassandra.log
pid_file=/var/run/cassandra/cassandra.pid
CASSANDRA_PROG=/usr/sbin/cassandra

# The first existing directory is used for JAVA_HOME if needed.
JVM_SEARCH_DIRS="/usr/lib/jvm/jre /usr/lib/jvm/jre-1.6.* /usr/lib/jvm/java-1.6.*/jre"

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# If JAVA_HOME has not been set, try to determine it.
if [ -z "$JAVA_HOME" ]; then
    # If java is in PATH, use a JAVA_HOME that corresponds to that. This is
    # both consistent with how the upstream startup script works, and with
    # the use of alternatives to set a system JVM (as is done on Debian and
    # Red Hat derivatives).
    java="`/usr/bin/which java 2>/dev/null`"
    if [ -n "$java" ]; then
        java=`readlink --canonicalize "$java"`
        JAVA_HOME=`dirname "\`dirname \$java\`"`
    else
        # No JAVA_HOME set and no java found in PATH; search for a JVM.
        for jdir in $JVM_SEARCH_DIRS; do
            if [ -x "$jdir/bin/java" ]; then
                JAVA_HOME="$jdir"
                break
            fi
        done
        # if JAVA_HOME is still empty here, punt.
    fi
fi
JAVA="$JAVA_HOME/bin/java"
export JAVA_HOME JAVA


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/cassandra.conf
 =======================================================================
cassandra   -   memlock     unlimited
cassandra   -   nofile      100000

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/cassandra.in.sh
 =======================================================================

# The directory where Cassandra's configs live (required)
CASSANDRA_CONF=/etc/cassandra/conf

# The java classpath (required)
if [ -n "$CLASSPATH" ]; then
	CLASSPATH=$CLASSPATH:$CASSANDRA_CONF
else
	CLASSPATH=$CASSANDRA_CONF
fi

# use JNA if installed in standard location
[ -r /usr/share/java/jna.jar ] && CLASSPATH="$CLASSPATH:/usr/share/java/jna.jar"


for jar in /usr/share/cassandra/lib/*.jar; do
    CLASSPATH=$CLASSPATH:$jar
done

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/redhat/default
 =======================================================================
# NOTICE: See also /etc/cassandra/cassandra-env.sh

# EXTRA_CLASSPATH provides the means to extend Cassandra's classpath with
# additional libraries.  It is formatted as a colon-delimited list of
# class directories and/or jar files.  For example, to enable the
# JMX-to-web bridge install libmx4j-java and uncomment the following.
#EXTRA_CLASSPATH="/usr/share/java/mx4j-tools.jar"

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/CollectionStore.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-9-27 0.1
 */
package imc.disxmldb;

import imc.disxmldb.cassandra.verbhandler.XMLNodeDigestResolver;
import imc.disxmldb.cassandra.verbhandler.XMLReadNodeCallback;
import imc.disxmldb.cassandra.verbhandler.XMLReadNodeCommand;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCallback;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.*;
import imc.disxmldb.config.CollectionMetaData;
import imc.disxmldb.config.SysConfig;
import imc.disxmldb.config.XMLDBCatalogManager;
import imc.disxmldb.config.XMLMetaData;
import imc.disxmldb.dom.AttributeNode;
import imc.disxmldb.dom.ElementNode;
import imc.disxmldb.dom.LocalXMLReadRunnable;
import imc.disxmldb.dom.NodeProxy;
import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.XMLNodeForMutation;
import imc.disxmldb.dom.XMLNodeImpl;
import imc.disxmldb.dom.NodeProxy.NodeProxyType;
import imc.disxmldb.dom.cache.CacheManager;
import imc.disxmldb.dom.cache.DomNodeCache;
import imc.disxmldb.dom.cache.CacheManager.CacheType;
import imc.disxmldb.dom.cache.SubSequenceCache;
import imc.disxmldb.dom.formatter.NormalXMLNodeFormatter;
import imc.disxmldb.dom.formatter.IXMLNodeFormatter;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.XMLIndexManager;
import imc.disxmldb.index.btree.BtreeDecorator;
import imc.disxmldb.index.btree.IBtree;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.index.invertindex.IInvertIndex;
import imc.disxmldb.index.invertindex.InvertIndexDecorator;
import imc.disxmldb.util.ColumnFamilyStoreProxy;
import imc.disxmldb.util.LocalCFStoreProxy;
import imc.disxmldb.util.StringOutputStream;
import imc.disxmldb.xpath.DistributeXPathProcessor;
import imc.disxmldb.xpath.xpathcompile.XPathCompiler;
import imc.disxmldb.xpath.xpathparser.IMCXPathException;
import imc.disxmldb.xpath.xpathparser.ParseException;
import imc.disxmldb.xpath.xpathparser.XPathParser;
import imc.disxmldb.xupdate.XUpdateProcessor;


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/CollectionStoreMBean.java
 =======================================================================
package imc.disxmldb;

/**
 * the interface needed by JMX to display the runtime state of the monitored class
 */
public interface CollectionStoreMBean {
	public double getAvgRetrieveLocalLatency();
	public double getAvgAssembleXMLLatency();
	public double getAvgRtLocalLatency();
	public double getAvgRetrieveRemoteLatency();
	
	public double getAvgXupdateLatency();
	long getTotalXupdateLatency();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/XMLDBStore.java
 =======================================================================
/**
 * @author:xiafan xiafan68@gmail.com
 * @version: 2011-9-27 0.1
 */
package imc.disxmldb;

import java.net.InetAddress;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.Date;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;

import org.apache.cassandra.config.CFMetaData;
import org.apache.cassandra.config.Config.XMLServerMode;
import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.db.ColumnFamilyStore;
import org.apache.cassandra.thrift.CassandraDaemon;
import org.apache.cassandra.thrift.InvalidRequestException;
import org.apache.cassandra.thrift.SchemaDisagreementException;
import org.apache.cassandra.utils.FBUtilities;
import org.apache.thrift.TException;
import org.exist.xmldb.XmldbURI;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.config.CollectionMetaData;
import imc.disxmldb.config.SysConfig;
import imc.disxmldb.config.XMLDBCatalogManager;
import imc.disxmldb.config.XMLSchemaMetaData;
import imc.disxmldb.gms.IGMSObserver;
import imc.disxmldb.gms.ZooKeeperBasedGMS;
import imc.disxmldb.security.PermissionDeniedException;
import imc.disxmldb.security.User;
import imc.disxmldb.security.XMLDBSecurityManager;
import imc.disxmldb.util.CassandraSchemaProxy;

/**
 * this class uses the singleton design pattern to define a single instance of
 * the XML database server. This class manages the meta data and the actual data
 * store. The creation and deletion of collections should be executed through
 * this class, which will ensure the consistency between the schema and the
 * actual data in the store.
 * 
 */
public class XMLDBStore implements IGMSObserver {
	private static Logger logger = LoggerFactory.getLogger(XMLDBStore.class);
	// private ThreadLocal<UserSession> session = new

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/XMLStore.java
 =======================================================================
/**
 * author: zhangtl: OwenZhang1990@gmail.com
 * 
 * @version: 2011-9-26 0.1 modify by: xiafan {xiafan68@gmail.com}
 * @version: 2011-12-10 0.2 modify by: xiafan {xiafan68@gmail.com} it assumes
 *           that users always store an empty document that contains the common
 *           parts of the xml doc
 */
package imc.disxmldb;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.StringReader;
import java.lang.management.ManagementFactory;
import java.util.Arrays;
import java.util.Iterator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeoutException;
import java.util.regex.Pattern;

import javax.management.MBeanServer;
import javax.management.ObjectName;
import javax.xml.XMLConstants;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;

import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.service.StorageProxy;
import org.apache.cassandra.thrift.UnavailableException;
import org.apache.cassandra.utils.LatencyTracker;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.config.SysConfig;
import imc.disxmldb.config.XMLDBCatalogManager;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/XMLStoreMBean.java
 =======================================================================
package imc.disxmldb;
/**
 * the interface needed by JMX to display the runtime state of the monitored class
 */
public interface XMLStoreMBean {
	public double getAvgTotalLatencyMs();
	public double getAvgMutationLatencyMs();
	public long getMutationLatency();
	public long getStartElementLatency();
	public long getEndElementLatency();
	public long getCharacterLatency();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLNodeDigestResolver.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-9 0.1
 */
package imc.disxmldb.cassandra.verbhandler;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.config.SysConfig;
import java.io.DataInputStream;
import java.io.IOError;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.Map;
import java.util.concurrent.ConcurrentMap;

import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.db.DecoratedKey;
import org.apache.cassandra.io.util.FastByteArrayInputStream;
import org.apache.cassandra.net.Message;
import org.apache.cassandra.service.DigestMismatchException;
import org.apache.cassandra.service.IResponseResolver;
import org.apache.cassandra.service.StorageService;
import org.apache.cassandra.utils.FBUtilities;
import org.apache.commons.lang.ArrayUtils;
import org.cliffc.high_scale_lib.NonBlockingHashMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class XMLNodeDigestResolver implements IResponseResolver<String> {
	private static Logger logger = LoggerFactory
			.getLogger(XMLNodeDigestResolver.class);
	private static final Message FAKE_MESSAGE = new Message(
			FBUtilities.getBroadcastAddress(),
			StorageService.Verb.INTERNAL_RESPONSE, ArrayUtils.EMPTY_BYTE_ARRAY,
			-1);

	private final int colID;
	private final int xmlDocID;
	private final int nodeID;
	private String data = null;

	private ConcurrentMap<Message, XMLReadNodeResponse> replies = new NonBlockingHashMap<Message, XMLReadNodeResponse>();

	public XMLNodeDigestResolver(int colID, int xmlDocID, int nodeID) {
		this.colID = colID;
		this.xmlDocID = xmlDocID;
		this.nodeID = nodeID;
	}

	@Override

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeCallback.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-9 0.1
 */
package imc.disxmldb.cassandra.verbhandler;

import imc.disxmldb.config.SysConfig;

import java.io.IOException;
import java.net.InetAddress;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.atomic.AtomicInteger;

import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.db.Table;
import org.apache.cassandra.net.IAsyncCallback;
import org.apache.cassandra.net.Message;
import org.apache.cassandra.service.DigestMismatchException;
import org.apache.cassandra.thrift.ConsistencyLevel;
import org.apache.cassandra.thrift.UnavailableException;
import org.apache.cassandra.utils.SimpleCondition;
import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class XMLReadNodeCallback implements IAsyncCallback {
	private static Logger logger = LoggerFactory.getLogger(XMLReadNodeCallback.class);
	protected final SimpleCondition condition = new SimpleCondition();
	private final long startTime;
	protected final int blockfor;
	public final List<InetAddress> endpoints;
	private final XMLReadNodeCommand command;
	private final AtomicInteger received = new AtomicInteger(0);
	private XMLNodeDigestResolver resolver;

	public XMLReadNodeCallback(XMLNodeDigestResolver resolver, ConsistencyLevel consistencyLevel,
			XMLReadNodeCommand command, List<InetAddress> endpoints) {
		this.blockfor = determineBlockFor(consistencyLevel,
				SysConfig.DEFAULT_KEYSPACE);
		this.endpoints = preferredEndpoints(endpoints);
		this.startTime = System.currentTimeMillis();
		this.command = command;
		this.resolver = resolver;
	}

	public String get() throws TimeoutException, IOException, DigestMismatchException {
		 long timeout = DatabaseDescriptor.getRpcTimeout() - (System.currentTimeMillis() - startTime);
	        boolean success;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeCommand.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-8 0.1
 */
package imc.disxmldb.cassandra.verbhandler;

import imc.disxmldb.CollectionStore;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.Arrays;

import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.db.DecoratedKey;
import org.apache.cassandra.db.ReadCommand;
import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.io.util.DataOutputBuffer;
import org.apache.cassandra.net.Message;
import org.apache.cassandra.net.MessageProducer;
import org.apache.cassandra.service.StorageService;
import org.apache.cassandra.utils.FBUtilities;

public class XMLReadNodeCommand implements MessageProducer {
	public static final byte DIGEST = 1;
	public static final byte NONDIGEST = 0;
	private static XMLReadNodeCommandSerializer serializer = new XMLReadNodeCommandSerializer();
	
	private int colID = -1;
	private int xmlID = -1;
	private int nodeID = 0;
	private byte isDigest = 0;

	public static XMLReadNodeCommandSerializer serializer() {
		return serializer;
	}
	
	public XMLReadNodeCommand(int colID, int xmlID, int nodeID, byte isDigest) {
		this.colID = colID;
		this.xmlID = xmlID;
		this.nodeID = nodeID;
		this.isDigest = isDigest;
	}

	public ByteBuffer getKey() {
		return CollectionStore.COLKEYVALIDATOR.fromString(Integer.toString(xmlID));
	}
	@Override
	public Message getMessage(Integer version) throws IOException {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeResponse.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-8 0.1
 */
package imc.disxmldb.cassandra.verbhandler;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;

import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.utils.ByteBufferUtil;

public class XMLReadNodeResponse {
	String xmlContent = null;
	ByteBuffer digest = null;
	private static final XMLReadNodeResponseSerializer serializer = new XMLReadNodeResponseSerializer();

	public static XMLReadNodeResponseSerializer serializer() {
		return serializer;
	}

	public XMLReadNodeResponse(String xmlContent) {
		this.xmlContent = xmlContent;
	}

	public XMLReadNodeResponse(ByteBuffer digest) {
		this.digest = digest;
	}

	public String getXmlContent() {
		return xmlContent;
	}

	public void setXmlContent(String xmlContent) {
		this.xmlContent = xmlContent;
	}

	public ByteBuffer getDigest() {
		return digest;
	}

	public void setDigest(ByteBuffer digest) {
		this.digest = digest;
	}

}

class XMLReadNodeResponseSerializer implements

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XMLReadNodeVerbHandler.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-8 0.1
 */
package imc.disxmldb.cassandra.verbhandler;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.config.SysConfig;

import java.io.DataInputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;

import org.apache.cassandra.db.ColumnFamily;
import org.apache.cassandra.db.ReadCommand;
import org.apache.cassandra.db.ReadResponse;
import org.apache.cassandra.db.ReadVerbHandler;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.Table;
import org.apache.cassandra.io.util.DataOutputBuffer;
import org.apache.cassandra.io.util.FastByteArrayInputStream;
import org.apache.cassandra.net.IVerbHandler;
import org.apache.cassandra.net.Message;
import org.apache.cassandra.net.MessagingService;
import org.apache.cassandra.service.StorageService;
import org.apache.cassandra.utils.ByteBufferUtil;
import org.apache.cassandra.utils.FBUtilities;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.xmldb.api.base.XMLDBException;

public class XMLReadNodeVerbHandler implements IVerbHandler {

	private static Logger logger_ = LoggerFactory
			.getLogger(XMLReadNodeVerbHandler.class);

	// re-use output buffers between requests
	private static ThreadLocal<DataOutputBuffer> threadLocalOut = new ThreadLocal<DataOutputBuffer>() {
		@Override
		protected DataOutputBuffer initialValue() {
			return new DataOutputBuffer();
		}
	};

	public void doVerb(Message message, String id) {
		if (StorageService.instance.isBootstrapMode()) {
			throw new RuntimeException(

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryCallback.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler;

import imc.disxmldb.config.SysConfig;

import java.io.IOException;
import java.net.InetAddress;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.atomic.AtomicInteger;

import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.db.Table;
import org.apache.cassandra.net.IAsyncCallback;
import org.apache.cassandra.net.Message;
import org.apache.cassandra.service.DigestMismatchException;
import org.apache.cassandra.thrift.ConsistencyLevel;
import org.apache.cassandra.thrift.UnavailableException;
import org.apache.cassandra.utils.SimpleCondition;
import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class XPathQueryCallback implements IAsyncCallback {
	private static Logger logger = LoggerFactory.getLogger(XMLReadNodeCallback.class);
	protected final SimpleCondition condition = new SimpleCondition();
	private final long startTime;
	protected final int blockfor;
	public final List<InetAddress> endpoints;
	private final XPathQueryCommand command;
	private final AtomicInteger received = new AtomicInteger(0);
	private XPathQueryResolver resolver;

	public XPathQueryCallback(XPathQueryResolver resolver, ConsistencyLevel consistencyLevel,
			XPathQueryCommand command, List<InetAddress> endpoints) {
		this.blockfor = determineBlockFor(consistencyLevel,
				SysConfig.DEFAULT_KEYSPACE);
		this.endpoints = preferredEndpoints(endpoints);
		this.startTime = System.currentTimeMillis();
		this.command = command;
		this.resolver = resolver;
	}

	public XPathResult get() throws TimeoutException, IOException, DigestMismatchException {
		 long timeout = DatabaseDescriptor.getRpcTimeout() - (System.currentTimeMillis() - startTime);
	        boolean success;
	        try
	        {
	            success = condition.await(timeout, TimeUnit.MILLISECONDS);
	        }

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryCommand.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.util.Arrays;

import org.apache.cassandra.dht.AbstractBounds;
import org.apache.cassandra.dht.Range;
import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.io.util.DataOutputBuffer;
import org.apache.cassandra.net.Message;
import org.apache.cassandra.net.MessageProducer;
import org.apache.cassandra.utils.FBUtilities;
import org.apache.cassandra.service.StorageService;

public class XPathQueryCommand implements MessageProducer{
	public static final byte XPATH_RECURSIVE = 1;
	public static final byte XPATH_READFULL = 2;
	public static final byte XPATH_DIGEST = 4;
	public static final byte XPATH_NODEONLY = 8;
	public static final byte XPATH_NODEID = 16;
	
	private static final XPathQueryCommandSerializer serializer = new XPathQueryCommandSerializer();
	public AbstractBounds range = null;
	public int colID = 0;
	public byte[] command = null;
	public byte flag = 0;
	/*public boolean readFull = false;
	public boolean recursive = true;
	public boolean isDigest = false;*/
	
	public XPathQueryCommand(int colID_, byte[] command_, byte flag_) {
		this.colID = colID_;
		this.command = command_;
		this.flag = flag_;
	}
	/*
	public XPathQueryCommand(int colID, byte[] command, boolean readFull, boolean isDigest, boolean recursive) {
		this.colID = colID;
		this.command = command;
			
		this.readFull = readFull;
		this.isDigest = isDigest;
		this.recursive = recursive;
	}*/
	
	public static XPathQueryCommandSerializer serializer() {
		return serializer;
	}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryResolver.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler;


import java.io.DataInputStream;
import java.io.IOError;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.Map;
import java.util.concurrent.ConcurrentMap;

import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.db.DecoratedKey;
import org.apache.cassandra.io.util.FastByteArrayInputStream;
import org.apache.cassandra.net.Message;
import org.apache.cassandra.service.DigestMismatchException;
import org.apache.cassandra.service.IResponseResolver;
import org.apache.cassandra.service.StorageService;
import org.apache.cassandra.utils.ByteBufferUtil;
import org.apache.cassandra.utils.FBUtilities;
import org.apache.commons.lang.ArrayUtils;
import org.cliffc.high_scale_lib.NonBlockingHashMap;


public class XPathQueryResolver implements IResponseResolver<XPathResult>{
	
	private static final Message FAKE_MESSAGE = new Message(
			FBUtilities.getBroadcastAddress(),
			StorageService.Verb.INTERNAL_RESPONSE, ArrayUtils.EMPTY_BYTE_ARRAY,
			-1);
	private ConcurrentMap<Message, XPathQueryResponse> replies = new NonBlockingHashMap<Message, XPathQueryResponse>();

	XPathResult data = null;
	
	//TODO: we maybe should set key to be the xpath command
	private DecoratedKey key = DatabaseDescriptor.getPartitioner().decorateKey(
			ByteBufferUtil.EMPTY_BYTE_BUFFER);
	
	@Override
	public XPathResult resolve() throws DigestMismatchException, IOException {

		long startTime = System.currentTimeMillis();
		ByteBuffer digest = null;
		for (Map.Entry<Message, XPathQueryResponse> entry : replies.entrySet()) {
			XPathQueryResponse response = entry.getValue();
			if (response.isDigest) {
				if (digest == null) {
					digest = response.digest;
				} else {
					ByteBuffer digest2 = response.digest;
					if (!digest.equals(digest2)) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryResponse.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler;


import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;

import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.utils.ByteBufferUtil;

public class XPathQueryResponse {
	public static final XPathQueryResponseSerializer serializer = new XPathQueryResponseSerializer();
	public XPathResult result = null;

	public boolean isDigest = false;
	public ByteBuffer digest = null;

	public XPathQueryResponse(boolean isDigest) {
		this.isDigest = isDigest;
	}
}

class XPathQueryResponseSerializer implements
		ICompactSerializer<XPathQueryResponse> {

	@Override
	public void serialize(XPathQueryResponse t, DataOutputStream dos,
			int version) throws IOException {
		dos.writeBoolean(t.isDigest);
		if (t.isDigest) {
			ByteBufferUtil.writeWithShortLength(t.digest, dos);
		} else {
			t.result.serializer.serialize(t.result, dos, version);
		}
	}

	@Override
	public XPathQueryResponse deserialize(DataInputStream dis, int version)
			throws IOException {
		boolean isDigest = dis.readBoolean();
		XPathQueryResponse ret = new XPathQueryResponse(isDigest);
		if (isDigest) {
			ret.digest = ByteBufferUtil.readWithShortLength(dis);
		} else {
			ret.result = XPathResult.serializer.deserialize(dis, version);
		}
		return ret;
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathQueryVerbHandler.java
 =======================================================================
/**
*@author:xiafan xiafan68@gmail.com
*@version: 2011-10-6 0.1
*/
package imc.disxmldb.cassandra.verbhandler;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;

import java.io.DataInputStream;
import java.io.IOException;
import java.util.List;

import org.apache.cassandra.io.util.DataOutputBuffer;
import org.apache.cassandra.io.util.FastByteArrayInputStream;
import org.apache.cassandra.net.IVerbHandler;
import org.apache.cassandra.net.Message;
import org.apache.cassandra.net.MessagingService;
import org.apache.cassandra.utils.FBUtilities;
import org.apache.cassandra.utils.Pair;
import org.xmldb.api.base.XMLDBException;

public class XPathQueryVerbHandler implements IVerbHandler{

	// re-use output buffers between requests
	private static ThreadLocal<DataOutputBuffer> threadLocalOut = new ThreadLocal<DataOutputBuffer>() {
		@Override
		protected DataOutputBuffer initialValue() {
			return new DataOutputBuffer();
		}
	};
	
	@Override
	public void doVerb(Message message, String id) {
		FastByteArrayInputStream in = new FastByteArrayInputStream(
				message.getMessageBody());
		boolean succ = false;
		XPathQueryCommand command = null;
		try {
			command = XPathQueryCommand.serializer().deserialize(new DataInputStream(in), message.getVersion());
			CollectionStore colStore = XMLDBStore.instance().getCollection(command.colID);
			XPathResult result  = colStore.XPathLocal(command);
	
			XPathQueryResponse response = new XPathQueryResponse(command.isDigest());
			if (command.isDigest()) {
				response.digest = result.getDigest();
			} else {
				response.result = result;
			}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/XPathResult.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.FunctionReturn;
import imc.disxmldb.cassandra.verbhandler.result.XPathResultFactory;
import imc.disxmldb.util.IXPathResult;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

import org.apache.cassandra.dht.AbstractBounds;
import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.utils.ByteBufferUtil;

public class XPathResult implements IXPathResult<XPathResult> {
	public static final XPathResultSerializer serializer = new XPathResultSerializer();

	public enum XPathResultType {
		XPathResult, NodeIDs, xmlParts, FunctionReturn, Exception, Null, Count, Average, Max, Min, Text, Sum, SeqStepOne, SeqStepTwo,NodeSketch
	};

	public static XPathResultType[] types = XPathResultType.values();

	public XPathResultType type = XPathResultType.NodeIDs;

	private IXPathResult result = null;

	private String exception = null; // 用于记录异常信息

	// currently the following fields is only used in seq function
	public int index = -1;
	public byte[] cmdb = null;
	public XPathQueryCommand cmd = null;
	public List<AbstractBounds> ranges = null;

	public CollectionStore colStore;

	public XPathResult(XPathResultType type) {
		this.type = type;
		result = XPathResultFactory.getResult(type);
	}

	public XPathResult(String exception) {
		type = XPathResultType.Exception;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/AvgResult.java
 =======================================================================
/**
 *  @author xiafan xiafan68@gmail.com
 */
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;

import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;
import java.util.LinkedList;
import java.util.List;
import java.util.Map.Entry;

import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.utils.FBUtilities;
/**
 * This class is used to store the results of an average function. As the average result should be 
 * aggregated on the coordinator node at last, this class doesn't store the real average numerical
 * value, but the count and sum of the results.This file also contains the serialization
 * and deserialization of this class.
 */
public class AvgResult extends FunctionReturn {
	public double sum = 0;
	public int count = 0;

	public AvgResult() {
		funcType = XPathResultType.Average;
	}

	@Override
	public void merge(int index_, FunctionReturn other_) {
		sum += ((AvgResult) other_).sum;
		count += ((AvgResult) other_).count;
	}

	@Override
	public List<String> result() {
		List<String> ret = new LinkedList<String>();
		if (count == 0)
			ret.add("0");
		else {
			ret.add(Double.toString(sum / count));
		}
		return ret;
	}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/CountResult.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;

import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;
import java.util.LinkedList;
import java.util.List;

import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.utils.FBUtilities;
/**
 * This class is used to store the results of the count function in xpath. 
 * It contains the serialization and deserialization of the value. The merge function
 * will be invoked on the coordinator, which just add up all the count results to reveal
 * the final result.
 */
public class CountResult extends FunctionReturn {
	public static CountResultSerializer serializer = new CountResultSerializer();
	public int count = 0;
	
	public CountResult() {
		funcType = XPathResultType.Count;
	}
	
	@Override
	public void merge(int index_,FunctionReturn other) {
		count += ((CountResult)other).count;
	}

	@Override
	public List<String> result() {
		List<String> ret = new LinkedList<String>();
		ret.add(Integer.toString(count));
		return ret;
	}

	@Override
	public ByteBuffer getDigest() {
		MessageDigest digester = FBUtilities.threadLocalMD5Digest();
		ByteArrayOutputStream aos = new ByteArrayOutputStream();
		DataOutputStream dos = new DataOutputStream(aos);

		try {
			dos.writeInt(count);
			digester.digest(aos.toByteArray());

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/FunctionReturn.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.util.IXPathResult;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.List;

import org.apache.cassandra.dht.AbstractBounds;

/**
 * This is the abstract class that defines the interface needs by an class of
 * the function result. As an xpath function may be executed on many nodes,
 * interfaces need to be defined so that the results can be merged at the
 * coordinator.
 */
public abstract class FunctionReturn implements IXPathResult<FunctionReturn> {
	/*
	 * public enum FunctionType { Count, Average, Max, Min, Text, Sum,
	 * SeqStepOne, SeqStepTwo };
	 */

	public static XPathResultType[] funcTypes = XPathResultType.values();
	public static final FunctionReturnSerializer serializer = new FunctionReturnSerializer();

	protected XPathResultType funcType = XPathResultType.Text;

	public abstract void merge(int index_, FunctionReturn other_);

	public abstract List<String> result();

	public abstract ByteBuffer getDigest();

	@Override
	public void setIndex(int index_) {

	}

	@Override
	public String postProcess(XPathQueryCommand cmd, byte[] cmdb,
			CollectionStore colStore, List<AbstractBounds> ranges) {
		return null;
	}

	@Override

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/FunctionReturnSerializer.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import org.apache.cassandra.io.ICompactSerializer;
/**
 * This is the facet class that contains the serialization and deserialization of all the 
 * funciton result class
 */
public class FunctionReturnSerializer implements
		ICompactSerializer<FunctionReturn> {
	public static Map<XPathResultType, FunctionReturnSerializer> serializers = new HashMap<XPathResultType, FunctionReturnSerializer>();
	static {
		serializers.put(XPathResultType.Average, new AvgResultSerializer());
		serializers.put(XPathResultType.Sum, new SumResultSerializer());
		serializers.put(XPathResultType.Count, new CountResultSerializer());
		serializers.put(XPathResultType.Max, new MaxResultSerializer());
		serializers.put(XPathResultType.Min, new MinResultSerializer());
		serializers.put(XPathResultType.Text, new TextResultSerializer());
		serializers.put(XPathResultType.SeqStepOne, new SeqResultSerializer());
	}
	
	@Override
	public void serialize(FunctionReturn t, DataOutputStream dos, int version)
			throws IOException {
		serializers.get(t.funcType).serialize(t, dos, version);
	}

	@Override
	public FunctionReturn deserialize(DataInputStream dis, int version)
			throws IOException {
		return serializers.get(FunctionReturn.funcTypes[dis.readInt()]).deserialize(dis, version);
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/MaxResult.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;

import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;
import java.util.LinkedList;
import java.util.List;

import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.utils.FBUtilities;
/**
 * This class is used to store the results of the max function in xpath. 
 * It contains the serialization and deserialization of the value. The merge function will be 
 * invoked on the coordinator node, which just select the max value of all the results returned by
 * the task nodes.
 */
public class MaxResult extends FunctionReturn {
	public double max = 0.0;

	public MaxResult() {
		funcType = XPathResultType.Max;
	}
	
	@Override
	public void merge(int index_, FunctionReturn other) {
		// TODO Auto-generated method stub
		if (max < ((MaxResult) other).max) {
			max = ((MaxResult) other).max;
		}
	}

	@Override
	public List<String> result() {
		List<String> ret = new LinkedList<String>();
		ret.add(Double.toString(max));
		return ret;
	}

	@Override
	public ByteBuffer getDigest() {
		MessageDigest digester = FBUtilities.threadLocalMD5Digest();
		ByteArrayOutputStream aos = new ByteArrayOutputStream();
		DataOutputStream dos = new DataOutputStream(aos);

		try {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/MinResult.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;

import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;
import java.util.LinkedList;
import java.util.List;

import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.utils.FBUtilities;

/**
 * This class is used to store the results of the min function in xpath.
 * It contains the serialization and deserialization of the value.
 */
public class MinResult extends FunctionReturn{
	public double min = 0.0d;
	
	public MinResult() {
		funcType = XPathResultType.Min;
	}
	
	@Override
	public void merge(int index_, FunctionReturn other) {
		if (min > ((MinResult)other).min )
			min = ((MinResult)other).min;
	}

	@Override
	public List<String> result() {
		List<String> ret = new LinkedList<String>();
		ret.add(Double.toString(min));
		return ret;
	}

	@Override
	public ByteBuffer getDigest() {
		MessageDigest digester = FBUtilities.threadLocalMD5Digest();
		ByteArrayOutputStream aos = new ByteArrayOutputStream();
		DataOutputStream dos = new DataOutputStream(aos);

		try {
			dos.writeDouble(min);
			digester.digest(aos.toByteArray());
		} catch (IOException e) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/SeqResult.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCallback;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.config.SysConfig;

import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map.Entry;
import java.util.TreeMap;

import org.apache.cassandra.dht.AbstractBounds;
import org.apache.cassandra.thrift.UnavailableException;
import org.apache.cassandra.utils.FBUtilities;
import org.apache.cassandra.utils.Pair;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SeqResult extends FunctionReturn {
	public static SeqResultSerializer serializer = new SeqResultSerializer();
	private static final Logger logger = LoggerFactory
			.getLogger(SeqResult.class);
	/*
	 * public int count = 0; private int cacheID = -1;
	 */
	private Pair<Integer, Integer> ret = new Pair<Integer, Integer>(-1, 0);
	private TreeMap<Integer, Pair<Integer, Integer>> counts = new TreeMap<Integer, Pair<Integer, Integer>>();
	private List<String> results = null;

	// following fields is not needed to be serialize
	private HashMap<Integer, Pair<Integer, Integer>> limits = new HashMap<Integer, Pair<Integer, Integer>>();

	public SeqResult() {
		funcType = XPathResultType.SeqStepOne;
	}

	@Override
	public void merge(int index_, FunctionReturn other_) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/SumResult.java
 =======================================================================

package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;

import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;
import java.util.LinkedList;
import java.util.List;

import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.utils.FBUtilities;
/**
 * This class is used to store the results of the sum function in xpath.
 *  It contains the serialization and deserialization of the value. The merge function will
 *  just add up the sum result of all the returned value.
 */
public class SumResult extends FunctionReturn {
	public double sum = 0.0;

	public SumResult() {
		funcType = XPathResultType.Sum;
	}

	@Override
	public void merge(int index_, FunctionReturn other) {
		sum += ((SumResult)other).sum;
	}

	@Override
	public List<String> result() {
		List<String> ret = new LinkedList<String>();
		ret.add(Double.toString(sum));
		return ret;
	}

	@Override
	public ByteBuffer getDigest() {
		MessageDigest digester = FBUtilities.threadLocalMD5Digest();
		ByteArrayOutputStream aos = new ByteArrayOutputStream();
		DataOutputStream dos = new DataOutputStream(aos);

		try {
			dos.writeDouble(sum);
			digester.digest(aos.toByteArray());
		} catch (IOException e) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/TextResult.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;

import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;
import java.util.LinkedList;
import java.util.List;

import org.apache.cassandra.io.ICompactSerializer;
import org.apache.cassandra.utils.FBUtilities;

/**
 * This class is used to store the results of the text function in xpath. It
 * contains the serialization and deserialization of the value.
 */
public class TextResult extends FunctionReturn {

	public List<String> texts = new LinkedList<String>();

	public TextResult() {
		funcType = XPathResultType.Text;
	}

	@Override
	public void merge(int index_, FunctionReturn other) {
		texts.addAll(((TextResult) other).texts);
	}

	@Override
	public List<String> result() {
		return texts;
	}

	@Override
	public int size() {
		return (texts == null ? 0 : texts.size());
	}

	@Override
	public ByteBuffer getDigest() {
		MessageDigest digester = FBUtilities.threadLocalMD5Digest();
		ByteArrayOutputStream aos = new ByteArrayOutputStream();
		DataOutputStream dos = new DataOutputStream(aos);

		try {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XMLDocNodeIDs.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.util.IXPathResult;

import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.Map.Entry;

import org.apache.cassandra.dht.AbstractBounds;
import org.apache.cassandra.utils.FBUtilities;

public class XMLDocNodeIDs implements IXPathResult<XMLDocNodeIDs> {
	// colID: {xmlDocID: [nodeID]}
	public Map<Integer, Map<Integer, List<Integer>>> nodeIDs = new TreeMap<Integer, Map<Integer, List<Integer>>>();

	@Override
	public int size() {
		return nodeIDs.size();
	}

	public void addNodeID(Integer colID, Integer xmlID, Integer nodeID) {
		if (nodeIDs.containsKey(colID)) {
			Map<Integer, List<Integer>> xml2NodeIDs = nodeIDs.get(colID);
			if (xml2NodeIDs.get(xmlID) == null) {
				List<Integer> nodes = new LinkedList<Integer>();
				nodes.add(nodeID);
				xml2NodeIDs.put(xmlID, nodes);
			} else {
				xml2NodeIDs.get(xmlID).add(nodeID);
			}
		} else {
			HashMap<Integer, List<Integer>> xml2NodeIDs = new HashMap<Integer, List<Integer>>();
			nodeIDs.put(colID, xml2NodeIDs);
			List<Integer> nodes = new LinkedList<Integer>();
			nodes.add(nodeID);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XMLDocXMLParts.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.util.IXPathResult;

import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.Map.Entry;

import org.apache.cassandra.dht.AbstractBounds;
import org.apache.cassandra.utils.FBUtilities;
import org.xmldb.api.base.XMLDBException;

public class XMLDocXMLParts implements IXPathResult<XMLDocXMLParts> {
	public Map<Integer, Map<Integer, List<String>>> XMLParts = new TreeMap<Integer, Map<Integer, List<String>>>();

	@Override
	public ByteBuffer getDigest() {
		MessageDigest digester = FBUtilities.threadLocalMD5Digest();
		ByteArrayOutputStream aos = new ByteArrayOutputStream();
		DataOutputStream dos = new DataOutputStream(aos);

		try {
			for (Entry<Integer, Map<Integer, List<String>>> colEntry : XMLParts
					.entrySet()) {
				dos.writeInt(colEntry.getKey());
				Map<Integer, List<String>> xml2XMLParts = colEntry
						.getValue();
				for (Entry<Integer, List<String>> entry : xml2XMLParts
						.entrySet()) {
					dos.writeInt(entry.getKey());
					for (String part : entry.getValue()) {
						dos.writeUTF(part);
					}
				}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XMLNodeForMutations.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.Map.Entry;

import org.apache.cassandra.dht.AbstractBounds;
import org.apache.cassandra.utils.ByteBufferUtil;
import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.dom.XMLNodeForMutation;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.util.IXPathResult;

public class XMLNodeForMutations implements IXPathResult<XMLNodeForMutations> {
	public Map<Integer, Map<Integer, List<XMLNodeForMutation>>> nodes = new TreeMap<Integer, Map<Integer, List<XMLNodeForMutation>>>();

	public void addNodeSketch(IndexQueryResult result_) {
		Iterator<Integer> colIter = result_.colIterator();
		while (colIter.hasNext()) {
			int colID = colIter.next();
			CollectionStore colStore;
			try {
				colStore = XMLDBStore.instance().getCollection(colID);
			} catch (XMLDBException e) {
				continue;
			}
			if (colStore == null)
				continue;
			TreeMap<Integer, List<NodeUnit>> nodes = result_
					.getColResult(colID);
			for (Entry<Integer, List<NodeUnit>> XMLEntry : nodes.entrySet()) {
				int XMLID = XMLEntry.getKey();
				for (NodeUnit nodeUnit : XMLEntry.getValue()) {
					addXMLNodeSketch(
							colID,
							XMLID,

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/cassandra/verbhandler/result/XPathResultFactory.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.util.IXPathResult;

public class XPathResultFactory {
	public static IXPathResult getResult(XPathResultType type_) {
		if (type_ == XPathResultType.Average) {
			return new AvgResult();
		} else if (type_ == XPathResultType.Max) {
			return new MaxResult();
		} else if (type_ == XPathResultType.Min) {
			return new MinResult();
		} else if (type_ == XPathResultType.Count) {
			return new CountResult();
		} else if (type_ == XPathResultType.Sum) {
			return new SumResult();
		} else if (type_ == XPathResultType.Text
				|| type_ == XPathResultType.SeqStepTwo) {
			return new TextResult();
		} else if (type_ == XPathResultType.SeqStepOne) {
			return new SeqResult();
		} else if (type_ == XPathResultType.xmlParts) {
			return new XMLDocXMLParts();
		} else if (type_ == XPathResultType.NodeIDs) {
			return new XMLDocNodeIDs();
		} else if (type_ == XPathResultType.NodeSketch) {
			return new XMLNodeForMutations();
		} else {
			return null;
			//throw new RuntimeException(type_.toString() + " is not supported");
		}
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/CollectionMetaData.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-2 0.1
 */
package imc.disxmldb.config;

import imc.disxmldb.XMLDBStore;
import imc.disxmldb.dom.XMLNodeImpl;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.security.Permission;
import imc.disxmldb.security.PermissionFactory;
import imc.disxmldb.security.UnixStylePermissionSerializer;
import imc.disxmldb.security.XMLDBSecurityManager;
import imc.disxmldb.security.UnixStylePermission;
import imc.disxmldb.util.ColumnFamilyStoreSerializable;
import imc.disxmldb.util.ColumnFamilyStoreProxy;

import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.charset.CharacterCodingException;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.atomic.AtomicInteger;

import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.db.SuperColumn;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.Int32Type;
import org.apache.cassandra.db.marshal.IntegerType;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.service.StorageProxy;
import org.apache.cassandra.thrift.InvalidRequestException;
import org.apache.cassandra.thrift.UnavailableException;
import org.apache.cassandra.utils.ByteBufferUtil;

/**

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/DataFlushServiceFactory.java
 =======================================================================
package imc.disxmldb.config;

/**
 * This class is the factory class that creates the MutationFlushService which is used
 * to flush the meta data to the underlying store.
 *
 */
public class DataFlushServiceFactory {
	public static DataFlushServiceFactory instance = new DataFlushServiceFactory();
	
	public MutationFlushService getMetaDataFlushService() {
		return new InstantMetaDataFlushService();
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/InstantMetaDataFlushService.java
 =======================================================================
package imc.disxmldb.config;

import java.util.Arrays;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.service.StorageProxy;
import org.apache.cassandra.thrift.ConsistencyLevel;

/**
 * a synchronized manner to execute the flush operation, which means the invoker must wait for this
 * operation to finish
 * @author xiafan
 * 
 */
public class InstantMetaDataFlushService implements
		MutationFlushService {

	private ExecutorService service = Executors.newSingleThreadExecutor();

	@Override
	public boolean flush(RowMutation rm, ConsistencyLevel level) {
		final RowMutation frm = rm;
		//create a callable object that invokes that mutation operation
		Callable call = new Callable() {
			@Override
			public Object call() {
				try {
					StorageProxy.mutate(Arrays.asList(frm),
							XMLDBCatalogManager.CATALOG_CONSISTENCYLEVEL);
				} catch (Exception e) {
					e.printStackTrace();
					return false;
				}
				return true;
			}
		};

		//execute the operation and wait for it to complete
		Future<Boolean> result = service.submit(call);
		for (int i = 0; i < SysConfig.FAILURE_RETRY; i++) {
			try {
				boolean ret = result.get();
				return ret;
			} catch (Exception e) {
				e.printStackTrace();
			}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/MutationFlushService.java
 =======================================================================
package imc.disxmldb.config;

import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.thrift.ConsistencyLevel;

/**
 * define the interface used to flush the MetaData mutation
 * @author xiafan
 *
 */
public interface MutationFlushService{
	/**
	 * the MetaData mutation is submitted in the form of RowMutation.
	 * @param rm
	 */
	public boolean flush(RowMutation rm, ConsistencyLevel level);

	public void shutdown();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/SysConfig.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-3 0.1
 */
package imc.disxmldb.config;
import java.util.ArrayList;
import java.util.List;

import org.apache.cassandra.config.CFMetaData;
import org.apache.cassandra.config.ConfigurationException;
import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.db.marshal.CompositeType;
import org.apache.cassandra.db.marshal.Int32Type;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.locator.SimpleStrategy;
import org.apache.cassandra.thrift.ConsistencyLevel;

/**
 * this class defines all the parameters used to configure the system.
 * @author xiafan
 *
 */
public class SysConfig {

	public final static int MATCH_EXACT = 0;

	public final static int MATCH_REGEXP = 1;

	public final static int MATCH_WILDCARDS = 2;

	public final static String ROOT_COLLECTION_NAME = "db";

	public final static String ROOT_COLLECTION = "/" + ROOT_COLLECTION_NAME;

	public final static String SYSTEM_COLLECTION_NAME = "system";

	public final static String SYSTEM_COLLECTION = ROOT_COLLECTION + "/"
			+ SYSTEM_COLLECTION_NAME;

	public final static String TEMP_COLLECTION_NAME = "temp";

	public final static String TEMP_COLLECTION = SYSTEM_COLLECTION + "/"
			+ TEMP_COLLECTION_NAME;

	// TODO : move elsewhere
	public static final String CONFIGURATION_ELEMENT_NAME = "xupdate";

	// TODO : move elsewhere
	public final static String XUPDATE_FRAGMENTATION_FACTOR_ATTRIBUTE = "allowed-fragmentation";


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLDBCatalogManager.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-3 0.1
 */
package imc.disxmldb.config;

import java.lang.management.ManagementFactory;
import java.net.URISyntaxException;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.Set;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import javax.management.MBeanServer;
import javax.management.ObjectName;

import imc.disxmldb.XMLDBStore;
import imc.disxmldb.security.Permission;
import imc.disxmldb.security.PermissionDeniedException;
import imc.disxmldb.security.PermissionFactory;
import imc.disxmldb.security.User;
import imc.disxmldb.security.XMLDBSecurityManager;
import imc.disxmldb.util.ColumnFamilyStoreSerializable;
import imc.disxmldb.util.ColumnFamilyStoreProxy;

import org.apache.cassandra.config.Schema;
import org.apache.cassandra.config.Config.XMLServerMode;
import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.Int32Type;
import org.apache.cassandra.thrift.ConsistencyLevel;
import org.apache.cassandra.utils.FBUtilities;
import org.apache.cassandra.utils.Pair;
import org.exist.xmldb.XmldbURI;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.XMLDBException;

/**
 * the catalog meta data is stored in the keyspace xmldb_sys_catalog. This class
 * is used to manage the cache of the meta data of collection, xml doc and
 * schema. It will periodically resynchronize the cache of these meta data.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLDBCatalogManagerMBean.java
 =======================================================================
package imc.disxmldb.config;

public interface XMLDBCatalogManagerMBean {
	public void repairCollectionMetadata(int colID);
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLMetaData.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-3 0.1
 */
package imc.disxmldb.config;

import imc.disxmldb.util.ColumnFamilyStoreSerializable;
import imc.disxmldb.util.ColumnFamilyStoreProxy;

import java.nio.ByteBuffer;
import java.nio.charset.CharacterCodingException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.MarshalException;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.service.StorageProxy;
import org.apache.cassandra.thrift.InvalidRequestException;
import org.apache.cassandra.thrift.TimedOutException;
import org.apache.cassandra.thrift.UnavailableException;
import org.apache.cassandra.utils.ByteBufferUtil;

/**
 * this meta data is stored in keyspace:xmldb_sys_catalog, columnfamily:
 * xmlcatalog. besides, maxNodeID is stored in a special columnfamily
 * 
 * @author Administrator
 * 
 */
public class XMLMetaData implements ColumnFamilyStoreSerializable {
	public static final ByteBuffer BASEINFO = SysConfig.XMLCf.getComparatorFor(
			null).fromString("baseinfo");
	public static final ByteBuffer XMLPART_MAPPING = SysConfig.XMLCf
			.getComparatorFor(ByteBufferUtil.EMPTY_BYTE_BUFFER).fromString(
					"xmlpart_mapping");

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/config/XMLSchemaMetaData.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-3 0.1
 */
package imc.disxmldb.config;

import java.nio.charset.CharacterCodingException;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.TimeoutException;

import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.thrift.InvalidRequestException;
import org.apache.cassandra.thrift.TimedOutException;
import org.apache.cassandra.thrift.UnavailableException;
import org.apache.cassandra.utils.ByteBufferUtil;

import imc.disxmldb.util.ColumnFamilyStoreSerializable;
import imc.disxmldb.util.ColumnFamilyStoreProxy;

/**
 * this metadata is stored in a standard column family
 * 
 * @author Administrator
 * 
 */
public class XMLSchemaMetaData implements ColumnFamilyStoreSerializable {
	// public static final String BASEINFO_NAME = "name";
	public static final String BASEINFO_CREATEDATE = "createdate";
	public static final String BASEINFO_MODIFYDATE = "modifydate";
	public static final String BASEINFO_SCHEMA = "schema";

	private String schemaName = null;
	private String schema;
	private long createDate = -1;
	private long modifyDate = -1;

	private boolean isDirty = true;

	public XMLSchemaMetaData(String schemaName) {
		this.schemaName = schemaName;
	}

	/**
	 * used to create a new schema
	 * 
	 * @param schemaName
	 * @param schema
	 * @param createDate

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/AttributeNode.java
 =======================================================================
/**
*@author:xiafan xiafan68@gmail.com
*@version: 2011-10-2 0.1
*/
package imc.disxmldb.dom;

/**
 * the interface for an attribute node
 */
public interface AttributeNode {
	
}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/AttributeNodeImpl.java
 =======================================================================
package imc.disxmldb.dom;

/**
 * the implementation of attribute node
 */
public class AttributeNodeImpl extends XMLNodeImpl implements AttributeNode{
	
	public AttributeNodeImpl(String tagNameIn, int idIn, int depthIn, XMLNode parentIn) {
		super(tagNameIn, idIn, parentIn, depthIn, XMLNode.ATTRIBUTENODE);
		// TODO Auto-generated constructor stub
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/AttributeNodeSerializer.java
 =======================================================================
package imc.disxmldb.dom;

import java.nio.ByteBuffer;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.dom.typesystem.ValueType;

import org.apache.cassandra.db.ColumnFamily;
import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.SuperColumn;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.utils.ByteBufferUtil;

/**
 * This class defines the serialization and deserialization
 * behave of attribute node
 *
 */
public class AttributeNodeSerializer extends XMLNodeSerializer {
	@Override
	public ColumnFamily serialize(String keyspace, String cfName, XMLNode node) {
		long startTime = System.currentTimeMillis();
		ColumnFamily cf = ColumnFamily.create(keyspace, cfName);
		ByteBuffer spName = CollectionStore.SPNAMETYPE.fromString(Integer
				.toString(node.getId()));
		long timestamp = System.currentTimeMillis();

		if (node.getParent() != null)
			cf.addColumn(new QueryPath(cfName, spName.duplicate(),
					CollectionStore.PARENTID), ByteBufferUtil.bytes(node
					.getParent().getId()), timestamp);
		
		cf.addColumn(new QueryPath(cfName, spName.duplicate(),
				CollectionStore.NODETYPE), ByteBuffer
				.wrap(new byte[] { node.getNodeType() }), timestamp);

		cf.addColumn(new QueryPath(cfName, spName.duplicate(),
				CollectionStore.DEPTH), ByteBufferUtil.bytes(node.getLevel()), timestamp);
		if (node.getTagName() != null)
			cf.addColumn(new QueryPath(cfName, spName.duplicate(),
					CollectionStore.TAGNAME), UTF8Type.instance
					.fromString(node.getTagName()), timestamp);

		cf.addColumn(new QueryPath(cfName, spName.duplicate(),
				CollectionStore.VALUE), node.getValue(), timestamp);

		cf.addColumn(new QueryPath(cfName, spName.duplicate(),
				CollectionStore.VALUETYPE), ByteBufferUtil.bytes(node.getValueType()
				.ordinal()), timestamp);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/ElementNode.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-2 0.1
 */
package imc.disxmldb.dom;

import java.util.List;

/**
 * Define the interface of an element node
 *
 */
public interface ElementNode {

	public int getAttrNum();

	public List<XMLNode> getAttributeNodes();

	public void addAttribute(XMLNode attr);

	public void deleteAttribute(XMLNode attr);

	public int getChildNum();

	public List<XMLNode> getChilds();

	public void addChild(XMLNode child);

	public void deleteChild(XMLNode child);
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/ElementNodeImpl.java
 =======================================================================
package imc.disxmldb.dom;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

/**
 * Implementation of element node
 *
 */
public class ElementNodeImpl extends XMLNodeImpl implements ElementNode{
	private List<XMLNode> attrs = new LinkedList<XMLNode>();
	private List<XMLNode> childs = new ArrayList<XMLNode>();

	public ElementNodeImpl(String tagNameIn, int idIn, int depthIn, XMLNode parentIn) {
		super(tagNameIn, idIn, parentIn, depthIn, XMLNode.ELEMENTNODE);
	}

	public int getAttrNum() {
		return attrs.size();
	}

	public List<XMLNode> getAttributeNodes() {
		return attrs;
	}

	public void addAttribute(XMLNode attr) {
		attrs.add(attr);
	}

	public void deleteAttribute(XMLNode attr) {
		for (Iterator<XMLNode> iter = attrs.iterator(); iter.hasNext();) {
			XMLNode node = iter.next();
			if (compByID.compare(node, attr) == 0) {
				iter.remove();
			}
		}
	}

	public int getChildNum() {
		return childs.size();
	}

	public List<XMLNode> getChilds() {
		return childs;
	}

	public void addChild(XMLNode child) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/ElementNodeSerializer.java
 =======================================================================
package imc.disxmldb.dom;

import java.nio.ByteBuffer;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.dom.typesystem.ValueType;

import org.apache.cassandra.db.ColumnFamily;
import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.SuperColumn;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.utils.ByteBufferUtil;

/**
 * this class defines the behave of serialization and deserialization of element
 * node
 * 
 */
public class ElementNodeSerializer extends XMLNodeSerializer {

	@Override
	public ColumnFamily serialize(String keyspace, String cfName, XMLNode node) {
		long startTime = System.currentTimeMillis();
		ColumnFamily cf = ColumnFamily.create(keyspace, cfName);
		ByteBuffer spName = CollectionStore.SPNAMETYPE.fromString(Integer
				.toString(node.getId()));
		long timestamp = System.currentTimeMillis();

		if (node.getParent() != null)
			cf.addColumn(new QueryPath(cfName, spName.duplicate(),
					CollectionStore.PARENTID), ByteBufferUtil.bytes(node
					.getParent().getId()), timestamp);

		cf.addColumn(new QueryPath(cfName, spName.duplicate(),
				CollectionStore.NODETYPE), ByteBuffer.wrap(new byte[] { node
				.getNodeType() }), timestamp);

		cf.addColumn(new QueryPath(cfName, spName.duplicate(),
				CollectionStore.DEPTH), ByteBufferUtil.bytes(node.getLevel()),
				timestamp);
		if (node.getTagName() != null)
			cf.addColumn(new QueryPath(cfName, spName.duplicate(),
					CollectionStore.TAGNAME), UTF8Type.instance.fromString(node
					.getTagName()), timestamp);

		cf.addColumn(new QueryPath(cfName, spName.duplicate(),
				CollectionStore.VALUE), node.getValue(), timestamp);

		cf.addColumn(new QueryPath(cfName, spName.duplicate(),

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/LocalXMLReadRunnable.java
 =======================================================================
package imc.disxmldb.dom;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XMLReadNodeCallback;
import imc.disxmldb.cassandra.verbhandler.XMLReadNodeCommand;
import imc.disxmldb.cassandra.verbhandler.XMLReadNodeResponse;
import imc.disxmldb.cassandra.verbhandler.XMLReadNodeVerbHandler;
import imc.disxmldb.util.DroppableRunnable;

import java.io.IOException;

import org.apache.cassandra.net.MessagingService;
import org.apache.cassandra.service.StorageService;
import org.apache.cassandra.utils.FBUtilities;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.xmldb.api.base.XMLDBException;

public class LocalXMLReadRunnable extends DroppableRunnable {
	public static final Logger logger = LoggerFactory
			.getLogger(LocalXMLReadRunnable.class);
	
	private final XMLReadNodeCommand command;
	private final XMLReadNodeCallback handler;
	private final long start = System.currentTimeMillis();

	public LocalXMLReadRunnable(XMLReadNodeCommand command,
			XMLReadNodeCallback handler) {
		super(StorageService.Verb.XML_READ_NODE);
		this.command = command;
		this.handler = handler;
	}

	protected void runMayThrow() throws IOException, XMLDBException {
		if (logger.isDebugEnabled())
			logger.debug("LocalReadRunnable reading " + command);

		CollectionStore colStore = XMLDBStore.instance().getCollection(
				command.getColID());
		String xmlContent = colStore.retrieveLocal(command.getXmlID(),
				command.getNodeID());
		XMLReadNodeResponse result = XMLReadNodeVerbHandler.getResponse(
				command, xmlContent);
		MessagingService.instance().addLatency(
				FBUtilities.getBroadcastAddress(),
				System.currentTimeMillis() - start);
		handler.response(result);
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/NodeProxy.java
 =======================================================================
package imc.disxmldb.dom;

import imc.disxmldb.dom.typesystem.ValueType;

import java.nio.ByteBuffer;
import java.util.List;

import org.apache.cassandra.cache.ICache;
import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.utils.Pair;

/**
 * This is an proxy class that implements both the interface of
 * element node and attribute node. It can behave as an attribute node or
 * element node in according to the node it proxies for.
 *
 */
public class NodeProxy implements XMLNode, ElementNode, AttributeNode {
	public enum NodeProxyType {
		remote, local
	};

	private NodeProxyType proxyType = null;
	private ThreadLocal<XMLNode> node = new ThreadLocal<XMLNode>();

	private int XMLID = -1;
	private int nodeID = -1;

	public NodeProxy(int XMLID, int nodeID) {
		this.XMLID = XMLID;
		this.nodeID = nodeID;
	}

	public NodeProxy(int XMLID, int nodeID, NodeProxyType proxyType) {
		this.XMLID = XMLID;
		this.nodeID = nodeID;
		this.proxyType = proxyType;
	}

	public void fillNode(XMLNode node) {
		this.node.set(node);
	}

	public boolean isLoaded() {
		return node.get() != null;
	}

	public void unloadNodeSelf() {
		XMLNode sNode = this.node.get();
		if (sNode == null)

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNode.java
 =======================================================================
package imc.disxmldb.dom;

import imc.disxmldb.dom.typesystem.ValueType;

import java.nio.ByteBuffer;
import java.util.Comparator;

import org.apache.cassandra.db.marshal.AbstractType;


/**
 * Define the common interface needed by an XML node
 *
 */
public interface XMLNode {
	public static final byte ELEMENTNODE = 1;
	public static final byte ATTRIBUTENODE = 2;
	public static final byte PROXYNODE = 3;
	public static final Comparator<XMLNode> compByID = new XMLNodeComparatorByID();

	public static class XMLNodeComparatorByID implements
			Comparator<XMLNode> {

		@Override
		public int compare(XMLNode o1, XMLNode o2) {
			return o1.getId() - o2.getId();
		}

	};

	public String getTagName();

	public void setTagName(String tagName);

	public XMLNode getParent();

	public void setParent(XMLNode parent);

	/**
	 * judge whether this node is a root node
	 * 
	 * @return
	 */
	public boolean isRoot();

	public int getId();

	public void setId(int id);

	public double[] getRange();

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeForMutation.java
 =======================================================================
package imc.disxmldb.dom;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.dom.typesystem.ValueType;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;

import org.apache.cassandra.db.ColumnFamily;
import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.utils.ByteBufferUtil;

public class XMLNodeForMutation {
	public String tagName = null; // 在删除时被用到，用于更新attr或者ele索引
	public int id; // node id
	public double[] range = new double[2];
	public ValueType valueType = ValueType.UNKNOW;
	public ByteBuffer value = ByteBufferUtil.EMPTY_BYTE_BUFFER;
	public int level = 0;
	protected final byte nodeType;

	public XMLNodeForMutation(byte NodeType_) {
		nodeType = NodeType_;
	}

	/**
	 * 
	 * @param keyspace_
	 * @param cfName_
	 * @param node_
	 * @param rm_
	 *            不能为空
	 * @return
	 */
	public void udpate(ColumnFamily cf_) {
		long timestamp = System.currentTimeMillis();
		String cfName = cf_.metadata().cfName;
		ByteBuffer spName = CollectionStore.SPNAMETYPE.fromString(Integer
				.toString(id));
		cf_.addColumn(new QueryPath(cfName, spName.duplicate(),
				CollectionStore.NODETYPE), ByteBuffer
				.wrap(new byte[] { nodeType }), timestamp);
		cf_.addColumn(new QueryPath(cfName, spName.duplicate(),
				CollectionStore.DEPTH), ByteBufferUtil.bytes(level),
				timestamp);
		cf_.addColumn(new QueryPath(cfName, spName.duplicate(),

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeImpl.java
 =======================================================================
/**
 *@author:xiafan68
 *@version: 2011-9-27 0.1
 */
package imc.disxmldb.dom;

import imc.disxmldb.dom.typesystem.ValueType;

import java.nio.ByteBuffer;
import java.util.Comparator;

import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.db.marshal.DateType;
import org.apache.cassandra.db.marshal.DoubleType;
import org.apache.cassandra.db.marshal.FileSizeType;
import org.apache.cassandra.db.marshal.Int32Type;
import org.apache.cassandra.db.marshal.LongType;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.utils.ByteBufferUtil;

/**
 * This class implements the common interface of XML node. There are
 * two kinds of XMl nodes: element node and attribute node.
 * 
 */
public abstract class XMLNodeImpl implements XMLNode {
	private static XMLNodeSerializer serializer = new XMLNodeSerializer();

	public static XMLNodeSerializer serializer() {
		return serializer;
	}

	String tagName = null;

	public int id;
	public double[] range = new double[2];
	public XMLNode parent = null;
	public ValueType valueType = ValueType.UNKNOW;
	public ByteBuffer value = ByteBufferUtil.EMPTY_BYTE_BUFFER;
	public int level = 0;
	protected final byte nodeType;

	public XMLNodeImpl(String tagNameIn, int idIn, XMLNode parentIn,
			int levelIn, byte nodeTypeIn) {
		this.tagName = tagNameIn;
		this.id = idIn;
		this.parent = parentIn;
		this.nodeType = nodeTypeIn;
		this.level = levelIn;
	}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeMBean.java
 =======================================================================
package imc.disxmldb.dom;

/**
 * define the interface to provide runtime information to
 * support JMX
 * @author xiafan
 *
 */
public interface XMLNodeMBean {
	public long getSerializeLatency();
	public long getDeserializeLatency();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/XMLNodeSerializer.java
 =======================================================================
package imc.disxmldb.dom;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.util.IXMLNodeSerializer;
import imc.disxmldb.util.XMLNodeSerializerMBean;

import java.lang.management.ManagementFactory;
import java.nio.ByteBuffer;
import java.util.HashMap;

import javax.management.MBeanServer;
import javax.management.ObjectName;

import org.apache.cassandra.db.ColumnFamily;
import org.apache.cassandra.db.SuperColumn;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.utils.ByteBufferUtil;
import org.apache.cassandra.utils.LatencyTracker;

/**
 * The facet class integrates all the serialization class of XML nodes
 * 
 */
public class XMLNodeSerializer implements IXMLNodeSerializer,
		XMLNodeSerializerMBean {

	public static final LatencyTracker serializeLatencyTracker = new LatencyTracker();
	public static final LatencyTracker deserializeLatencyTracker = new LatencyTracker();

	private static HashMap<Byte, XMLNodeSerializer> serializers = new HashMap<Byte, XMLNodeSerializer>();
	static {
		serializers.put(XMLNodeImpl.ATTRIBUTENODE,
				new AttributeNodeSerializer());
		serializers.put(XMLNodeImpl.ELEMENTNODE, new ElementNodeSerializer());
	}

	/*
	 * static { MBeanServer server = ManagementFactory.getPlatformMBeanServer();
	 * try { server.registerMBean(new XMLNodeSerializer(), new
	 * ObjectName("imc.disxmldb.dom:type=XMLNodeSerializer")); } catch
	 * (Exception e) { throw new RuntimeException(e); } }
	 */
	public XMLNodeSerializer() {

	}

	@Override
	public ColumnFamily serialize(String keyspace, String cfName, XMLNode node) {
		return serializers.get(node.getNodeType()).serialize(keyspace, cfName,

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/cache/CacheManager.java
 =======================================================================
package imc.disxmldb.dom.cache;

import java.util.HashMap;

import org.apache.cassandra.cache.ICache;

/**
 * this class is the facet that includes all kinds of cache methods.
 * @author xiafan
 *
 */
public class CacheManager {
	public enum CacheType {REMOTE, LOCAL, SUBSEQ};
	private HashMap<CacheType, ICache> caches = new HashMap<CacheType, ICache>();
	
	public void register(CacheType type, ICache cache) {
		caches.put(type, cache);
	}
	
	public ICache get(CacheType type) {
		return caches.get(type);
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/cache/DomNodeCache.java
 =======================================================================
package imc.disxmldb.dom.cache;

import imc.disxmldb.dom.XMLNode;

import java.util.Set;

import org.apache.cassandra.cache.ConcurrentLinkedHashCache;
import org.apache.cassandra.cache.ICache;
import org.apache.cassandra.utils.Pair;

import com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap;
import com.googlecode.concurrentlinkedhashmap.Weighers;

/**
 * DomNodeCache manages the cache of XMLNode, which can reduce the cost of deserialization of XML nodes.
 * The key of this cache is the pair consists of XML Doc ID and XML Node ID. 
 * It doesn't maintain the global cache of XML nodes, but the cache of a single collection in the XML Store.
 * @author xiafan
 *
 */
public class DomNodeCache implements ICache<Pair<Integer, Integer>, XMLNode> {
	public static int CACHE_SIZE = 2000;
	public static int MAX_CACHE_SIZE = 10000;
	public static int DEFAULT_CONCURENCY_LEVEL = 128;
	
	private ICache<Pair<Integer, Integer>, XMLNode> iCache = null;

	public DomNodeCache(int cacheSize, int maxCacheSize) {
		 ConcurrentLinkedHashMap<Pair<Integer, Integer>, XMLNode> map = new ConcurrentLinkedHashMap.Builder<Pair<Integer, Integer>, XMLNode>()
         .weigher(Weighers.<XMLNode>singleton())
         .initialCapacity(cacheSize)
         .maximumWeightedCapacity(maxCacheSize)
         .concurrencyLevel(DEFAULT_CONCURENCY_LEVEL)
         .build();
		this.iCache = new ConcurrentLinkedHashCache<Pair<Integer, Integer>, XMLNode>(map);
	}

	@Override
	public int capacity() {
		return iCache.capacity();
	}

	@Override
	public void setCapacity(int capacity) {
		iCache.setCapacity(capacity);
	}

	@Override
	public int size() {
		return iCache.size();

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/cache/SubSequenceCache.java
 =======================================================================
package imc.disxmldb.dom.cache;

import java.util.Set;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;

import imc.disxmldb.index.btree.IndexQueryResult;

import org.apache.cassandra.cache.ICache;
import org.apache.cassandra.config.DatabaseDescriptor;


import com.google.common.collect.MapMaker;


public class SubSequenceCache implements ICache<Integer, IndexQueryResult> {
	private static final int maxLimit = 1000000;
	private ConcurrentMap<Integer, IndexQueryResult> map = null;
	private AtomicInteger cacheID = new AtomicInteger(0);
	/**
	 * the maximumSize limits the parallel subsequence queries to maxLimit
	 * 
	 * @param cacheSize
	 * @param maxCacheSize
	 */
	public SubSequenceCache() {
		map = new MapMaker()
				.concurrencyLevel(64).expireAfterWrite(DatabaseDescriptor.getRpcTimeout(),
						TimeUnit.MILLISECONDS).initialCapacity(128)
				.maximumSize(maxLimit).makeMap();

	}

	public int nextCacheID() {
		return cacheID.getAndIncrement();
	}
	
	@Override
	public int capacity() {
		return map.size();
	}

	@Override
	public void setCapacity(int capacity) {

	}

	@Override
	public void put(Integer key, IndexQueryResult value) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/formatter/IXMLNodeFormatter.java
 =======================================================================
package imc.disxmldb.dom.formatter;

import java.io.DataOutput;
import java.io.IOException;

import imc.disxmldb.dom.XMLNode;

/**
 * IXMLNodeFormatter defines the interface needs to format the string
 * representation of an XML node tree.
 * 
 * @author xiafan
 * 
 */
public interface IXMLNodeFormatter {
	/**
	 * output the node in some format to the outputstream
	 * 
	 * @param node
	 * @param out
	 */
	public void format(XMLNode node, DataOutput out) throws IOException;

	public void format(XMLNode node) throws IOException;
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/formatter/IndentedXMLNodeFormatter.java
 =======================================================================
package imc.disxmldb.dom.formatter;

import imc.disxmldb.dom.ElementNode;
import imc.disxmldb.dom.XMLNode;

import java.io.DataOutput;
import java.io.IOException;

/**
 * This class formats the XML node tree in a pretty style. Each start element
 * tag is indented and placed on a single line. The end element tag is indented the same as
 * the start element tag.
 * 
 * @author xiafan
 * 
 */
public class IndentedXMLNodeFormatter implements IXMLNodeFormatter {
	private DataOutput output = null;

	public IndentedXMLNodeFormatter(DataOutput output) {
		this.output = output;
	}

	@Override
	public void format(XMLNode node, DataOutput out) throws IOException {
		formatIntern(node, out, 0);
	}

	@Override
	public void format(XMLNode node) throws IOException {
		if (output == null)
			throw new IOException("no ouputstream is provided");
		format(node, output);
	}

	public void formatIntern(XMLNode node, DataOutput out, int indent)
			throws IOException {
		if (node.getNodeType() == XMLNode.ELEMENTNODE) {
			ElementNode temp = (ElementNode) node;
			out.writeUTF(composeIndent(indent));
			out.writeUTF("<" + node.getTagName());
			for (XMLNode attr : temp.getAttributeNodes()) {
				// avoid the case that the attribute node is still not inserted
				// while the parent node does
				if (attr.getNodeType() != XMLNode.PROXYNODE) {
					out.writeUTF(" " + attr.getTagName() + "=\""
							+ attr.asXMLValue() + "\"");
				}
			}
			out.writeUTF(">\n");

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/formatter/NormalXMLNodeFormatter.java
 =======================================================================
package imc.disxmldb.dom.formatter;

import imc.disxmldb.dom.ElementNode;
import imc.disxmldb.dom.XMLNode;

import java.io.DataOutput;
import java.io.IOException;

/**
 * NormalXMLNodeFormatter formats the XML node tree in a single line.
 * @author xiafan
 *
 */
public class NormalXMLNodeFormatter implements IXMLNodeFormatter {
	private DataOutput output = null;

	public NormalXMLNodeFormatter(DataOutput output) {
		this.output = output;
	}

	@Override
	public void format(XMLNode node, DataOutput out) throws IOException {
		formatIntern(node, out, 0);
	}

	@Override
	public void format(XMLNode node) throws IOException {
		if (output == null)
			throw new IOException("no ouputstream is provided");
		format(node, output);
	}

	public void formatIntern(XMLNode node, DataOutput out, int indent)
			throws IOException {
		if (node.getNodeType() == XMLNode.ELEMENTNODE) {
			ElementNode temp = (ElementNode) node;
			out.writeUTF("<" + node.getTagName() + " ");
			for (XMLNode attr : temp.getAttributeNodes()) {
				//avoid the case that the attribute node is still not inserted while the parent node does
				if (attr.getNodeType() != XMLNode.PROXYNODE) {
					out.writeUTF(attr.getTagName() + "=\"" + attr.asXMLValue()
							+ "\" ");
				}
			}
			out.writeUTF(">");
			for (XMLNode eleNode : temp.getChilds())
				formatIntern(eleNode, out, indent + 1);
			String textStr = node.asXMLValue();
			if (textStr.length() > 0) {
				out.writeUTF(node.asXMLValue());

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/numbering/INumberingSchema.java
 =======================================================================
/**
*@author:xiafan xiafan68@gmail.com
*@version: 2011-9-27 0.1
*/
package imc.disxmldb.dom.numbering;

/**
 * defines the interface used to generate range codes for an xml node
 *
 */
public interface INumberingSchema {
	/**
	 * get the start encoding of an element node
	 * @return
	 */
	public double startElement();
	/**
	 * get the end encoding of an element node
	 * @return
	 */
	public double endElement();
	/**
	 * get the start encoding of an attribute node
	 * @return
	 */
	public double startAttribute();
	/**
	 * get the end encoding of an attribute node
	 * @return
	 */
	public double endAttribute();
	
	/**
	 * judge whether the encoding is drained
	 * @return
	 */
	public boolean isOverflow();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/numbering/NumberingSchema.java
 =======================================================================
package imc.disxmldb.dom.numbering;

/**
 * This class implements the encoding using double as the encoding.
 * 
 */
public class NumberingSchema implements INumberingSchema {
	double[] bounds = new double[2];
	double step;
	double curCode;

	public NumberingSchema(double[] bounds, double step) {
		this.bounds[0] = bounds[0];
		this.bounds[1] = bounds[1];
		this.step = step;
		curCode = bounds[0] + step;
	}

	/**
	 * this function is usually invoked by updating the store with xupdate
	 * @param bounds
	 * @param step
	 * @param nodeCount
	 */
	public NumberingSchema(double[] bounds, double step, int nodeCount) {
		this.bounds[0] = bounds[0];
		this.bounds[1] = bounds[1];
		if (nodeCount * step * 4.3 < (bounds[1] - bounds[0])) {
			this.step = step;
			curCode = bounds[0] + step;
		} else {
			this.step = (bounds[1] - bounds[0]) / ((nodeCount+1) * 4.2);
			curCode = bounds[0] + this.step;
		}
	}
	
	@Override
	public double startElement() {
		try {
			return curCode;
		} finally {
			curCode += step;
		}
	}

	@Override
	public double endElement() {
		try {
			return curCode;
		} finally {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/ComplexType.java
 =======================================================================
package imc.disxmldb.dom.schema;

import java.util.LinkedList;
import java.util.List;

public class ComplexType extends SchemaType {
	private List<SchemaElement> elements = null;
	private List<SchemaElement> attributes = null;

	public ComplexType(String name) {
		super(name);
		elements = new LinkedList<SchemaElement>();
		attributes = new LinkedList<SchemaElement>();
	}

	public ComplexType(String name, List<SchemaElement> elements, List<SchemaElement> attrs) {
		super(name);
		this.elements = elements;
		this.attributes = attrs;
	}

	public void addElement(SchemaElement element) {
		elements.add(element);
	}

	public List<SchemaElement> getElements() {
		return elements;
	}
	
	public void setElements(List<SchemaElement> elements) {
		this.elements = elements;
	}

	public void addAttribute(SchemaElement attr) {
		attributes.add(attr);
	}

	public List<SchemaElement> getAttributes() {
		return attributes;
	}

	public void setAttributes(List<SchemaElement> attributes) {
		this.attributes = attributes;
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemaElement.java
 =======================================================================
package imc.disxmldb.dom.schema;

public class SchemaElement {
	public String tagName = null;
	public String typeName = null;
	public boolean isAttr = true;
	
	public SchemaElement(String tagName, String typeName, boolean isAttr) {
		this.tagName = tagName;
		this.typeName = typeName;
		this.isAttr = isAttr;
	}

	public String getTagName() {
		return tagName;
	}

	public void setTagName(String tagName) {
		this.tagName = tagName;
	}

	public String getTypeName() {
		return typeName;
	}

	public void setTypeName(String typeName) {
		this.typeName = typeName;
	}
	
	
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemaSimpleType.java
 =======================================================================
package imc.disxmldb.dom.schema;

import imc.disxmldb.dom.typesystem.ValueType;

import java.util.regex.Pattern;


public class SchemaSimpleType extends SchemaType {
	public static SchemaSimpleType SCHEMA_INTEGER = new SchemaSimpleType(
			SchemaType.BASIC_INTEGER, SchemaType.BASIC_INTEGER, null);
	public static SchemaSimpleType SCHEMA_DOUBLE = new SchemaSimpleType(
			SchemaType.BASIC_DOUBLE, SchemaType.BASIC_DOUBLE, null);
	public static SchemaSimpleType SCHEMA_FLOAT = new SchemaSimpleType(
			SchemaType.BASIC_FLOAT, SchemaType.BASIC_FLOAT, null);
	public static SchemaSimpleType SCHEMA_BOOLEAN = new SchemaSimpleType(
			SchemaType.BASIC_BOOLEAN, SchemaType.BASIC_BOOLEAN, null);
	public static SchemaSimpleType SCHEMA_STRING = new SchemaSimpleType(
			SchemaType.BASIC_STRING, SchemaType.BASIC_STRING, null);

	private ValueType basicType = null;
	private Pattern pattern = null;

	public SchemaSimpleType(String name, String baseType, String pattern) {
		super(name);
		this.basicType = ValueType.getValueType(baseType);
		if (pattern != null)
			this.pattern = Pattern.compile(pattern);
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemaType.java
 =======================================================================
package imc.disxmldb.dom.schema;

public abstract class SchemaType {
	public static String BASIC_STRING = "string";
	public static String BASIC_INTEGER = "integer";
	public static String BASIC_DOUBLE = "double";
	public static String BASIC_FLOAT = "float";
	public static String BASIC_BOOLEAN = "boolean";
	public static String BASIC_DATE = "date";
	
	private String name = null;
	
	public SchemaType(String name) {
		this.name = name;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/SchemasTree.java
 =======================================================================
package imc.disxmldb.dom.schema;

import java.util.HashMap;

public class SchemasTree {
	private static class TreeNode {
		public String tagName = null;
		public double[] ranges;
		public HashMap<String, TreeNode> statMap = new HashMap<String, TreeNode>();
		public int attrCount = 0;
		public int elemCount = 0;
		
		public TreeNode(String tagName) {
			this.tagName = tagName;
		}
		
	}
	private HashMap<String, String> nodeMaps = new HashMap<String, String>();
	
	public SchemasTree() {
		
	}
	
	public void update(XMLSchema schema) {
		
	}
	
	private void decreEntry() {
		
	}
	
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/schema/XMLSchema.java
 =======================================================================
package imc.disxmldb.dom.schema;

import imc.disxmldb.config.SysConfig;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;

public class XMLSchema {
	public static String NAME = "name";
	public static String TYPE = "type";
	public static String ELEMENT = "element";
	public static String COMPLEXTYPE = "complexType";
	public static String SIMPLETYPE = "simpleType";
	public static String ATTRIBUTE = "attribute";
	public static String ALL = "all";
	public static String SEQUENCE = "sequence";
	
	private Integer anonyID = new Integer(0);
	private SchemaElement rootElem = null;
	private Map<String, SchemaType> typeMap = new HashMap<String, SchemaType>();

	public XMLSchema() {

	}

	public boolean parseFromString(String schema) {
		InputStream input = new ByteArrayInputStream(schema.getBytes());
		SAXReader reader = new SAXReader();
		reader.setEncoding(SysConfig.ENCODING);
		Document doc;
		try {
			doc = reader.read(input);
			Element schemaRoot = doc.getRootElement();

			for (Iterator<Element> iter = schemaRoot.elementIterator(); iter
					.hasNext();) {
				Element elem = iter.next();
				if (elem.getName().equals(ELEMENT)) {
					rootElem = parseElement(elem);
				} else {
					parseType(elem);
				}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/DoubleComparator.java
 =======================================================================
package imc.disxmldb.dom.typesystem;

import java.nio.ByteBuffer;
import java.util.Comparator;

import org.apache.cassandra.db.marshal.DoubleType;


public class DoubleComparator implements Comparator<byte[]> {

	@Override
	public int compare(byte[] o1, byte[] o2) {
		ByteBuffer a = ByteBuffer.wrap(o1);
		ByteBuffer b = ByteBuffer.wrap(o2);
		/*int aID = a.getInt();
		int bID = b.getInt();
		int ret = DoubleType.instance.compare(a, b);
		if (ret == 0) {
			int comp = aID - bID;
			if (comp == 0)
				return 0;
			else 
				return (comp < 0)? -1: 1;
		} else 
			return ret;*/
		return DoubleType.instance.compare(a, b);
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/IntegerComparator.java
 =======================================================================
package imc.disxmldb.dom.typesystem;

import java.nio.ByteBuffer;
import java.util.Comparator;

import org.apache.cassandra.db.marshal.Int32Type;

public class IntegerComparator implements Comparator<byte[]> {

	@Override
	public int compare(byte[] o1, byte[] o2) {
		ByteBuffer a = ByteBuffer.wrap(o1);
		ByteBuffer b = ByteBuffer.wrap(o2);
	/*	int aID = a.getInt();
		int bID = b.getInt();
		int ret = Int32Type.instance.compare(a,b);
		if (ret == 0) {
			int comp = aID - bID;
			if (comp == 0)
				return 0;
			else 
				return (comp < 0)? -1: 1;
		} else 
			return ret;*/
		return Int32Type.instance.compare(a,b);
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/LongComparator.java
 =======================================================================
package imc.disxmldb.dom.typesystem;

import java.nio.ByteBuffer;
import java.util.Comparator;

import org.apache.cassandra.db.marshal.LongType;

public class LongComparator implements Comparator<byte[]> {

	@Override
	public int compare(byte[] o1, byte[] o2) {
		ByteBuffer a = ByteBuffer.wrap(o1);
		ByteBuffer b = ByteBuffer.wrap(o2);
		/*int aID = a.getInt();
		int bID = b.getInt();
		int ret = LongType.instance.compare(a,b);
		if (ret == 0) {
			int comp = aID - bID;
			if (comp == 0)
				return 0;
			else 
				return (comp < 0)? -1: 1;
		} else 
			return ret;*/
		return LongType.instance.compare(a,b);
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/TypeResolver.java
 =======================================================================
package imc.disxmldb.dom.typesystem;

import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * This class resolve the type of data in the text form.Currently it only
 * recognize the file size type
 * 
 */
public class TypeResolver {
	private static Map<Pattern, ValueType> typeMappings = new HashMap<Pattern, ValueType>();
	static {
		typeMappings.put(Pattern.compile("\\d*(\\.\\d*)?[ ]*[kK]"),
				ValueType.KILOSIZE);
		typeMappings.put(Pattern.compile("\\d*(\\.\\d+)?[ ]*([mM]|MB)"),
				ValueType.MEGASIZE);
		typeMappings.put(Pattern.compile("\\d*(\\.\\d*)?[ ]*[gG]"),
				ValueType.GIGASIZE);
		/*
		 * typeMappings .put(Pattern.compile("[\+-]*\\d*(\\.\\d*)"),
		 * ValueType.GIGASIZE);
		 */
	}

	/*
	 * private static Pattern kiloPattern = Pattern.compile("\\d*\\.\\d*[kK]");
	 * private static Pattern megaPattern = Pattern.compile("\\d*\\.\\d*[mM]");
	 * private static Pattern gegaPattern = Pattern.compile("\\d*\\.\\d*[gG]");
	 */

	public static ValueType resolve(String text) {
		ValueType ret = ValueType.STRING;
		for (Entry<Pattern, ValueType> entry : typeMappings.entrySet()) {
			Matcher matcher = entry.getKey().matcher(text);
			if (matcher.matches()) {
				ret = entry.getValue();
				break;
			}
		}
		return ret;
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/UTF8Comparator.java
 =======================================================================
package imc.disxmldb.dom.typesystem;

import java.nio.ByteBuffer;
import java.util.Comparator;

import org.apache.cassandra.db.marshal.Int32Type;
import org.apache.cassandra.db.marshal.UTF8Type;

public class UTF8Comparator implements Comparator<byte[]> {

	@Override
	public int compare(byte[] o1, byte[] o2) {
		ByteBuffer a = ByteBuffer.wrap(o1);
		ByteBuffer b = ByteBuffer.wrap(o2);
		return UTF8Type.instance.compare(a, b);
		/*int aID = a.getInt();
		int bID = b.getInt();
		return int ret = UTF8Type.instance.compare(a, b);
		if (ret == 0) {
			int comp = aID - bID;
			if (comp == 0)
				return 0;
			else 
				return (comp < 0)? -1: 1;
		} else 
			return ret;*/
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/dom/typesystem/ValueType.java
 =======================================================================
package imc.disxmldb.dom.typesystem;

import java.util.Comparator;

import imc.disxmldb.dom.schema.SchemaType;

import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.db.marshal.DateType;
import org.apache.cassandra.db.marshal.DoubleType;
import org.apache.cassandra.db.marshal.FileSizeType;
import org.apache.cassandra.db.marshal.Int32Type;
import org.apache.cassandra.db.marshal.LongType;
import org.apache.cassandra.db.marshal.UTF8Type;

public enum ValueType {
	INT, LONG, DOUBLE, DATE, STRING, UNKNOW, FILESIZE, KILOSIZE, MEGASIZE, GIGASIZE, NODETAG, ATTRTAG,ELEMENTS, BOOLEAN;

	public static final ValueType[] VALUETYPES = ValueType.values();

	public static final AbstractType[] validators = new AbstractType[] {
			Int32Type.instance, LongType.instance, DoubleType.instance,
			DateType.instance, UTF8Type.instance, UTF8Type.instance,
			DoubleType.instance, FileSizeType.getInstance(ValueType.KILOSIZE),
			FileSizeType.getInstance(ValueType.MEGASIZE),
			FileSizeType.getInstance(ValueType.GIGASIZE), UTF8Type.instance,
			UTF8Type.instance};

	public static final Comparator<byte[]>[] comparators = new Comparator[] {
			new IntegerComparator(), new LongComparator(),
			new DoubleComparator(), new UTF8Comparator(), new UTF8Comparator(),
			new UTF8Comparator(), new DoubleComparator(),
			new DoubleComparator(), new DoubleComparator(),
			new DoubleComparator(),new UTF8Comparator(),new UTF8Comparator() };

	public static boolean isFileSizeType(ValueType valueType) {
		if (valueType == FILESIZE || valueType == KILOSIZE
				|| valueType == MEGASIZE || valueType == GIGASIZE) {
			return true;
		}
		return false;
	}

	/**
	 * used by xml schema
	 * 
	 * @param type
	 * @return
	 */
	public static ValueType getValueType(String type) {
		if (type.equals(SchemaType.BASIC_STRING))

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/gms/IGMSObserver.java
 =======================================================================
/**
 * @author xiafan xiafan68@gmail.com
 */
package imc.disxmldb.gms;

import java.net.InetAddress;

/**
 * This interface defines the events used to manage the cluster
 *
 */
public interface IGMSObserver {
	/**
	 * it means the master node lost the lock on the znode on the zookeeper, which means a new master
	 * node should be elected.
	 */
	public void onMasterExit();
	
	/**
	 * it means a new master node has been elected
	 * @param ip
	 * @param host
	 */
	public void onMasterNodeChange(InetAddress masterAddr);
	
	/**
	 * it means this node lost connection to the zookeeper cluster. If
	 * this node is the master node, it should stop providing service as an master as a new master may be elected.
	 */
	public void onZooKeeperLost();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/gms/IGMSSubject.java
 =======================================================================
/**
 * @author xiafan xiafan68@gmail.com
 */
package imc.disxmldb.gms;

/**
 * This interface defines the subject interface needed to manage a gms subject.
 */
public interface IGMSSubject {
	public void register(IGMSObserver observer);

	public void unRegister(IGMSObserver observer);

	public void GMSNotify();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/gms/ZooKeeperBasedGMS.java
 =======================================================================
/**
 * This class is used to manage the cluster membership. The whole cluster uses 
 * the zookeeper to elect the master node of this cluster. At least one node of the cluster should 
 * be configured as a master. Nodes that are configured as master mode will try to create a file that
 * contains the ip address of the master node. 
 * The znode created on zookeeper is an Ephemeral node, which means the znode will be deleted once the node lost
 * possession of it. Then all the nodes that subscribe this event will be notified by the zookeeper cluster. Those
 * nodes that are configured as master node will try to create the master file again.
 * @author xiafan xiafan68@gmail.com
 */
package imc.disxmldb.gms;

import java.net.InetAddress;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.CountDownLatch;

import org.apache.cassandra.config.Config.XMLServerMode;
import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.utils.FBUtilities;
import org.apache.zookeeper.CreateMode;
import org.apache.zookeeper.WatchedEvent;
import org.apache.zookeeper.Watcher;
import org.apache.zookeeper.Watcher.Event.EventType;
import org.apache.zookeeper.ZooDefs.Ids;
import org.apache.zookeeper.ZooKeeper;
import org.apache.zookeeper.data.Stat;
import org.slf4j.LoggerFactory;
import org.slf4j.Logger;

public class ZooKeeperBasedGMS implements IGMSSubject, Watcher {
	public static final String MASTER_FILE_NAME = "master";
	private static Logger logger = LoggerFactory.getLogger(ZooKeeperBasedGMS.class);
	String[] serverList = null;
	String zookeeperDir = null;
	ZooKeeper zookeeper = null;
	CountDownLatch latch = null;
	int sessionTimeOut = 0;

	InetAddress localAddr = FBUtilities.getLocalAddress();
	private String masterFilePath = null;
	private List<IGMSObserver> observers = new LinkedList<IGMSObserver>();

	private static ZooKeeperBasedGMS instance = new ZooKeeperBasedGMS();

	public static ZooKeeperBasedGMS getInstance() {
		return instance;
	}

	private ZooKeeperBasedGMS() {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/ComparatorByRangeFirst.java
 =======================================================================
package imc.disxmldb.index;

import java.util.Comparator;
/**
 * ComparatorByRangeFirst compares two XML nodes according to the range encoding
 *
 */
public class ComparatorByRangeFirst implements Comparator<NodeUnit>{
	public static ComparatorByRangeFirst instance = new ComparatorByRangeFirst();
	/**
	 * assume if the ids of two nodes are the same, two nodes are the same 
	 */
	@Override
	public int compare(NodeUnit o1, NodeUnit o2) {
		if (o1.getNodeID() == o2.getNodeID())
			return 0;
		if (o1.getRange()[0] == o2.getRange()[0]) {
			if (o1.getRange()[1] == o2.getRange()[1]) {
				return o1.getNodeID() - o2.getNodeID();
			} else {
				return (o1.getRange()[1] > o2.getRange()[1])? 1 : -1;
			} 
		} else{
			return (o1.getRange()[0] > o2.getRange()[0]) ? 1 : -1;
		}
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/FileSizeKeyComparator.java
 =======================================================================
/**
 * @author chengchengyu
 */
package imc.disxmldb.index;

import java.util.Comparator;

import com.sleepycat.bind.tuple.TupleInput;
import com.sleepycat.je.DatabaseEntry;

/**
 * This comparator is used by the B+tree to compare the key. This comparator is
 * defined for the type FileSize type.
 * 
 */
public class FileSizeKeyComparator implements Comparator<byte[]> {

	public FileSizeKeyComparator() {
	}

	public int compare(byte[] o1, byte[] o2) {

		String e1 = new String(o1);

		String e2 = new String(o2);
		Double a1 = Double.valueOf(e1);
		Double a2 = Double.valueOf(e2);

		return a1.compareTo(a2);

	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/Node.java
 =======================================================================
/**
 * @author chengchengyu
 */

package imc.disxmldb.index;

/**
 * The class defines the smallest unit of the poster list stored in B+tree
 * 
 */
public class Node {
	private int xmlDocID = -1;
	private int nodeID = -1;
	private double[] range = new double[2];
	private int level = 0;

	public Node() {

	}

	public Node(int xmlDocID, int nodeID, double[] range, int level) {
		this.xmlDocID = xmlDocID;
		this.nodeID = nodeID;
		this.range = range;
		this.level = level;
	}

	public Node(Node node) {
		this.xmlDocID = node.xmlDocID;
		this.nodeID = node.nodeID;
		this.range = node.range;
		this.level = node.level;
	}

	public int getLevel() {
		return level;
	}

	public void setLevel(int level) {
		this.level = level;
	}

	public int getXmlDocID() {
		return xmlDocID;
	}

	public void setXmlDocID(int xmlDocID) {
		this.xmlDocID = xmlDocID;
	}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeBinding.java
 =======================================================================
/**
 * @author chengchengyu
 */
package imc.disxmldb.index;

import com.sleepycat.bind.tuple.TupleBinding;
import com.sleepycat.bind.tuple.TupleInput;
import com.sleepycat.bind.tuple.TupleOutput;

/**
 * This class defines the serialization and deserialization behavior to store a
 * node into the B+tree
 * 
 * @author xiafan
 * 
 */
public class NodeBinding extends TupleBinding<Node> {

	@Override
	public Node entryToObject(TupleInput ti) {
		int xmlID = ti.readInt();
		int nodeID = ti.readInt();
		double[] range = new double[2];
		range[0] = ti.readDouble();
		range[1] = ti.readDouble();
		int level = ti.readInt();
		return new Node(xmlID, nodeID, range, level);
	}

	@Override
	public void objectToEntry(Node node, TupleOutput to) {
		to.writeInt(node.getXmlDocID());
		to.writeInt(node.getNodeID());
		double[] range = node.getRange();
		to.writeDouble(range[0]);
		to.writeDouble(range[1]);
		to.writeInt(node.getLevel());
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeComparator.java
 =======================================================================
/**
 * @author chengchengyu
 */
package imc.disxmldb.index;

import java.util.Comparator;

import com.sleepycat.bind.tuple.TupleInput;
import com.sleepycat.je.DatabaseEntry;

/**
 * This class implements the comparator used to compare the object of Node
 * class. It will be used to sort the poster list of the B+tree.
 * 
 * @author xiafan
 * 
 */
public class NodeComparator implements Comparator<byte[]> {

	public NodeComparator() {
	}

	public int compare(byte[] o1, byte[] o2) {

		DatabaseEntry dbe1 = new DatabaseEntry(o1);
		DatabaseEntry dbe2 = new DatabaseEntry(o2);

		NodeBinding nodeBinding = new NodeBinding();

		Node node1 = (Node) nodeBinding.entryToObject(dbe1);
		Node node2 = (Node) nodeBinding.entryToObject(dbe2);

		int comp = node1.getXmlDocID() - node2.getXmlDocID();
		if (comp == 0) {
			if (node1.getNodeID() == node2.getNodeID())
				return 0;
			else {
				if (node1.getRange()[0] > node2.getRange()[0])
					return 1;
				else if (node1.getRange()[0] < node2.getRange()[0])
					return -1;
				else
					return 0;

			}
		} else {
			return comp < 0? -1 : 1;
		}
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeIDComparator.java
 =======================================================================
/**
 * @author chengchengyu
 */
package imc.disxmldb.index;

import java.util.Comparator;

import com.sleepycat.bind.tuple.TupleInput;
import com.sleepycat.je.DatabaseEntry;

/**
 * This class implements the comparator to compare two Node object. It first
 * compares by the node ID of two Node and then by the range encoding
 * 
 */
public class NodeIDComparator implements Comparator<NodeUnit> {

	public NodeIDComparator() {
	}

	public int compare(NodeUnit o1, NodeUnit o2) {

		if (o1.getRange()[1] == o1.getRange()[1])
			if (o1.getRange()[0] == o1.getRange()[0])
				if (o1.getNodeID() == o2.getNodeID())
					return 0;
				else
					return o1.getNodeID() > o2.getNodeID() ? 1 : -1;
			else
				return o1.getRange()[0] > o2.getRange()[0] ? 1 : -1;
		else
			return o1.getRange()[1] > o2.getRange()[1] ? 1 : -1;
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/NodeUnit.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-3 0.1
 */
package imc.disxmldb.index;

import imc.disxmldb.xpath.XPathSequence;

import java.util.Arrays;

/**
 * This class defines the unit of a poster list to unify the poster list
 * representation of B+tree and inverted Index
 */
public class NodeUnit {
	public static final ComparatorByRangeFirst rangeFirst = new ComparatorByRangeFirst();

	private int nodeID;
	private double[] range = new double[2];
	private int level;

	public NodeUnit(int nodeID, double[] range, int level) {
		this.nodeID = nodeID;
		this.range = range;
		this.level = level;
	}

	public NodeUnit(Node node) {
		this.nodeID = node.getNodeID();
		this.range = node.getRange();
		this.level = node.getLevel();
	}

	public int getLevel() {
		return level;
	}

	public void setLevel(int level) {
		this.level = level;
	}

	public int getNodeID() {
		return nodeID;
	}

	public void setNodeID(int nodeID) {
		this.nodeID = nodeID;
	}

	public double[] getRange() {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/XMLIndexManager.java
 =======================================================================
package imc.disxmldb.index;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.config.CollectionMetaData;
import imc.disxmldb.config.SysConfig;
import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.XMLNodeImpl;
import imc.disxmldb.dom.cache.CacheManager.CacheType;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.ComposeKeyBtree;
import imc.disxmldb.index.btree.BtreeFactory;
import imc.disxmldb.index.btree.CFBasedBtree;
import imc.disxmldb.index.btree.IBtree;
import imc.disxmldb.index.invertindex.CFInvertIndex;
import imc.disxmldb.index.invertindex.IInvertIndex;
import imc.disxmldb.util.CassandraSchemaProxy;
import imc.disxmldb.util.LocalCFStoreProxy;

import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.SortedSet;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.cassandra.config.Config.XMLServerMode;
import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.db.ColumnFamily;
import org.apache.cassandra.db.ColumnFamilyStore;
import org.apache.cassandra.db.DecoratedKey;
import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.SuperColumn;
import org.apache.cassandra.db.Table;
import org.apache.cassandra.db.commitlog.ReplayPosition;
import org.apache.cassandra.utils.ByteBufferUtil;
import org.apache.cassandra.utils.WrappedRunnable;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.xmldb.api.base.XMLDBException;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/BtreeDecorator.java
 =======================================================================
/**
 *  @author xiafan
 */
package imc.disxmldb.index.btree;

import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.filter.IdentityXMLFilter;
import imc.disxmldb.index.filter.IXMLFilter;

import java.util.LinkedList;
import java.util.List;
import org.apache.cassandra.utils.Pair;

/**
 * a decorator for B+tree that enable querying recursively into the child
 * collection of current collection.
 * 
 */
public class BtreeDecorator {
	private List<Pair<Integer, IBtree>> baseBtreeList = null;

	public BtreeDecorator() {
		baseBtreeList = new LinkedList<Pair<Integer, IBtree>>();
	}

	public BtreeDecorator(List<Pair<Integer, IBtree>> baseBtreeList) {
		this.baseBtreeList = baseBtreeList;
	}

	public void addBtree(Integer id, IBtree btree) {
		baseBtreeList.add(new Pair<Integer, IBtree>(id, btree));
	}

	/**
	 * 
	 * the List<IndexArrayUnit> should be ordered by docID, NodeUnit.range[0],
	 * NodeUnit.range[1]
	 * 
	 * @param text
	 * @return List<IndexArrayUnit>
	 */
	public IndexQueryResult get(String key, IXMLFilter filter) {
		IndexQueryResult result = new IndexQueryResult();
		for (Pair<Integer, IBtree> entry : baseBtreeList) {
			if (entry.right != null)
				result.addResult(entry.left, entry.right.get(key, filter));
		}
		return result;
	}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/BtreeFactory.java
 =======================================================================
package imc.disxmldb.index.btree;

import imc.disxmldb.dom.typesystem.ValueType;

public class BtreeFactory {
	public static IBtree createBtree(String dbpath, int cacheSize, ValueType valueType) {
		return new LazyCacheBtree(dbpath, cacheSize, valueType);
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/CFBasedBtree.java
 =======================================================================
package imc.disxmldb.index.btree;

import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.filter.IdentityXMLFilter;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.util.CassandraSchemaProxy;
import imc.disxmldb.util.LocalCFStoreProxy;

import java.io.IOException;
import java.lang.management.ManagementFactory;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;
import java.util.concurrent.ExecutionException;

import javax.management.MBeanServer;
import javax.management.ObjectName;

import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.db.marshal.Int32Type;
import org.apache.cassandra.utils.LatencyTracker;

/**
 * This class implements the B+tree based on the super column family. The
 * posterlist is first ordered by the XML Doc ID and then by the ranges in
 * ascending order
 * 
 * @author xiafan
 * 
 */
public class CFBasedBtree implements IBtree, CFBasedBtreeMBean {
	private LatencyTracker putLatencyTracker = new LatencyTracker();
	private LatencyTracker retrievelLatencyTracker = new LatencyTracker();
	private LatencyTracker removeLatencyTracker = new LatencyTracker();

	private LocalCFStoreProxy localCFStoreProxy;
	private AbstractType keyValidator = null;

	public LocalCFStoreProxy getLocalCFStoreProxy() {
		return localCFStoreProxy;
	}

	public void setLocalCFStoreProxy(LocalCFStoreProxy localCFStoreProxy) {
		this.localCFStoreProxy = localCFStoreProxy;
	}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/CFBasedBtreeMBean.java
 =======================================================================
package imc.disxmldb.index.btree;
/**
 * Interface needed by the JMX framework to provide the run state of the
 * monitored object
 */
public interface CFBasedBtreeMBean {
	public double getAvgRetrievelLatency();

	public double getRecentRetrievelLatency();

	public double getAvgRemoveLatency();

	public double getRecentRemoveLatency();

	public double getAvgPutLatency();

	public double getRecentPutLatency();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/CacheBtree.java
 =======================================================================
package imc.disxmldb.index.btree;

import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.cache.IndexCache;
import imc.disxmldb.index.filter.IXMLFilter;

import java.util.List;
import java.util.TreeMap;
import java.util.concurrent.locks.ReentrantReadWriteLock;

import com.sleepycat.je.DatabaseEntry;

public class CacheBtree extends ComposeKeyBtree {
	public static final int POSTER_LIMIT = 100000;
	IndexCache cache = new IndexCache();
	ReentrantReadWriteLock rwLock = new ReentrantReadWriteLock();

	public CacheBtree(String dbpath, int cacheSize, ValueType valueType) {
		super(dbpath, cacheSize, valueType);
	}

	@Override
	public void put(DatabaseEntry theKey_, Node node_) {
		try {
			rwLock.readLock().lock();
			super.put(theKey_, node_);
			if (cache.contains(theKey_)) {
				cache.put(theKey_, node_);
			}
		} finally {
			rwLock.readLock().unlock();
		}
	}

	@Override
	public TreeMap<Integer, List<NodeUnit>> get(DatabaseEntry key_,
			IXMLFilter filter_) {
		if (cache.contains(key_)) {
			return cache.get(key_, filter_);
		} else {
			TreeMap<Integer, List<NodeUnit>> ret = null;

			if (rwLock.writeLock().tryLock()) {
				try {
					ret = super.get(key_, filter_);
					if (isCachable(key_, ret)) {
						cache.put(key_, ret);
					}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/ComposeKeyBtree.java
 =======================================================================
/**
 * @author chengchengyu
 * 需要修改回去为简单的key
 */
package imc.disxmldb.index.btree;

import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.ComparatorByRangeFirst;
import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.filter.IdentityXMLFilter;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.util.FileUtil;
import imc.disxmldb.xpath.XPathSequence;

import java.io.File;
import java.lang.management.ManagementFactory;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.TreeMap;

import javax.management.MBeanServer;
import javax.management.ObjectName;

import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.utils.ByteBufferUtil;
import org.apache.cassandra.utils.LatencyTracker;
import org.apache.cassandra.utils.Pair;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.sleepycat.bind.tuple.DoubleBinding;
import com.sleepycat.bind.tuple.FloatBinding;
import com.sleepycat.bind.tuple.IntegerBinding;
import com.sleepycat.je.Cursor;
import com.sleepycat.je.DatabaseEntry;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.EnvironmentMutableConfig;
import com.sleepycat.je.LockMode;
import com.sleepycat.je.OperationStatus;

/**
 * This class use the Berkeley DB to implement to IBtree interface.
 */
public class ComposeKeyBtree implements IBtree, ComposeKeyBtreeMBean {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/ComposeKeyBtreeMBean.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-26 0.1
 */
package imc.disxmldb.index.btree;

/**
 * Interface needed by the JMX framework to provide the run state of the
 * monitored object
 */
public interface ComposeKeyBtreeMBean {
	public double getAvgRetrievelLatency();

	public double getRecentRetrievelLatency();

	public double getAvgRemoveLatency();

	public double getRecentRemoveLatency();

	public double getAvgPutLatency();

	public double getRecentPutLatency();

	public long getNCacheMiss();

	public long getTotalCacheSize();

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/DbEnv.java
 =======================================================================
/**
 * @author chengchengyu
 */
package imc.disxmldb.index.btree;

import imc.disxmldb.index.NodeBinding;
import imc.disxmldb.index.NodeComparator;

import java.io.File;

import com.sleepycat.bind.tuple.TupleBinding;
import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseConfig;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.Environment;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.EnvironmentMutableConfig;
import com.sleepycat.je.PreloadConfig;

/**
 * DbEnv is used to simply the configuration to set up Berkeley DB. It sets up
 * default value for some parameters while giving some flexibility for the user
 * to customize some parameters. 
 */
public class DbEnv {

	private Environment env;
	private Database nodeDb;
	private TupleBinding nodeBinding;
	private EnvironmentConfig myEnvConfig = new EnvironmentConfig();

	public EnvironmentConfig getMyEnvConfig() {
		return myEnvConfig;
	}

	public void setMyEnvConfig(EnvironmentConfig myEnvConfig) {
		this.myEnvConfig = myEnvConfig;
	}

	public DatabaseConfig getMyDbConfig() {
		return myDbConfig;
	}

	public void setMyDbConfig(DatabaseConfig myDbConfig) {
		this.myDbConfig = myDbConfig;
	}

	private DatabaseConfig myDbConfig = new DatabaseConfig();
	private EnvironmentMutableConfig mutableConfig = new EnvironmentMutableConfig();


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/IBtree.java
 =======================================================================
/**
*@author:xiafan xiafan68@gmail.com
*@version: 2011-9-27 0.1
*/
package imc.disxmldb.index.btree;

import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.filter.IXMLFilter;

import java.io.IOException;
import java.util.List;
import java.util.TreeMap;

/**
 * define the interface needed by an B+tree
 *
 */
public interface IBtree {
	/**
	 * put key/node to btree
	 * @param String,Node
	 * @return
	 */
	public void put(String key, Node node);
//	public void put(float key, Node node);
//	public void put(double key, Node node);

	
	/**
	 * 
	 * the List<IndexArrayUnit> should be ordered by docID, NodeUnit.range[0], NodeUnit.range[1]
	 * @param text
	 * @return List<IndexArrayUnit>
	 */
	public TreeMap<Integer, List<NodeUnit>> get(String key, IXMLFilter filter);
	public TreeMap<Integer, List<NodeUnit>> getLesser(String key);
	public TreeMap<Integer, List<NodeUnit>> getLesserOrEqual(String key);
	public TreeMap<Integer, List<NodeUnit>> getLesser(String key, IXMLFilter filter);
	public TreeMap<Integer, List<NodeUnit>> getLesserOrEqual(String key,
			IXMLFilter filter);
	
	public TreeMap<Integer, List<NodeUnit>> getGreater(String key);
	public TreeMap<Integer, List<NodeUnit>> getGreaterOrEqual(String key);
	public TreeMap<Integer, List<NodeUnit>> getGreater(String key, IXMLFilter filter);
	public TreeMap<Integer, List<NodeUnit>> getGreaterOrEqual(String key,IXMLFilter filter);
	
	public TreeMap<Integer, List<NodeUnit>> get(String key);
	
	public boolean contains(String key, Node node);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/IndexQueryResult.java
 =======================================================================
package imc.disxmldb.index.btree;

import imc.disxmldb.index.ComparatorByRangeFirst;
import imc.disxmldb.index.NodeUnit;

import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.TreeMap;

/**
 * This class is used to encapsulate the query results read from all those
 * indices.
 * 
 */
public class IndexQueryResult {
	Map<Integer, TreeMap<Integer, List<NodeUnit>>> results = new HashMap<Integer, TreeMap<Integer, List<NodeUnit>>>();

	/**
	 * add the result returned by the btree of collection colID
	 * 
	 * @param colID
	 * @param result
	 */
	public void addResult(Integer colID, TreeMap<Integer, List<NodeUnit>> result) {
		if (results.get(colID) == null)
			results.put(colID, result);
		else {
			TreeMap<Integer, List<NodeUnit>> thisResult = results.get(colID);
			for (Entry<Integer, List<NodeUnit>> entry : result.entrySet()) {
				if (thisResult.get(entry.getKey()) == null)
					thisResult.put(entry.getKey(), entry.getValue());
				else {
					List<NodeUnit> nodes = thisResult.get(entry.getKey());
					for (NodeUnit node : entry.getValue()) {
						int index = Collections.binarySearch(nodes, node,
								ComparatorByRangeFirst.instance);
						if (index < 0)
							nodes.add(Math.abs(index) - 1, node);
					}
				}
			}
		}
	}

	/**
	 * just overwrite the current posterList

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/btree/LazyCacheBtree.java
 =======================================================================
package imc.disxmldb.index.btree;

import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.cache.IndexCache;
import imc.disxmldb.index.filter.IXMLFilter;

import java.util.List;
import java.util.Random;
import java.util.TreeMap;
import java.util.concurrent.atomic.AtomicInteger;

import com.sleepycat.je.DatabaseEntry;

public class LazyCacheBtree extends ComposeKeyBtree {
	public static final int POSTER_LIMIT = 50000;
	IndexCache cache = new IndexCache();
	UpdateSpeed speed = new UpdateSpeed();
	Random rand = new Random();

	public LazyCacheBtree(String dbpath, int cacheSize,ValueType valueType) {
		super(dbpath, cacheSize, valueType);
	}

	@Override
	public void put(DatabaseEntry theKey_, Node node_) {
		super.put(theKey_, node_);
		speed.reportUpdate();
	}

	@Override
	public TreeMap<Integer, List<NodeUnit>> get(DatabaseEntry key_,
			IXMLFilter filter_) {
		TreeMap<Integer, List<NodeUnit>> ret = null;
		if (cache.contains(key_)) {
			ret = cache.get(key_, filter_);
			if (speed.getSpeed() > 0 || rand.nextFloat() < 0.001) {
				cache.remove(key_);
			}
		} else {
			ret = super.get(key_, filter_);
			if (isCachable(key_, ret)) {
				cache.put(key_, ret);
			}
		}
		return ret;
	}

	@Override

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/cache/IIndexCache.java
 =======================================================================
package imc.disxmldb.index.cache;

import java.util.List;
import java.util.TreeMap;

import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.filter.IXMLFilter;

public interface IIndexCache {
	public boolean contains(Object key);
	public void put(Object key, TreeMap<Integer, List<NodeUnit>> posterList);
	public void put(Object key, Node node);
	public void remove(Object key, Node node);
	public void remove(Object key);
	public TreeMap<Integer, List<NodeUnit>> get(Object key, IXMLFilter filter);
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/cache/IndexCache.java
 =======================================================================
package imc.disxmldb.index.cache;

import imc.disxmldb.index.ComparatorByRangeFirst;
import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.filter.IXMLFilter;

import java.util.ArrayList;
import java.util.List;
import java.util.Map.Entry;
import java.util.Random;
import java.util.TreeMap;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentSkipListMap;
import java.util.concurrent.ConcurrentSkipListSet;

public class IndexCache implements IIndexCache {
	private ConcurrentMap<Object, PosterList> cache = new ConcurrentHashMap<Object, PosterList>();
	int capacity = 1000;
	
	@Override
	public void put(Object key_, Node node_) {
		if (cache.containsKey(key_)) {
			// only when the cache contains key, we will update the cache
			// the posterList can only be put into this cache as a whole using
			// the other methods
			PosterList list = cache.get(key_);
			if (list != null)
				list.add(node_);
		}

	}

	@Override
	public void remove(Object key_, Node node_) {
		if (cache.containsKey(key_)) {
			PosterList list = cache.get(key_);
			if (list != null)
				list.remove(node_);
		}

	}
	
	@Override
	public void remove(Object key) {
		cache.remove(key);
	}

	@Override

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/IXMLFilter.java
 =======================================================================
/**
 * @author xiafan
 */
package imc.disxmldb.index.filter;

import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;

/**
 * the interface used to filter out the poster list returned by the query of
 * indices.
 */
public interface IXMLFilter {
	/**
	 * judge whether the given doc or node should be filtered out, if the
	 * nodeunit is null, only filter on the document level
	 * 
	 * @param xmlDocID
	 *            the id of a xml document
	 * @param nodeUnit
	 *            the nodeunit which can be null
	 * @return true if the doc or node should be filtered out
	 */
	public boolean filter(int xmlDocID, NodeUnit nodeUnit);
	public boolean filter(Node node);
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/IdentityXMLFilter.java
 =======================================================================
/**
 * @author xiafan
 */
package imc.disxmldb.index.filter;

import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;

/**
 * filter that always returns false, which means all the tuples will be returned
 */
public class IdentityXMLFilter implements IXMLFilter {
	public static IdentityXMLFilter instance = new IdentityXMLFilter();

	@Override
	public boolean filter(int xmlDocID, NodeUnit nodeUnit) {
		return false;
	}

	@Override
	public boolean filter(Node node) {
		// TODO Auto-generated method stub
		return false;
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/RootNodeFilter.java
 =======================================================================
package imc.disxmldb.index.filter;

import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;

public class RootNodeFilter implements IXMLFilter {
	IXMLFilter other = null;;
	public RootNodeFilter(IXMLFilter other) {
		this.other = other;
	}
	
	@Override
	public boolean filter(int xmlDocID, NodeUnit nodeUnit) {
		if (other != null && other.filter(xmlDocID, nodeUnit))
			return true;
		if (nodeUnit != null && nodeUnit.getLevel() != 1)
			return true;
		return false;
	}

	@Override
	public boolean filter(Node node) {
		if (other != null && other.filter(node))
			return true;
		if (node.getLevel() != 1)
			return true;
		return false;
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/filter/XMLLocalDocFilter.java
 =======================================================================
/**
 * @author xiafan
 */
package imc.disxmldb.index.filter;

import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;

import java.nio.ByteBuffer;

import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.dht.AbstractBounds;
import org.apache.cassandra.dht.IPartitioner;
import org.apache.cassandra.dht.Token;

/**
 * When replication is not setted to one, The indices will index all the data
 * belongs to multiple replication. It is necessary to filter out those
 * unnecessary tuples. filter out the doc that is not belongs to the current
 * queries. It can improve the performance of the XPath execution
 * 
 */
public class XMLLocalDocFilter implements IXMLFilter {
	private AbstractType validator;
	private IPartitioner partitioner;
	private AbstractBounds bounds;

	public XMLLocalDocFilter(AbstractType validator, IPartitioner partitioner,
			AbstractBounds bounds) {
		this.validator = validator;
		this.partitioner = partitioner;
		this.bounds = bounds;
	}

	@Override
	public boolean filter(int xmlDocID, NodeUnit nodeUnit) {
		ByteBuffer key = validator.fromString(Integer.toString(xmlDocID));
		Token token = partitioner.getToken(key);
		if (bounds.contains(token))
			return false;
		return true;
	}

	@Override
	public boolean filter(Node node) {
		ByteBuffer key = validator.fromString(Integer.toString(node.getXmlDocID()));
		Token token = partitioner.getToken(key);
		if (bounds.contains(token))
			return false;
		return true;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/CFInvertIndex.java
 =======================================================================
/*
 * author: zhangtl: OwenZhang1990@gmail.com
 */

package imc.disxmldb.index.invertindex;

import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.XMLNodeImpl;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.filter.IdentityXMLFilter;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.util.CassandraSchemaProxy;
import imc.disxmldb.util.LocalCFStoreProxy;

import java.io.IOException;
import java.lang.management.ManagementFactory;
import java.nio.ByteBuffer;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.ExecutionException;
import java.util.regex.Pattern;

import javax.management.MBeanServer;
import javax.management.ObjectName;

import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.SuperColumn;
import org.apache.cassandra.db.marshal.Int32Type;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.utils.ByteBufferUtil;
import org.apache.cassandra.utils.LatencyTracker;

/**
 * This class implements the interface needed by an InvertIndex. It use 1-gram
 * and 2-gram to index the text of XML node. For English characters, sentences
 * are splitted into words. For Chinese characters, sentences are splitted into
 * characters. All punctuation are regarded as stop words and is replaced by an

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/CFInvertIndexMBean.java
 =======================================================================
/**
*@author:xiafan xiafan68@gmail.com
*@version: 2011-10-26 0.1
*/
package imc.disxmldb.index.invertindex;
/**
 * Interface needed by the JMX framework to provide the run state of the
 * monitored object
 */
public interface CFInvertIndexMBean {
	public double getAvgPutLatency();
	public double getAvgRemoveLatency();
	/**
	 * return the latency for a get(text) operation
	 * @return
	 */
	public double getAvgRetrievelLatency();
	/**
	 * return the latency for a get(text) operation, where the text has been shingled
	 * @return
	 */
	public double getAvgUnitRetrievelLatency();
	
	public double getAvgSplitLatency();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/ICFRetrievalStrategy.java
 =======================================================================
package imc.disxmldb.index.invertindex;

import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.filter.IXMLFilter;

import java.nio.ByteBuffer;
import java.util.List;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeMap;

/**
 * The interface encapsulate the algorithm used to retrieve data from the invert
 * index.
 * 
 */
public interface ICFRetrievalStrategy {
	public TreeMap<Integer, List<NodeUnit>> retrieve(Set<String> set,
			SortedSet<ByteBuffer> xmlDocs, IXMLFilter filter);
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/IInvertIndex.java
 =======================================================================
/**
*@author: xiafan xiafan68@gmail.com
*@version: 2011-9-27 0.1
*/
package imc.disxmldb.index.invertindex;

import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.XMLNodeImpl;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.filter.IXMLFilter;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.List;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeMap;

/**
 * define the interface needed by an invert index
 */
public interface IInvertIndex {
	
		public void put(int xmlDocID, XMLNode node);
		/**
		 * the List<IndexArrayUnit> should be ordered by docID, NodeUnit.range[0], NodeUnit.range[1]
		 * @param text
		 * @return
		 */
		public TreeMap<Integer, List<NodeUnit>> get(String text);
		
		public TreeMap<Integer, List<NodeUnit>> get(Set<String> set,
				SortedSet<ByteBuffer> xmlDocs, IXMLFilter filter);
		/**
		 * 
		 * @param set
		 * @param xmlDocs
		 * 			if xmlDocs is not null, it will be used to filter out the posterlist with the set
		 * @return
		 */
		public TreeMap<Integer, List<NodeUnit>> get(Set<String> set, SortedSet<ByteBuffer> xmlDocs);
		
		public TreeMap<Integer, List<NodeUnit>> get(String text, IXMLFilter filter);
		
		public void put(String text, int xmlDocID, int nodeID, double[] range, int level);
		public void remove(String text, int xmlDocID, int nodeID, double[] range);
		
		public void flush() throws IOException;
		
		public void close() throws IOException;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/InvertIndexDecorator.java
 =======================================================================
package imc.disxmldb.index.invertindex;

import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.index.filter.IXMLFilter;

import java.nio.ByteBuffer;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.SortedSet;

import org.apache.cassandra.utils.Pair;

public class InvertIndexDecorator {
	private List<Pair<Integer, IInvertIndex>> indexList = null;
	
	public InvertIndexDecorator() 
	{
		indexList = new LinkedList<Pair<Integer, IInvertIndex>>();
	}
	
	public InvertIndexDecorator(List<Pair<Integer, IInvertIndex>> indexList) {
		this.indexList = indexList;
	}
	
	public void addInvertIndex(Integer colID, IInvertIndex index) {
		indexList.add(new Pair<Integer, IInvertIndex>(colID, index));
	}
	
	public IndexQueryResult get(String text) {
		IndexQueryResult result = new IndexQueryResult();
		for (Pair<Integer, IInvertIndex> entry : indexList) {
			result.addResult(entry.left, entry.right.get(text));
		}
		return result;
	}
	
	public IndexQueryResult get(Set<String> set,
			SortedSet<ByteBuffer> xmlDocs, IXMLFilter filter) {
		IndexQueryResult result = new IndexQueryResult();
		for (Pair<Integer, IInvertIndex> entry : indexList) {
			result.addResult(entry.left, entry.right.get(set, xmlDocs, filter));
		}
		return result;
	}
	/**
	 * 
	 * @param set
	 * @param xmlDocs
	 * 			if xmlDocs is not null, it will be used to filter out the posterlist with the set

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/index/invertindex/ParallelCFRetrieval.java
 =======================================================================
/**
 * @author xiafan xiafan68@gmail.com
 */
package imc.disxmldb.index.invertindex;

import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.util.LocalCFStoreProxy;

import java.nio.ByteBuffer;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.Map.Entry;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;

import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.SuperColumn;
import org.apache.cassandra.db.marshal.Int32Type;
import org.apache.cassandra.db.marshal.UTF8Type;

/**
 * This class implements a parallel retrieval algorithm that uses multiple
 * threads to retrieve poster lists of multiple keys in parallel.
 */
public class ParallelCFRetrieval implements ICFRetrievalStrategy {
	private LocalCFStoreProxy localCFStoreProxy = null;
	private ExecutorService retrievalService = Executors.newCachedThreadPool();

	public ParallelCFRetrieval(LocalCFStoreProxy proxy) {
		this.localCFStoreProxy = proxy;
	}

	private class RetrievalTask implements Callable {
		private String term = null;
		SortedSet<ByteBuffer> xmlDocs = null;

		public RetrievalTask(String term, SortedSet<ByteBuffer> xmlDocs) {
			this.term = term;
			this.xmlDocs = xmlDocs;
		}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/MessageDigester.java
 =======================================================================

package imc.disxmldb.security;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

import org.apache.log4j.Logger;

import org.exist.util.Base64Encoder;


public class MessageDigester {

    private static String[] hex = {"0", "1", "2", "3", "4", "5", "6", "7",
            "8", "9", "a", "b", "c", "d", "e", "f"};

    private static final Logger LOG = Logger.getLogger(MessageDigester.class);

    public static String md5( String message, boolean base64) {
        MessageDigest md5 = null;
        String digest = message;
        try {
            md5 = MessageDigest.getInstance( "MD5" );
            md5.update( message.getBytes() );
            byte[] digestData = md5.digest();
            
            if(base64)
            {
            	Base64Encoder enc = new Base64Encoder();
            	enc.translate(digestData);
            	digest = new String(enc.getCharArray());
            }
            else
            {
               digest = byteArrayToHex( digestData );
            }
        } catch ( NoSuchAlgorithmException e ) {
            LOG.warn( "MD5 not supported. Using plain string as password!" );
        } catch ( Exception e ) {
            LOG.warn( "Digest creation failed. Using plain string as password!" );
        }
        return digest;
    }

    public static String calculate(String message, String algorithm, boolean base64)
    throws IllegalArgumentException {

        // Can throw a  NoSuchAlgorithmException
        MessageDigest  md = null;
        try {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/Permission.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-06 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist.sourceforge.net
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 *  $Id:
 */

/*
 * modified by xiafan68
 * @time 2012-02-25
 */
package imc.disxmldb.security;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.RowMutation;
import org.exist.util.SyntaxException;

/**
 * encapsulate the interface for an permission
 */
public interface Permission {
	
	public final static int DEFAULT_PERM = 0755;
	public final static Permission SYSTEM_DEFAULT = null;
	
	public final static int READ = 4;
	public final static int WRITE = 2;
	public final static int UPDATE = 1;
	
	public final static String USER_STRING = "user";

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/PermissionDeniedException.java
 =======================================================================

/*
 *  eXist xml document repository and xpath implementation
 *  Copyright (C) 2000,  Wolfgang M. Meier (meier@ifs.tu-darmstadt.de)
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Library General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  You should have received a copy of the GNU Library General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package imc.disxmldb.security;

/**
 *  Description of the Class
 *
 *@author     Wolfgang Meier <meier@ifs.tu-darmstadt.de>
 *@since    24. Juni 2002
 */
public class PermissionDeniedException extends Exception {

    /**  Constructor for the PermissionDeniedException object */
    public PermissionDeniedException() {
        super();
    }


    /**
     *  Constructor for the PermissionDeniedException object
     *
     *@param  message  Description of the Parameter
     */
    public PermissionDeniedException( String message ) {
        super( message );
    }
}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/PermissionFactory.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-06 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist.sourceforge.net
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 *  $Id:
 */
package imc.disxmldb.security;

import org.apache.log4j.Logger;

/**
 * Instatiates an appropriate Permission class based on the current configuration
 *
 * @author Adam Retter <adam.retter@devon.gov.uk>
 */
public class PermissionFactory
{
	private final static Logger LOG = Logger.getLogger(PermissionFactory.class);
	
	public static final Permission getPermission()
	{
		try
		{
			//Class permissionClass = (Class)broker.getConfiguration().getProperty(BrokerPool.PROPERTY_SECURITY_CLASS);
	        return (Permission)new UnixStylePermission();
		}
		catch(Throwable ex)
		{
	          LOG.warn("Exception while instantiating security permission class.", ex);
	    }
		return null;
	}
	
	public static final Permission getPermission(int perm)

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/UnixStylePermission.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-06 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist.sourceforge.net
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 *  $Id:
 */
package imc.disxmldb.security;


import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import java.util.StringTokenizer;

import org.exist.util.SyntaxException;

/**
 *  Manages the permissions assigned to a ressource. This includes
 *  the user who owns the ressource, the owner group and the permissions
 *  for user, group and others. Permissions are encoded in a single byte
 *  according to common unix conventions.
 *
 *@author     Wolfgang Meier <wolfgang@exist-db.org>
 */
public class UnixStylePermission implements Permission {
    //default Unix style permissions for a resource
	public final static int DEFAULT_PERM = 0755;
	
	//default UnixStylePermission
    public final static Permission SYSTEM_DEFAULT = new UnixStylePermission(DEFAULT_PERM);
    
    //owner, default to DBA
    private String owner = "user";
    private String ownerGroup = "dba_grp";

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/UnixStylePermissionSerializer.java
 =======================================================================
package imc.disxmldb.security;

import java.nio.ByteBuffer;

import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.UTF8Type;

public class UnixStylePermissionSerializer {
	public static final ByteBuffer SPNAME = UTF8Type.instance.fromString("permsp");
	public static final ByteBuffer USER = UTF8Type.instance.fromString("user");
	public static final ByteBuffer GROUP = UTF8Type.instance.fromString("grp");
	public static final ByteBuffer PERM = UTF8Type.instance.fromString("perm");
	
	public static RowMutation write(Permission perm, RowMutation mutation, String cf) {
		mutation.add(new QueryPath(cf, SPNAME, USER), UTF8Type.instance.fromString(perm.getOwner()), System.currentTimeMillis());
		mutation.add(new QueryPath(cf, SPNAME, GROUP), UTF8Type.instance.fromString(perm.getOwnerGroup()), System.currentTimeMillis());
		ByteBuffer permByte = ByteBuffer.allocate(1);
		permByte.put((byte) perm.getPermissions());
		permByte.rewind();
		mutation.add(new QueryPath(cf, SPNAME, PERM), permByte, System.currentTimeMillis());
		return mutation;
	}
	
	public static Permission read(Permission perm, Row row) {
		assert row != null;
		if (perm == null)
			perm = new UnixStylePermission();
		IColumn col = row.cf.getColumn(SPNAME);
		if (col != null) {
			if (col.getSubColumn(USER) != null) {
				perm.setOwner(UTF8Type.instance.getString(col.getSubColumn(USER).value()));
			}
			
			if (col.getSubColumn(GROUP) != null) {
				perm.setGroup(UTF8Type.instance.getString(col.getSubColumn(GROUP).value()));
			}
			
			if (col.getSubColumn(PERM) != null) {
				perm.setPermissions(col.getSubColumn(PERM).value().duplicate().get());
			}
		} else
			return null;
		return perm;
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/User.java
 =======================================================================
package imc.disxmldb.security;

import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.io.util.FastByteArrayOutputStream;
import org.apache.cassandra.utils.ByteBufferUtil;
import org.apache.log4j.Logger;
import org.exist.util.DatabaseConfigurationException;
import org.exist.xmldb.XmldbURI;
import org.w3c.dom.Attr;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.Properties;

/**
 * Represents a user within the database.
 * 
 * @author Wolfgang Meier <wolfgang@exist-db.org> Modified by {Marco.Tampucci,
 *         Massimo.Martinelli} @isti.cnr.it MOdified by {xiafan68}@gmail.com
 */
public class User {

	private final static Logger LOG = Logger.getLogger(User.class);
	public final static User DEFAULT = new User("guest", null, "guest");


	private String[] groups = null;
	private String password = null;
	private String user;
	private int uid = -1;

	/**
	 * Indicates if the user belongs to the dba group, i.e. is a superuser.
	 */
	private boolean hasDbaRole = false;

	/**
	 * Create a new user with name and password
	 * 
	 * @param user

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/UserSerializer.java
 =======================================================================
package imc.disxmldb.security;

import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;

import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.io.util.FastByteArrayOutputStream;

public class UserSerializer {
	private final static ByteBuffer GROUP = UTF8Type.instance.fromString("grp");
	private final static ByteBuffer NAME = UTF8Type.instance.fromString("name");
	private final static ByteBuffer PASS = UTF8Type.instance.fromString("psd");
	// private final static String USER_ID = "uid";
	
	public static void write(User user, RowMutation rm, String cf) {
		assert rm != null && cf != null;
		long timestamp = System.currentTimeMillis();
		// rm.add(new QueryPath(cf, NAME, null),
		// UTF8Type.instance.fromString(user), timestamp);
		rm.add(new QueryPath(cf, null, PASS),
				UTF8Type.instance.fromString(user.getPassword()), timestamp);

		FastByteArrayOutputStream aos = new FastByteArrayOutputStream();
		DataOutputStream dos = new DataOutputStream(aos);
		try {
			dos.writeInt(user.getGroups().length);
			for (String grp : user.getGroups()) {
				dos.writeUTF(grp);
			}
		} catch (IOException e) {
		}
		ByteBuffer grpBuffer = ByteBuffer.wrap(aos.toByteArray());
		rm.add(new QueryPath(cf, null, GROUP), grpBuffer, timestamp);
	}

	public static void read(User user, Row row) {
		assert row != null;
		if (row.cf == null)
			return;

		IColumn col = row.cf.getColumn(PASS);
		if (col != null) {
			user.setPassword(UTF8Type.instance.getString(col.value()));

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/security/XMLDBSecurityManager.java
 =======================================================================
package imc.disxmldb.security;

import imc.disxmldb.XMLDBStore;
import imc.disxmldb.config.SysConfig;
import imc.disxmldb.config.XMLDBCatalogManager;
import imc.disxmldb.util.ColumnFamilyStoreProxy;

import java.nio.ByteBuffer;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.Set;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
import java.util.concurrent.ConcurrentHashMap;

import org.apache.cassandra.config.Config;
import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.utils.ByteBufferUtil;
import org.apache.cassandra.utils.Pair;

public class XMLDBSecurityManager {
	public static int DEFAULT_DIR_PERMISSION = 0750;
	public static int DEFAULT_FILE_PERMISSION = 0774;
	public static int FULL_PERMISSION = 0777;
	// security
	public static final User ADMINISTRATOR = new User("admin", "admin", "admin");
	public static final Permission DEFAULT_ROOTCOL_PERM = PermissionFactory
			.getPermission(ADMINISTRATOR.getName(),
					ADMINISTRATOR.getPrimaryGroup(),
					XMLDBSecurityManager.FULL_PERMISSION);

	public static int ACCESS_PERMISSION = 1;// for directory, it means user can
											// dive into this directory
	public static int WRITE_PERMISSION = 2;
	public static int READ_PERMISSION = 4; // for directory, it means user can
											// read the contents of this
											// directory
	private AbstractType keyValidator = UTF8Type.instance;
	private static final ByteBuffer grpUser = UTF8Type.instance
			.fromString("_grp");
	private static final ByteBuffer usrUser = UTF8Type.instance
			.fromString("_usr");


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/CassandraSchemaProxy.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-7 0.1
 */
package imc.disxmldb.util;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.config.CollectionMetaData;
import imc.disxmldb.config.SysConfig;

import java.io.IOException;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Future;

import org.apache.cassandra.auth.Permission;
import org.apache.cassandra.concurrent.Stage;
import org.apache.cassandra.concurrent.StageManager;
import org.apache.cassandra.config.CFMetaData;
import org.apache.cassandra.config.ConfigurationException;
import org.apache.cassandra.config.Schema;
import org.apache.cassandra.db.ColumnFamilyStore;
import org.apache.cassandra.db.ColumnFamilyType;
import org.apache.cassandra.db.Table;
import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.db.marshal.CompositeType;
import org.apache.cassandra.db.marshal.DoubleType;
import org.apache.cassandra.db.marshal.Int32Type;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.db.migration.AddColumnFamily;
import org.apache.cassandra.db.migration.DropColumnFamily;
import org.apache.cassandra.db.migration.Migration;
import org.apache.cassandra.dht.LocalPartitioner;
import org.apache.cassandra.service.StorageProxy;
import org.apache.cassandra.thrift.CfDef;
import org.apache.cassandra.thrift.InvalidRequestException;
import org.apache.cassandra.thrift.SchemaDisagreementException;
import org.apache.cassandra.thrift.ThriftValidation;
import org.apache.thrift.TException;

import com.google.common.base.Predicates;
import com.google.common.collect.Maps;

/**
 * This class is used to create all the meta data related to Cassandra. The XML
 * document data of a collection is stored in a column family. The column family
 * is also based on column family. The schema of these column family is created

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ColumnFamilySerializable.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-26 0.1
 */
package imc.disxmldb.util;

import org.apache.cassandra.db.ColumnFamily;
import org.apache.cassandra.db.SuperColumn;

/**
 * define the interface to serialize and deserialize data to or from Column
 * family
 */
public interface ColumnFamilySerializable {
	public ColumnFamily serialize(String keyspace, String cfName);

	public void deserialize(SuperColumn spCol);
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ColumnFamilyStoreProxy.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-3 0.1
 */
package imc.disxmldb.util;

import imc.disxmldb.config.DataFlushServiceFactory;
import imc.disxmldb.config.MutationFlushService;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.SortedSet;
import java.util.TreeSet;
import java.util.concurrent.TimeoutException;

import org.apache.cassandra.config.CFMetaData;
import org.apache.cassandra.config.Schema;
import org.apache.cassandra.db.ReadCommand;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.db.SliceByNamesReadCommand;
import org.apache.cassandra.db.SliceFromReadCommand;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.db.marshal.MarshalException;
import org.apache.cassandra.service.StorageProxy;
import org.apache.cassandra.thrift.ConsistencyLevel;
import org.apache.cassandra.thrift.InvalidRequestException;
import org.apache.cassandra.thrift.TimedOutException;
import org.apache.cassandra.thrift.UnavailableException;
import org.apache.cassandra.utils.ByteBufferUtil;

/**
 * encapsulate the interface of the underlying Cassandra interface to provide a 
 * simple and neat interface.
 */
public class ColumnFamilyStoreProxy {
	public static int TTL = 60 * 60 * 24 * 365;

	public String keyspace;
	public String cfName;
	private AbstractType spComparator = null;
	private AbstractType subComparator = null;
	private MutationFlushService flushService = DataFlushServiceFactory.instance
			.getMetaDataFlushService();

	public ColumnFamilyStoreProxy(String keyspace, String cfName,

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ColumnFamilyStoreSerializable.java
 =======================================================================
/**
*@author:xiafan xiafan68@gmail.com
*@version: 2011-10-3 0.1
*/
package imc.disxmldb.util;

public interface ColumnFamilyStoreSerializable {
	public void serialize(ColumnFamilyStoreProxy cfStore);
	public void deserialize(ColumnFamilyStoreProxy cfStore);
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/DroppableRunnable.java
 =======================================================================
package imc.disxmldb.util;

import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.net.MessagingService;
import org.apache.cassandra.service.StorageService;

public abstract class DroppableRunnable implements Runnable {
	private final long constructionTime = System.currentTimeMillis();
	private final StorageService.Verb verb;

	public DroppableRunnable(StorageService.Verb verb) {
		this.verb = verb;
	}

	public final void run() {
		if (System.currentTimeMillis() > constructionTime
				+ DatabaseDescriptor.getRpcTimeout()) {
			MessagingService.instance().incrementDroppedMessages(verb);
			return;
		}

		try {
			runMayThrow();
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}

	abstract protected void runMayThrow() throws Exception;
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/FileUtil.java
 =======================================================================
/**
*@author:xiafan xiafan68@gmail.com
*@version: 2011-11-17 0.1
*/
package imc.disxmldb.util;

import java.io.File;

public class FileUtil {
		
	
	/**
	 * remove a file or directory
	 * @param path
	 * @return
	 */
	public static boolean removeFile(String path) {
		File file = new File(path);
		return removeFile(file);
	}
	
	/**
	 * remove the file or directory recursively
	 * @param file
	 * @return
	 */
	public static boolean removeFile(File file) {
		if (file.isDirectory()) {
			boolean ret = true;
			for (File child : file.listFiles()) {
				if ((ret = removeFile(child)) == false) {
					break;
				}
			}
			return ret & file.delete();
		} else {
			return file.delete();
		}
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/IDigestAble.java
 =======================================================================
package imc.disxmldb.util;

import java.nio.ByteBuffer;

public interface IDigestAble {
	public ByteBuffer getDigest();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ISerializable.java
 =======================================================================
package imc.disxmldb.util;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;

public interface ISerializable<Data> {

	public void serialize(Data t, DataOutputStream dos, int version)
			throws IOException ;


	public Data deserialize(DataInputStream dis, int version)
			throws IOException ;
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/IXMLNodeSerializer.java
 =======================================================================
package imc.disxmldb.util;

import imc.disxmldb.dom.XMLNode;

import org.apache.cassandra.db.ColumnFamily;
import org.apache.cassandra.db.SuperColumn;

/**
 * the interface for an XML node to serialize to and deserialize from an column family
 * @author xiafan
 *
 */
public interface IXMLNodeSerializer {
	public ColumnFamily serialize(String keyspace, String cfName, XMLNode node);
	public XMLNode deserialize(int XMLID, SuperColumn spCol);
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/IXPathResult.java
 =======================================================================
package imc.disxmldb.util;

import java.util.List;

import org.apache.cassandra.dht.AbstractBounds;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;

public interface IXPathResult<DataType> extends IDigestAble, ISerializable<DataType> {
	/**
	 * 将当前结果与其它节点返回的结果进行合并
	 * @param index_ other_在返回结果中的索引
	 * @param other_ 另一个节点返回的结果
	 */
	public void merge(int index_, DataType other_) ;
	/**
	 * 在返回结果之前进行调用，对数据进行预处理，也可以用于实现chained responsibility模式
	 */
	public void postProcess();
	
	/**
	 * 
	 * @param cmd
	 * @param cmdb
	 * @param colStore
	 * @param ranges
	 * @return
	 * 	null means no exception is raised
	 */
	public String postProcess(XPathQueryCommand cmd, byte[] cmdb,
			CollectionStore colStore, List<AbstractBounds> ranges);
	
	/**
	 *如果可以，以文本的形式返回结果
	 * @return
	 */
	public List<String> result();
	
	public void setIndex(int index_);
	/**
	 * 返回具体的结果类型
	 * @return
	 */
	public XPathResultType getType();
	/**
	 * 返回包含的结果数
	 * @return
	 */

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/LocalCFStoreProxy.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-6 0.1
 */
package imc.disxmldb.util;

import java.nio.ByteBuffer;
import java.util.SortedSet;
import java.util.TreeSet;
import java.util.concurrent.ExecutionException;

import org.apache.cassandra.config.CFMetaData;
import org.apache.cassandra.db.Column;
import org.apache.cassandra.db.ColumnFamily;
import org.apache.cassandra.db.ColumnFamilyStore;
import org.apache.cassandra.db.DecoratedKey;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.SuperColumn;
import org.apache.cassandra.db.Table;
import org.apache.cassandra.db.filter.QueryFilter;
import org.apache.cassandra.db.filter.QueryPath;
import org.apache.cassandra.db.marshal.AbstractType;
import org.apache.cassandra.utils.ByteBufferUtil;
/**
 * encapsulate the Cassandra API to manipulate the local data.
 * @author xiafan
 *
 */
public class LocalCFStoreProxy {
	private ColumnFamilyStore cfStore = null;
	private Table table = null;

	public AbstractType keyValidator = null;
	public AbstractType comparator = null;
	public AbstractType subComparator = null;
	/*
	 * private LocalPartitioner partitioner = new LocalPartitioner(
	 * UTF8Type.instance);
	 */

	public LocalCFStoreProxy(Table table, ColumnFamilyStore cfStore) {
		this.cfStore = cfStore;
		this.table = table;
		this.keyValidator = cfStore.metadata.getKeyValidator();
		this.comparator = cfStore.metadata.getComparatorFor(null);
		this.subComparator = cfStore.metadata.getComparatorFor(ByteBufferUtil.EMPTY_BYTE_BUFFER);
	}

	public LocalCFStoreProxy(String keyspace, String cfName) {
		table = Table.open(keyspace);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/StringOutputStream.java
 =======================================================================
package imc.disxmldb.util;

import imc.disxmldb.config.SysConfig;

import java.io.ByteArrayOutputStream;
import java.io.DataOutput;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;

public class StringOutputStream implements DataOutput{
	private DataOutput dop = null; 
	private StringBuilder output = new StringBuilder();
	
	public StringOutputStream() {
		//output = new ByteArrayOutputStream();
		//dop = new DataOutputStream(output);
	}
	
	public StringOutputStream(DataOutput dop) {
		this.dop = dop;
	}

	@Override
	public void writeUTF(String str) throws IOException{
		output.append(str);
		//dop.writeUTF(str);
	}

	@Override
	public String toString() {
		return output.toString();
	}
	
	/**
	 * return the size of the buffer or zero if the stream is provided
	 * @return
	 */
	public long getSize() {
		if (output != null)
			return output.length();
		else
			return 0;
	}
	
	@Override
	public void write(int arg0) throws IOException {
		//dop.write(arg0);
	}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/XMLNodeSerializerMBean.java
 =======================================================================
package imc.disxmldb.util;

public interface XMLNodeSerializerMBean {
	public long getSerializeLatency();
	public long getDeserializeLatency();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/XMLUtilities.java
 =======================================================================
package imc.disxmldb.util;

import com.google.common.collect.BiMap;
import com.google.common.collect.HashBiMap;

public class XMLUtilities {

	/*public static BiMap<String, String> escapeMap = HashBiMap.create(); 
	static {
		escapeMap.put("&", "&amp;");
		escapeMap.put("<", "&lt;");
		escapeMap.put(">", "&gt;");
	}*/
	
	/**
	 * escape characters like <, &, >
	 * @param text
	 * @return
	 */
	public static String encodeString(String text) {
		String ret = null;
		ret = text.replaceAll("&", "&amp;");
		ret = ret.replaceAll("<", "&lt;");
		ret = ret.replaceAll(">", "&gt;");
		ret = ret.replaceAll("'", "&apos;");
		ret = ret.replaceAll("\"", "&quot;");
		return ret;
	}
	
	/**
	 * decode the string to <, >, </
	 * @param text
	 * @return
	 */
	public static String decodeString(String text) {
		String ret = null;
		ret = text.replaceAll("&lt;", "<");
		ret = ret.replaceAll("&gt;", ">");
		ret = ret.replaceAll("&apos;", "'");
		ret = ret.replaceAll("&quot;", "\"");
		ret = ret.replaceAll("&amp;", "&");
		return ret;
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/util/ZooKeeperUtil.java
 =======================================================================
package imc.disxmldb.util;

import java.io.IOException;
import java.net.InetAddress;

import org.apache.zookeeper.KeeperException;
import org.apache.zookeeper.ZooKeeper;
import org.apache.zookeeper.data.Stat;

public class ZooKeeperUtil {
	public static void main(String[] args) {
		String server = args[0];
		String path = args[1];
		try {
			ZooKeeper zooKeeper = new ZooKeeper(server, 2000, null);
			Stat stat = new Stat();
			byte[] addr = zooKeeper.getData(path, false, stat);
			InetAddress iaddr = InetAddress.getByAddress(addr);
			System.out.println("the address is " + iaddr.toString());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (KeeperException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/DistributeXPathProcessor.java
 =======================================================================
package imc.disxmldb.xpath;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCallback;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathQueryResolver;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.config.SysConfig;
import imc.disxmldb.xpath.xpathcompile.XPathCompiler;

import java.io.ByteArrayInputStream;
import java.io.UnsupportedEncodingException;
import java.net.InetAddress;
import java.util.List;

import org.apache.cassandra.concurrent.Stage;
import org.apache.cassandra.concurrent.StageManager;
import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.dht.AbstractBounds;
import org.apache.cassandra.dht.Bounds;
import org.apache.cassandra.dht.IPartitioner;
import org.apache.cassandra.net.CachingMessageProducer;
import org.apache.cassandra.net.MessageProducer;
import org.apache.cassandra.net.MessagingService;
import org.apache.cassandra.service.StorageProxy;
import org.apache.cassandra.service.StorageService;
import org.apache.cassandra.thrift.UnavailableException;
import org.apache.cassandra.utils.ByteBufferUtil;
import org.apache.cassandra.utils.FBUtilities;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class DistributeXPathProcessor {
	public static final Logger logger = LoggerFactory
			.getLogger(DistributeXPathProcessor.class);
	private CollectionStore colStore = null;
	
	public DistributeXPathProcessor(CollectionStore colStore_) {
		colStore = colStore_;
	}
	
	/**
	 * poll all data servers to execute the command
	 * 
	 * @param command
	 * @return
	 * @throws UnavailableException
	 * @throws UnsupportedEncodingException
	 * @throws imc.disxmldb.xpath.xpathcompile.ParseException
	 */

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/ExecContext.java
 =======================================================================
/**
 * @author:xiafan68 {xiafan68@gmail.com}
 * @time: 2012-01-05
 */
package imc.disxmldb.xpath;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.xpath.function.FunctionDef;
import imc.disxmldb.xpath.xpathtoken.Token;
import imc.disxmldb.xpath.xpathtoken.XPathTokenParser;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;

/**
 * The class is used to record the state information during the process of XPath
 * execution. The information will be used to control the process of XPath
 * execution.
 * 
 * @author xiafan
 * 
 */
public class ExecContext {
	public ExecContext parentContext = null;
	public CollectionStore colStore = null;

	// when the xpath is informal, the following two fields will record the
	// error message
	public String errorMsg = null;
	public int line = -1;
	public int column = -1;
	public Token curToken = null;
	public XPathTokenParser tokenParser;

	public IXMLFilter filter = null;
	// public Stack<XPathSequence> sequences = new Stack<XPathSequence>();
	private ArrayList<XPathSequence> sequences = new ArrayList<XPathSequence>();

	public boolean isLastLevelStep = false;
	public int lastLevel = -1;
	public boolean isRoot = false;

	public FunctionDef funcDef = null;
	public Stack<ExecContext> args = new Stack<ExecContext>(); // the stack
																// should only
																// contain

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/LocalXPathQueryRunnable.java
 =======================================================================
package imc.disxmldb.xpath;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCallback;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathQueryResponse;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.util.DroppableRunnable;

import java.io.IOException;

import org.apache.cassandra.net.MessagingService;
import org.apache.cassandra.service.StorageService;
import org.apache.cassandra.utils.FBUtilities;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.xmldb.api.base.XMLDBException;

public class LocalXPathQueryRunnable extends DroppableRunnable {
	public static final Logger logger = LoggerFactory
			.getLogger(LocalXPathQueryRunnable.class);
	private final XPathQueryCommand command;
	private final XPathQueryCallback handler;
	private final long start = System.currentTimeMillis();

	LocalXPathQueryRunnable(XPathQueryCommand command,
			XPathQueryCallback handler) {
		super(StorageService.Verb.XML_READ_NODE);
		this.command = command;
		this.handler = handler;
	}

	protected void runMayThrow() throws IOException, XMLDBException {
		if (logger.isDebugEnabled())
			logger.debug("LocalReadRunnable reading " + command);
		// TODO 需要检查这里在改成nodeonly之后会不会有问题
		CollectionStore colStore = XMLDBStore.instance().getCollection(
				command.colID);
		XPathQueryResponse response = new XPathQueryResponse(
				command.isDigest());
		try {
			XPathResult result = colStore.XPathLocal(command);
			if (command.isDigest()) {
				response.digest = result.getDigest();
			} else {
				response.result = result;
			}
		} catch (Exception ex) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathConstant.java
 =======================================================================
package imc.disxmldb.xpath;

/**
 * define the constant for the XPath
 */
public class XPathConstant {
	public static final String CURSLASH = "/";
	public static final String DESCENDENTSLASH = "//";
	public static final String OPENPARAN = "(";
	public static final String CLOSEPARAN = ")";
	public static final String OPENBRACKET = "[";
	public static final String COMMA = ","; 
	//function name
	public static final String CONTAINS = "contains";
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathProcessorV2.java
 =======================================================================
/**
 *@author:ccy_chengcheng
 *@version: 2011-9-27 0.1
 *modify by: xiafan{xiafan68@gmail.com}
 *@author xiafan
 * @version: 2012-01-03 2.0
 */
package imc.disxmldb.xpath;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.config.SysConfig;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.ComparatorByRangeFirst;
import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.BtreeDecorator;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.index.filter.RootNodeFilter;
import imc.disxmldb.index.filter.XMLLocalDocFilter;
import imc.disxmldb.xpath.function.FunctionDef;
import imc.disxmldb.xpath.function.FunctionPool;
import imc.disxmldb.xpath.xpathtoken.Token;
import imc.disxmldb.xpath.xpathtoken.XPathTokenParser;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.lang.management.ManagementFactory;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Map.Entry;
import java.util.Stack;
import java.util.TreeMap;

import javax.management.MBeanServer;
import javax.management.ObjectName;

import org.apache.cassandra.dht.IPartitioner;
import org.apache.cassandra.utils.LatencyTracker;
import org.xmldb.api.base.XMLDBException;

/**
 * The class implements the semantic parser of XPath. It also executes the XPath

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathProcessorV2MBean.java
 =======================================================================
package imc.disxmldb.xpath;
/**
 * Interface needed by the JMX framework to provide the run state of the
 * monitored object
 */
public interface XPathProcessorV2MBean {
	public double getAvgEEJoinLatency();
	public double getAvgEVJoinLatency();
	public double getAvgXPathExecLatency();
	double getAvgLoadLatency();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/XPathSequence.java
 =======================================================================
/**
 * @author xiafan xiafan68@gmail.com
 */
package imc.disxmldb.xpath;

import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.xpathparser.XPathParser;

/**
 * represent a sequence in the steps stack of ExecContext. It may be a string
 * represent the XPath node or text value. This step may also be the execution
 * result after the current execution.
 * 
 */
public class XPathSequence {
	public static int ASCIENT_DESCIENT_LEVEL = 1000;
	private int level = -1; // the level difference between the parent and the
							// current node
	private ValueType valueType = ValueType.NODETAG;
	private String step = null; // maybe token or TreeMap
	private IndexQueryResult value = null;
	private boolean isRoot = false;

	public XPathSequence(String step_, int type_, int level_) {
		this.level = level_;
		this.step = step_;
		if (type_ == XPathParser.AttrName) {
			step = step_.substring(1, step_.length());
			valueType = ValueType.ATTRTAG;
		} else if (type_ == XPathParser.StringLiteral) {
			step = step_.substring(1, step_.length() - 1);
		}
	}

	public int getLevel() {
		return level;
	}

	public void setLevel(int level) {
		if (level >= ASCIENT_DESCIENT_LEVEL)
			this.level = ASCIENT_DESCIENT_LEVEL;
		else
			this.level = level;
	}

	public Object getStepValue() {
		if (value != null)
			return value;
		return step;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/FunctionDef.java
 =======================================================================
package imc.disxmldb.xpath.function;


import imc.disxmldb.dom.typesystem.ValueType;

import java.util.List;

/**
 * This class encapsulate the concept of an function in XPath
 */
public class FunctionDef {
	
	private static String delimiter = "_";
	private String funcName = null;
	private String argTypeSig = "";
	private ValueType retType;
	private boolean isAtomResult = false;
	
	private String signature = null;
	
	private IXPathFunction funcImpl = null;

	public FunctionDef(String funcName) {
		this.funcName = funcName;
	}
	
	public FunctionDef(String funcName, List<ValueType> argTypes, ValueType retType) {
		this.funcName = funcName;
		for (ValueType type : argTypes) {
			argTypeSig += delimiter + type;
		}
		this.retType = retType;
	}
	
	public void addArgType(ValueType type) {
		signature = null;
		argTypeSig += delimiter + type;
	}
	
	public void setRetType(ValueType type) {
		signature = null;
		retType = type;
	}
	
	public String signature() {
		if (signature == null) {
			signature = funcName + delimiter + argTypeSig + delimiter + retType;
		}
		return signature;
	}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/FunctionPool.java
 =======================================================================
/**
 * @author xiafan
 */
package imc.disxmldb.xpath.function;

import imc.disxmldb.cassandra.verbhandler.result.SeqResult;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.xpath.function.functionimpl.*;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;

/**
 * manage the mappings between the function definition and the function
 * implementation
 */
public class FunctionPool {
	private static HashMap<FunctionDef, FunctionDef> functions = new HashMap<FunctionDef, FunctionDef>();

	static {
		// compare function series
		// ge function series
		List<ValueType> argTypes = new LinkedList<ValueType>();
		argTypes.add(ValueType.ELEMENTS);
		argTypes.add(ValueType.STRING);
		FunctionDef funcDef = new FunctionDef(">", argTypes, ValueType.ELEMENTS);
		functions.put(funcDef, funcDef);

		funcDef = new FunctionDef(">");
		funcDef.addArgType(ValueType.ELEMENTS);
		funcDef.addArgType(ValueType.INT);
		funcDef.setFuncImpl(new XPathElementsGTInt());
		functions.put(funcDef, funcDef);

		funcDef = new FunctionDef(">");
		funcDef.addArgType(ValueType.ELEMENTS);
		funcDef.addArgType(ValueType.FILESIZE);
		funcDef.setFuncImpl(new XPathElementsGTFileSize());
		functions.put(funcDef, funcDef);

		// ge function series
		argTypes = new LinkedList<ValueType>();
		argTypes.add(ValueType.ELEMENTS);
		argTypes.add(ValueType.STRING);
		funcDef = new FunctionDef(">=", argTypes, ValueType.ELEMENTS);
		functions.put(funcDef, funcDef);

		funcDef = new FunctionDef(">=");
		funcDef.addArgType(ValueType.ELEMENTS);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/IXPathFunction.java
 =======================================================================
/**
 * @author xiafan
 */
package imc.disxmldb.xpath.function;

import imc.disxmldb.xpath.ExecContext;

import java.util.Stack;

/**
 * if the return value is a set of nodes and it needs to be further joined with
 * parent nodes, it should be stored as a an XPathSequence instance in
 * context.result
 * 
 */
public interface IXPathFunction {
	public void invoke(ExecContext context);
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathAverage.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.util.Iterator;
import java.util.List;
import java.util.TreeMap;

import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.AvgResult;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

/**
 * implementation of average function in XPath that will be executed locally.
 * The results will be aggregated on the coordinator nodes.
 */
public class XPathAverage implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		IndexQueryResult result = null;
		XPathSequence lastStep = null;
		if (context.args.empty()) {
			XPathProcessorV2.backwardForwardExecSteps(context.parentContext);
			lastStep = context.parentContext.getLastStep();
		} else {
			ExecContext tempContext = (ExecContext) context.args.pop();

			// maybe we should execute the tempContext recursive
			XPathProcessorV2.backwardForwardExecSteps(tempContext);
			lastStep = context.parentContext.getLastStep();
		}
		if (lastStep != null && lastStep.isValueSeted())
			result = (IndexQueryResult) lastStep.getStepValue();

		AvgResult avg = new AvgResult();
		if (result != null && result.size() != 0) {

			try {
				for (Iterator<Integer> colIter = result.colIterator(); colIter
						.hasNext();) {
					int colID = colIter.next();

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathContainFunc.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.TreeMap;
import java.util.Map.Entry;

import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.BtreeDecorator;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.index.filter.RootNodeFilter;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

/**
 * implementation of contain function in XPath that will be executed locally.
 * The results will be aggregated on the coordinator nodes.
 */
public class XPathContainFunc implements IXPathFunction {

	/**
	 * the first args is TreeMap, the second arg is the text string. this
	 * function returns the nodes in the first argument that contain the text
	 * 
	 * @param args
	 * @param context
	 * 
	 */
	@Override
	public void invoke(ExecContext context) {
		assert context.args.size() == 2;

		ExecContext rhsContext = context.args.pop();
		ExecContext lhsContext = context.args.pop();
		String text = rhsContext.getLastStep().getStepName();

		// XPathProcessorV2.execSteps(lhsContext);
		XPathSequence parentSeq = null;
		if (lhsContext.isStepEmpty()) {
			context.setNoResults();
			return;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathContainsFileSize.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.nio.ByteBuffer;

import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

public class XPathContainsFileSize implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		assert context.args.size() == 2;

		ExecContext rhsContext = context.args.pop();
		ExecContext lhsContext = context.args.pop();
		String text = rhsContext.getLastStep().getStepName();

		// XPathProcessorV2.execSteps(lhsContext);
		XPathSequence parentSeq = null;
		if (lhsContext.isStepEmpty()) {
			context.setNoResults();
			return;
		} else {
			parentSeq = lhsContext.pollLastStep();
		}

		ValueType type = TypeResolver.resolve(text);
		String preText = text;
		ByteBuffer compBuffer = ValueType.getValidator(type)
				.fromString(text);
		text = (String) ValueType.getValidator(type).compose(compBuffer);

		IndexQueryResult rhsNodes = context.colStore.getBtreeIndex(
				ValueType.FILESIZE, context.recursive).get(text,
				context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(parentSeq, rhsNodes,
				context);
		parentSeq.setStep(null);
		
		IndexQueryResult posterList = context.colStore.getInvertIndex(
				context.recursive).get(preText, context.filter);

		IndexQueryResult ret = XPathContainFunc.contain(context, parentSeq, posterList);
		joinRet.merge(ret);
		

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathCount.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.util.Iterator;
import java.util.List;
import java.util.Map.Entry;
import java.util.TreeMap;

import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.CountResult;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

/**
 * implementation of count function in XPath that will be executed locally. The
 * results will be aggregated on the coordinator nodes.
 */
public class XPathCount implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		IndexQueryResult result = null;

		if (context.args.empty()) {
			XPathProcessorV2.backwardForwardExecSteps(context.parentContext);
			XPathSequence lastStep = context.parentContext.getLastStep();
			if (lastStep != null && lastStep.isValueSeted())
				result = (IndexQueryResult) lastStep.getStepValue();
		} else {
			ExecContext tempContext = (ExecContext) context.args.pop();

			// maybe we should execute the tempContext recursive
			XPathProcessorV2.backwardForwardExecSteps(tempContext);
			XPathSequence lastStep = tempContext.getLastStep();
			if (lastStep != null && lastStep.isValueSeted())
				result = (IndexQueryResult) lastStep.getStepValue();
		}

		int count = 0;

		if (result == null || result.size() == 0) {
			//return 0
		} else {
			for (Iterator<Integer> colIter = result.colIterator(); colIter
					.hasNext();) {
				TreeMap<Integer, List<NodeUnit>> docNodes = result

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementGEFileSize.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.nio.ByteBuffer;

import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

public class XPathElementGEFileSize implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();

		String compStr = (String) rhs.getLastStep().getStepValue();
		ValueType type = TypeResolver.resolve(compStr);
		ByteBuffer compBuffer = ValueType.getValidator(type)
				.fromString(compStr);
		compStr = (String) ValueType.getValidator(type).compose(compBuffer);

		IndexQueryResult rhsNodes = context.colStore.getBtreeIndex(
				ValueType.FILESIZE, context.recursive).getGreaterOrEqual(
				compStr, context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(parentSeq, rhsNodes,
				context);
		if (joinRet.size() == 0)
			context.setNoResults();
		else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}

	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQFileSize.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.nio.ByteBuffer;
import java.util.List;
import java.util.TreeMap;

import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

/**
 * implementation of equal function of FileSize type in XPath that will be
 * executed locally.
 */
public class XPathElementsEQFileSize implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();

		String compStr = (String) rhs.getLastStep().getStepValue();
		ValueType type = TypeResolver.resolve(compStr);
		ByteBuffer compBuffer = ValueType.getValidator(type)
				.fromString(compStr);
		compStr = (String) ValueType.getValidator(type).compose(compBuffer);

		IndexQueryResult rhsNodes = context.colStore.getBtreeIndex(
				ValueType.FILESIZE, context.recursive).get(compStr,
				context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(parentSeq, rhsNodes,
				context);
		if (joinRet.size() == 0)
			context.setNoResults();
		else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQInt.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;


import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;
/**
 * implementation of equal function of integer type in XPath that will be executed locally.
 */
public class XPathElementsEQInt implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();
		
		IndexQueryResult rhsNodes = context.colStore
				.getBtreeIndex(ValueType.STRING, context.recursive).get(
						(String) rhs.getLastStep().getStepName(), context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(
				parentSeq, rhsNodes, context);
		if (joinRet == null || joinRet.size() == 0) {
			context.setNoResults();
		} else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsEQString.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;
/**
 * implementation of equal function of string type in XPath that will be executed locally.
 */
public class XPathElementsEQString implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();
		IndexQueryResult rhsNodes = context.colStore
				.getBtreeIndex(ValueType.STRING, context.recursive).get(
						(String) rhs.getLastStep().getStepName(), context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(
				parentSeq, rhsNodes, context);
		if (joinRet == null || joinRet.size() == 0) {
			context.setNoResults();
		} else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsGEFileSize.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.nio.ByteBuffer;
import java.util.List;
import java.util.TreeMap;

import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;
/**
 * implementation of greater than function of FileSize type in XPath that will be executed locally.
 */
public class XPathElementsGEFileSize implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();
		
		String compStr = (String) rhs.getLastStep().getStepValue();
		ValueType type = TypeResolver.resolve(compStr);
		ByteBuffer compBuffer =ValueType.getValidator(type).fromString(compStr);
		compStr = (String) ValueType.getValidator(type).compose(compBuffer);
		
		IndexQueryResult rhsNodes = context.colStore
				.getBtreeIndex(ValueType.FILESIZE, context.recursive).getGreater(
						compStr, context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(parentSeq, rhsNodes, context);
		if (joinRet.size() == 0)
			context.setNoResults();
		else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsGTFileSize.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

import java.nio.ByteBuffer;
import java.util.List;
import java.util.TreeMap;
/**
 * implementation of grater than function of FileSize type in XPath that will be executed locally.
 */
public class XPathElementsGTFileSize implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();
		
		String compStr = (String) rhs.getLastStep().getStepValue();
		ValueType type = TypeResolver.resolve(compStr);
		ByteBuffer compBuffer = ValueType.getValidator(type).fromString(compStr);
		compStr = (String) ValueType.getValidator(type).compose(compBuffer);
		
		IndexQueryResult rhsNodes = context.colStore
				.getBtreeIndex(ValueType.FILESIZE, context.recursive).getGreater(
						compStr, context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(parentSeq, rhsNodes, context);
		if (joinRet.size() == 0)
			context.setNoResults();
		else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}

	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsGTInt.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;
/**
 * implementation of greater than function of integer type in XPath that will be executed locally.
 */
public class XPathElementsGTInt implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();
		IndexQueryResult rhsNodes = context.colStore
				.getBtreeIndex(ValueType.STRING, context.recursive).getGreater(
						(String) rhs.getLastStep().getStepName(), context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(
				parentSeq, rhsNodes, context);
		if (joinRet == null || joinRet.size() == 0) {
			context.setNoResults();
		} else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLEFileSize.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.nio.ByteBuffer;

import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

public class XPathElementsLEFileSize implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();
		
		String compStr = (String) rhs.getLastStep().getStepValue();
		ValueType type = TypeResolver.resolve(compStr);
		ByteBuffer compBuffer =ValueType.getValidator(type).fromString(compStr);
		compStr = (String) ValueType.getValidator(type).compose(compBuffer);
		
		IndexQueryResult rhsNodes = context.colStore
				.getBtreeIndex(ValueType.FILESIZE, context.recursive).getLesserOrEqual(
						compStr, context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(parentSeq, rhsNodes, context);
		if (joinRet.size() == 0)
			context.setNoResults();
		else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTFileSize.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.nio.ByteBuffer;

import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;
/**
 * implementation of less than function of FileSize type in XPath that will be executed locally.
 */
public class XPathElementsLTFileSize implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();
		
		String compStr = (String) rhs.getLastStep().getStepValue();
		ValueType type = TypeResolver.resolve(compStr);
		ByteBuffer compBuffer = ValueType.getValidator(type).fromString(compStr);
		compStr = (String) ValueType.getValidator(type).compose(compBuffer);
		
		IndexQueryResult rhsNodes = context.colStore
				.getBtreeIndex(ValueType.FILESIZE, context.recursive).getLesser(
						compStr, context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(parentSeq, rhsNodes, context);
		if (joinRet.size() == 0)
			context.setNoResults();
		else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}

	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTInt.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;
/**
 * implementation of less than function of integer type in XPath that will be executed locally.
 */
public class XPathElementsLTInt implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();

		IndexQueryResult rhsNodes = context.colStore
				.getBtreeIndex(ValueType.STRING, context.recursive).getLesser(
						(String) rhs.getLastStep().getStepName(), context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(
				parentSeq, rhsNodes, context);
		if (joinRet == null || joinRet.size() == 0) {
			context.setNoResults();
		} else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathElementsLTString.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;
/**
 * implementation of less than function of String type in XPath that will be executed locally.
 */
public class XPathElementsLTString implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		ExecContext rhs = context.args.pop();
		ExecContext lhs = context.args.pop();
		XPathSequence parentSeq = lhs.pollLastStep();
		
		IndexQueryResult rhsNodes = context.colStore
				.getBtreeIndex(ValueType.STRING, context.recursive).getLesser(
						(String) rhs.getLastStep().getStepValue(), context.filter);
		IndexQueryResult joinRet = XPathProcessorV2.EVJoin(parentSeq, rhsNodes, context);
		if (joinRet.size() == 0)
			context.setNoResults();
		else {
			parentSeq.setStep(joinRet);
			context.addSequence(parentSeq);
		}
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathMax.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.util.Iterator;
import java.util.List;
import java.util.Stack;
import java.util.TreeMap;

import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.MaxResult;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

/**
 * implementation of max function in XPath that will be executed locally. The
 * results will be aggregated on the coordinator nodes.
 */
public class XPathMax implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		IndexQueryResult result = null;

		if (context.args.empty()) {
			XPathProcessorV2.backwardForwardExecSteps(context.parentContext);
			XPathSequence lastStep = context.parentContext.getLastStep();
			if (lastStep != null && lastStep.isValueSeted())
				result = (IndexQueryResult) lastStep.getStepValue();
		} else {
			ExecContext tempContext = (ExecContext) context.args.pop();

			// maybe we should execute the tempContext recursive
			XPathProcessorV2.backwardForwardExecSteps(tempContext);
			XPathSequence lastStep = tempContext.getLastStep();
			if (lastStep != null && lastStep.isValueSeted())
				result = (IndexQueryResult) lastStep.getStepValue();
		}

		double max = Double.MIN_VALUE;
		if (result == null || result.size() == 0) {
		} else {


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathMin.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.util.Iterator;
import java.util.List;
import java.util.TreeMap;

import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.MinResult;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

/**
 * implementation of min function in XPath that will be executed locally. The
 * results will be aggregated on the coordinator nodes.
 */
public class XPathMin implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		IndexQueryResult result = null;

		if (context.args.empty()) {
			XPathProcessorV2.backwardForwardExecSteps(context.parentContext);
			XPathSequence lastStep = context.parentContext.getLastStep();
			if (lastStep != null && lastStep.isValueSeted())
				result = (IndexQueryResult) lastStep.getStepValue();
		} else {
			ExecContext tempContext = (ExecContext) context.args.pop();

			// maybe we should execute the tempContext recursive
			XPathProcessorV2.backwardForwardExecSteps(tempContext);
			XPathSequence lastStep = tempContext.getLastStep();
			if (lastStep != null && lastStep.isValueSeted())
				result = (IndexQueryResult) lastStep.getStepValue();
		}

		double min = Double.MAX_VALUE;
		if (result == null || result.size() == 0) {
		} else {
			try {
				for (Iterator<Integer> colIter = result.colIterator(); colIter

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSubSeqStep2.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.util.List;

import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.TextResult;
import imc.disxmldb.dom.cache.SubSequenceCache;
import imc.disxmldb.dom.cache.CacheManager.CacheType;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.function.IXPathFunction;

public class XPathSubSeqStep2 implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		// cacheid, start, limit
		ExecContext limitContext = context.args.pop();
		ExecContext startContext = context.args.pop();
		ExecContext cacheIDContext = context.args.pop();
		int start = Integer.parseInt((String) startContext.getLastStep()
				.getStepValue());
		int limit = Integer.parseInt((String) limitContext.getLastStep()
				.getStepValue());
		int cacheID = Integer.parseInt((String) cacheIDContext.getLastStep()
				.getStepValue());
		
		SubSequenceCache cache = (SubSequenceCache) context.colStore.getCache(CacheType.SUBSEQ);
		IndexQueryResult result = null;
		if (cache == null) {
			throw new RuntimeException("subsequence cache is not found");
		} else {
			result = cache.get(cacheID);			
			cache.remove(cacheID);
		}
		
		List<String> texts = XPathSubsequence1.subsequence(result, start, limit);
		TextResult ret = new TextResult();
		ret.texts = texts;
		XPathResult xpRet = new XPathResult(XPathResultType.FunctionReturn);
		xpRet.setFuncRet(ret);
		context.addResult(xpRet);
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSubsequence.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.util.Iterator;
import java.util.List;
import java.util.TreeMap;

import org.apache.cassandra.utils.Pair;

import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.CountResult;
import imc.disxmldb.cassandra.verbhandler.result.SeqResult;
import imc.disxmldb.dom.cache.CacheManager.CacheType;
import imc.disxmldb.dom.cache.SubSequenceCache;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

/**
 * the procedure of subsequence: 1. the first invocation is used to calculate
 * the count of results on each node 2. then the coordinator node will locate
 * the nodes that contain the results and send an subsequence_i(start, limit) to
 * those nodes
 * 
 * @author xiafan
 * 
 */
public class XPathSubsequence implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		IndexQueryResult result = null;
		XPathProcessorV2.backwardForwardExecSteps(context.parentContext);
		XPathSequence lastStep = context.parentContext.getLastStep();
		int count = 0;
		int cacheID = -1;
		if (lastStep == null) {
			count = 0;
		} else {
			if (context.parentContext.noResults() == false)
				result = (IndexQueryResult) context.parentContext.getLastStep()
						.getStepValue();

			if (result == null || result.size() == 0) {
				context.setNoResults();
			} else {
				count = result.size();

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSubsequence1.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map.Entry;
import java.util.TreeMap;

import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.TextResult;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

public class XPathSubsequence1 implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {

		ExecContext limitContext = context.args.pop();
		ExecContext startContext = context.args.peek();
		int start = Integer.parseInt((String) startContext.getLastStep()
				.getStepValue());
		int limit = Integer.parseInt((String) limitContext.getLastStep()
				.getStepValue());
		// maybe we should execute the tempContext recursive
		XPathProcessorV2.backwardForwardExecSteps(context.parentContext);
		XPathSequence lastStep = context.parentContext.getLastStep();
		IndexQueryResult result = null;
		if (lastStep != null && lastStep.isValueSeted())
			result = (IndexQueryResult) lastStep.getStepValue();

		List<String> texts = XPathSubsequence1
				.subsequence(result, start, limit);

		TextResult ret = new TextResult();
		ret.texts = texts;
		XPathResult xpRet = new XPathResult(XPathResultType.FunctionReturn);
		xpRet.setFuncRet(ret);
		context.addResult(xpRet);
	}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathSum.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.util.Iterator;
import java.util.List;
import java.util.Map.Entry;
import java.util.TreeMap;

import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.SumResult;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

/**
 * implementation of sum function in XPath that will be executed locally. The
 * results will be aggregated on the coordinator nodes.
 */
public class XPathSum implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		IndexQueryResult result = null;

		if (context.args.empty()) {
			XPathProcessorV2.backwardForwardExecSteps(context.parentContext);
			XPathSequence lastStep = context.parentContext.getLastStep();
			if (lastStep != null && lastStep.isValueSeted())
				result = (IndexQueryResult) lastStep.getStepValue();
		} else {
			ExecContext tempContext = (ExecContext) context.args.pop();

			// maybe we should execute the tempContext recursive
			XPathProcessorV2.backwardForwardExecSteps(tempContext);
			XPathSequence lastStep = tempContext.getLastStep();
			if (lastStep != null && lastStep.isValueSeted())
				result = (IndexQueryResult) lastStep.getStepValue();
		}
		SumResult ret = new SumResult();

		if (result == null || result.size() == 0) {

		} else {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/function/functionimpl/XPathText.java
 =======================================================================
package imc.disxmldb.xpath.function.functionimpl;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.cassandra.verbhandler.result.TextResult;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.IndexQueryResult;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.IXPathFunction;

/**
 * implementation of text function in XPath that will be executed locally.
 */
public class XPathText implements IXPathFunction {

	@Override
	public void invoke(ExecContext context) {
		IndexQueryResult result = null;

		if (context.args.empty()) {
			XPathProcessorV2.backwardForwardExecSteps(context.parentContext);
			XPathSequence lastStep = context.parentContext.getLastStep();
			if (lastStep != null && lastStep.isValueSeted())
				result = (IndexQueryResult) lastStep.getStepValue();
		} else {
			ExecContext tempContext = (ExecContext) context.args.pop();

			// maybe we should execute the tempContext recursive
			XPathProcessorV2.backwardForwardExecSteps(tempContext);
			XPathSequence lastStep = tempContext.parentContext.getLastStep();
			if (lastStep != null && lastStep.isValueSeted())
				result = (IndexQueryResult) lastStep.getStepValue();
		}

		List<String> texts = new ArrayList<String>();
		if (result != null) {
			for (Iterator<Integer> colIter = result.colIterator(); colIter
					.hasNext();) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathcompile/XPathCompiler.jj
 =======================================================================
/**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */
options
{
  JDK_VERSION = "1.5";
  UNICODE_INPUT = true;
  static = false;
}

PARSER_BEGIN(XPathCompiler)
package imc.disxmldb.xpath.xpathcompile;
import org.apache.cassandra.dht.IPartitioner;
import org.apache.cassandra.utils.LatencyTracker;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.index.filter.XMLLocalDocFilter;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathProcessorV2.XPathError;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.FunctionDef;
import imc.disxmldb.xpath.function.FunctionPool;

public class XPathCompiler
{
  public static void main(String args []) throws ParseException
  {
    XPathCompiler parser = new XPathCompiler(System.in);
  }

  public boolean compile() throws ParseException {
			XPath();
			//否者抛出异常
			return true;
	}
}

PARSER_END(XPathCompiler)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/IMCXPathException.java
 =======================================================================
package imc.disxmldb.xpath.xpathparser;

public class IMCXPathException extends Exception {
	public IMCXPathException(String message) {
		super(message);
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathparser/XPathParser.jj
 =======================================================================
/**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */
options
{
  JDK_VERSION = "1.5";
  UNICODE_INPUT = true;
  static = false;
}

PARSER_BEGIN(XPathParser)
package imc.disxmldb.xpath.xpathparser;
import org.apache.cassandra.dht.IPartitioner;
import org.apache.cassandra.utils.LatencyTracker;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.index.filter.IXMLFilter;
import imc.disxmldb.index.filter.XMLLocalDocFilter;
import imc.disxmldb.xpath.ExecContext;
import imc.disxmldb.xpath.XPathProcessorV2;
import imc.disxmldb.xpath.XPathProcessorV2.XPathError;
import imc.disxmldb.xpath.XPathSequence;
import imc.disxmldb.xpath.function.FunctionDef;
import imc.disxmldb.xpath.function.FunctionPool;
import imc.disxmldb.config.SysConfig;

import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;

public class XPathParser
{
  private static LatencyTracker xpathExecLatency = new LatencyTracker();
  private PipedInputStream input = new PipedInputStream(9160);
  private PipedOutputStream output = new PipedOutputStream();
  private boolean connected = false;

public boolean connect()
{
		try {
				output.connect(input);
				ReInit(input, SysConfig.ENCODING);
				connected = true;
				return true;
			} catch (IOException e) {
				return false;
			}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xpath/xpathtoken/XPathToken.jj
 =======================================================================
 /**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */
options
{
  JDK_VERSION = "1.5";
  UNICODE_INPUT = true;
  static = false;
}

PARSER_BEGIN(XPathTokenParser)
package imc.disxmldb.xpath.xpathtoken;

public class XPathTokenParser
{
  public static void main(String args []) throws ParseException
  {
    XPathTokenParser parser = new XPathTokenParser(System.in);
    while (true)
    {
      System.out.println("Reading from standard input...");
      System.out.print("Enter an expression like \"1+(2+3)*4;\" :");
      try
      {
        Token token = null;
        while ((token = parser.getNextToken()) != null)
        {
          System.out.println(token.image);
        }
      }
      catch (Exception e)
      {
        System.out.println("NOK.");
        System.out.println(e.getMessage());
        break;
      }
      catch (Error e)
      {
        System.out.println("Oops.");
        System.out.println(e.getMessage());
        break;
      }
    }
  }
}

PARSER_END(XPathTokenParser)

SKIP :
{

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/AppendHandler.java
 =======================================================================
/**
 * @author xiafan
 */
package imc.disxmldb.xupdate;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.config.SysConfig;
import imc.disxmldb.config.XMLMetaData;
import imc.disxmldb.dom.AttributeNode;
import imc.disxmldb.dom.AttributeNodeImpl;
import imc.disxmldb.dom.ElementNode;
import imc.disxmldb.dom.ElementNodeImpl;
import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.dom.numbering.INumberingSchema;
import imc.disxmldb.dom.numbering.NumberingSchema;
import imc.disxmldb.dom.typesystem.TypeResolver;
import imc.disxmldb.xupdate.XUpdateProcessor.AppendContext;

import java.lang.management.ManagementFactory;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.TimeoutException;

import javax.management.MBeanServer;
import javax.management.ObjectName;

import org.apache.cassandra.db.RowMutation;
import org.apache.cassandra.service.StorageProxy;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.helpers.DefaultHandler;

/**
 * this class implements the append command in the XUpdate query. It use SAX to
 * parse the XML segment and encode them using the numbering schema. Those
 * encoded XML nodes will them be stored distributed.
 */
public class AppendHandler extends DefaultHandler implements AppendHandlerMBean {
	public static final String ROOTNODE = "root";
	public static final String ROOTNDOE_START_TAG = "<" + ROOTNODE + ">";
	public static final String ROOTNODE_END_TAG = "</" + ROOTNODE + ">";

	/*
	 * double rangeSize = SysConfig.DEFAULT_RANGE_SIZE; double[] range = new
	 * double[2]; double rangeBound = 0.0;
	 */
	INumberingSchema numbering;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/AppendHandlerMBean.java
 =======================================================================
package imc.disxmldb.xupdate;
/**
 * Interface needed by the JMX framework to provide the run state of the
 * monitored object
 */
public interface AppendHandlerMBean {

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/AppendRollBack.java
 =======================================================================
package imc.disxmldb.xupdate;

import java.util.HashMap;
import java.util.List;
import java.util.concurrent.TimeoutException;

import org.apache.cassandra.thrift.UnavailableException;
/**
 * @author xiafan
 */
import imc.disxmldb.CollectionStore;
import imc.disxmldb.config.XMLMetaData;
import imc.disxmldb.dom.ElementNode;
import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.XMLNodeForMutation;

/**
 * rollback all the append operations, which will delete all the appended nodes
 * and update the root node of the appended nodes
 */
public class AppendRollBack {
	private CollectionStore colStore = null;
	private List<XMLNode> nodes = null;
	private XMLMetaData meta = null;
	private ElementNode parent = null;

	/**
	 * 
	 * @param colStore
	 * @param nodes
	 */
	public AppendRollBack(CollectionStore colStore, XMLMetaData meta,
			ElementNode parent, List<XMLNode> nodes) {
		this.colStore = colStore;
		this.meta = meta;
		this.parent = parent;
		this.nodes = nodes;
	}

	public void rollback() {
		// delete the appended nodes
		HashMap<Integer, List<XMLNodeForMutation>> xmlNodeIDsPair = new HashMap<Integer, List<XMLNodeForMutation>>();
		try {
			colStore.deleteNodeRemote(xmlNodeIDsPair);
		} catch (Exception e) {
			// TODO then this operation should be stored and executed in future
		}

		// update the parent node
		if (parent != null) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/disxmldb/xupdate/XUpdateProcessor.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-25 0.1
 */
package imc.disxmldb.xupdate;

import java.io.ByteArrayInputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.apache.cassandra.db.RowMutation.XUpdateCommand;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.result.XMLDocNodeIDs;
import imc.disxmldb.cassandra.verbhandler.result.XMLNodeForMutations;
import imc.disxmldb.config.CollectionMetaData;
import imc.disxmldb.config.SysConfig;
import imc.disxmldb.config.XMLDBCatalogManager;
import imc.disxmldb.config.XMLMetaData;
import imc.disxmldb.dom.ElementNode;
import imc.disxmldb.dom.ElementNodeImpl;
import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.XMLNodeForMutation;
import imc.disxmldb.util.XMLUtilities;

/**
 * This class implements the parser of XUpdate query. The delete and update
 * command is also implemented here. Currently An XUpdate command will lock the

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/DisXMLDbServer.java
 =======================================================================
package imc.jettyserver;

import imc.disxmldb.XMLDBStore;

import java.net.InetAddress;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import java.util.Timer;
import java.util.TimerTask;

import org.mortbay.http.HttpContext;
import org.mortbay.http.HttpListener;
import org.mortbay.http.HttpServer;
import org.mortbay.http.SocketListener;
import org.mortbay.http.SslListener;
import org.mortbay.http.handler.ForwardHandler;
import org.mortbay.http.handler.NotFoundHandler;
import org.mortbay.jetty.servlet.ServletHolder;
import org.mortbay.jetty.servlet.WebApplicationHandler;
import org.mortbay.util.ThreadedServer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author:xiafan xiafan68@gmail.com
 * @version: Sep 8, 2011 0.1
 */

public class DisXMLDbServer{

	public interface ServletBootstrap {
		void bootstrap(Properties properties, WebApplicationHandler handler);
	}
	static {
		
	}

	private  static Logger logger = LoggerFactory.getLogger(DisXMLDbServer.class);

	// command-line options
	private final static int HELP_OPT = 'h';
	private final static int DEBUG_OPT = 'd';
	private final static int HTTP_PORT_OPT = 'p';
	private final static int THREADS_OPT = 't';

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/XMLDBServerBean.java
 =======================================================================
/**
*@author:xiafan xiafan68@gmail.com
*@version: 2011-10-19 0.1
*/
package imc.jettyserver;

public interface XMLDBServerBean {
	public int getServerThreads();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/servlets/HttpServletRequestWrapper.java
 =======================================================================
/*
 * eXist Open Source Native XML Database Copyright (C) 2001-06 Wolfgang M.
 * Meier meier@ifs.tu-darmstadt.de http://exist.sourceforge.net
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 * $Id: HttpServletRequestWrapper.java 9009 2009-05-12 18:34:44Z dizzzz $
 */

package imc.jettyserver.servlets;



import org.exist.util.MimeType;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletInputStream;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.io.InputStreamReader;
import java.net.URLDecoder;
import java.security.Principal;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Locale;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;
import java.util.Vector;

/** A wrapper for HttpServletRequest

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/imc/jettyserver/servlets/Log4jInit.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-06 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist.sourceforge.net
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 *  $Id: Log4jInit.java 9324 2009-07-12 20:09:34Z dizzzz $
 */

package imc.jettyserver.servlets;

import java.io.ByteArrayInputStream;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.xml.DOMConfigurator;

import org.apache.commons.io.output.ByteArrayOutputStream;


/**
 * Helper servlet for initializing the log4j framework in a webcontainer.
 */
public class Log4jInit extends HttpServlet {
    
    private String getTimestamp(){

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/TableMBean.java
 =======================================================================
package org.apache.cassandra.db;

public interface TableMBean {
	public long getReadIdxColLatency();
	public double getAvgReadIdxColLatency();
	
	public long getApplyLatency();
	public double getAvgApplyLatency();
	public long[] getApplyTimeSlice();
	public double getAvgUpdateIdxLatency();
	public double getAvgCfsApplyLatency();
	
	public long[] getApplyTime();
	
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/apache/cassandra/db/marshal/FileSizeType.java
 =======================================================================
package org.apache.cassandra.db.marshal;


import imc.disxmldb.dom.typesystem.ValueType;

import java.nio.ByteBuffer;
import java.util.HashMap;
import java.util.Map;

import org.apache.cassandra.utils.ByteBufferUtil;

public class FileSizeType extends AbstractType<String> {
	public static int KILO_BYTES = 1024;
	public static int MEGA_BYTES = KILO_BYTES * 1024;
	public static int GIGA_BYTES = MEGA_BYTES * 1024;
	
	private static Map<ValueType, FileSizeType> instances = new HashMap<ValueType, FileSizeType>();
	
	private int scale = KILO_BYTES;
	private String suffix = "k";
	
	private FileSizeType(ValueType valueType) {
		if (valueType == ValueType.KILOSIZE || valueType == ValueType.FILESIZE) {
			//nothing todo
		} else if (valueType == ValueType.MEGASIZE) {
			scale = MEGA_BYTES;
			suffix = "MB";
		} else if (valueType == ValueType.GIGASIZE) {
			scale = GIGA_BYTES;
			suffix = "G";
		} 
	}
	
	public static FileSizeType getInstance(ValueType valueType) {
		if (instances.get(valueType) == null) {
			instances.put(valueType, new FileSizeType(valueType));
		}
		return instances.get(valueType);
	}
	@Override
	public int compare(ByteBuffer o1, ByteBuffer o2) {
		return DoubleType.instance.compare(o1, o2);
	}

	@Override
	public String compose(ByteBuffer bytes) {
		Double size = ByteBufferUtil.toDouble(bytes);
		return size.toString();
	}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ArrayUtils.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright 2004 The eXist Team
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 *  $Id: ArrayUtils.java 4403 2006-09-27 12:27:37Z wolfgang_m $
 */
package org.exist.util;

/**
 * Utility methods to have indexed access for insertion and deletion
 * of array items.
 * 
 * Based on original code from dbXML.
 */
public class ArrayUtils {
    
    /**
     * Delete an integer.
     * 
     * @param vals array of integers
     * @param idx index of integer to delete
     * @return the array without the deleted integer
     */
    public static int[] deleteArrayInt(int[] vals, int idx) {
        int[] newVals = new int[vals.length - 1];
        if (idx > 0) {
            System.arraycopy(vals, 0, newVals, 0, idx);
        }
        if (idx < newVals.length) {
            System.arraycopy(vals, idx + 1, newVals, idx, newVals.length - idx);
        }
        
        return newVals;
    }

    /**

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Base64Decoder.java
 =======================================================================
/*
 *
 * The contents of this [class] are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1999 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s):
 */
package org.exist.util;

import org.apache.commons.io.output.ByteArrayOutputStream;

/**
 * Base 64 text to byte decoder. To produce the binary  array from
 * base 64 encoding call {@link #translate} for each sequence of
 * characters and {@link #getByteArray} to mark closure of the
 * character stream and retrieve the binary contents.
 *
 * @author Based on code from the Mozilla Directory SDK
 */

public final class Base64Decoder {
    private ByteArrayOutputStream out = new ByteArrayOutputStream();

    private byte token[] = new byte[4];      // input buffer

    private byte bytes[] = new byte[3];      // output buffer

    private int token_length = 0;            // input buffer length

    private static final byte NUL = 127;     // must be out of range 0-64

    private static final byte EOF = 126;     // must be out of range 0-64

    private static final byte SP = 125;     // must be out of range 0-64

    private static final byte[] map = {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Base64Encoder.java
 =======================================================================
/*
 * 
 * The contents of this [class] are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1999 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s):
 */
package org.exist.util;

    /**
     * Byte to text encoder using base 64 encoding. To create a base 64
     * encoding of a byte stream call {@link #translate} for every
     * sequence of bytes and {@link #getCharArray} to mark closure of
     * the byte stream and retrieve the text presentation.
     *
     * @author Based on code from the Mozilla Directory SDK
     */
public final class Base64Encoder {

    private FastStringBuffer out = new FastStringBuffer(256);

    private int buf = 0;                     // a 24-bit quantity

    private int buf_bytes = 0;               // how many octets are set in it

    private char line[] = new char[74];      // output buffer

    private int line_length = 0;             // output buffer fill pointer

    //static private final byte crlf[] = "\r\n".getBytes();

    private static final char map[] = {
        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', // 0-7
        'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', // 8-15
        'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', // 16-23
        'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', // 24-31

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ByteArray.java
 =======================================================================
/*
 * ByteArray.java - Jun 3, 2003
 * 
 * @author wolf
 */
package org.exist.util;

import java.nio.ByteBuffer;

public interface ByteArray {

	void setLength(int len);
	void copyTo(byte[] b, int offset);
	void copyTo(int start, byte[] newBuf, int offset, int len);
	void copyTo(ByteArray other);
    void copyTo(ByteBuffer buf);
	public void copyTo(int start, ByteBuffer buf, int len);
	void append(byte b);
	void append(byte[] b);
	void append(byte[] b, int offset, int length);
	int size();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ByteArrayPool.java
 =======================================================================
package org.exist.util;

/**
 * A pool for byte arrays.
 * 
 * This pool is primarily used while parsing documents: serializing the
 * DOM nodes generates a lot of small byte chunks. Only byte arrays
 * with length &lt; MAX are kept in the pool. Large arrays are rarely
 * reused.
 */
public class ByteArrayPool {

	public static final int POOL_SIZE = 32;
	public static final int MAX = 128;
	public static final ThreadLocal pools_ = new PoolThreadLocal();
	private static int slot_ = 0;
	
	public ByteArrayPool() {
	}

	public static byte[] getByteArray(int size) {
		byte[][] pool = (byte[][])pools_.get();
		if(size < MAX) {
			for(int i = pool.length; i-- > 0; ) {
				if(pool[i] != null && pool[i].length == size) {
					//System.out.println("found byte[" + size + "]");
					byte[] b = pool[i];
					pool[i] = null;
					return b;
				}
			}
		}
		return new byte[size];
	}
	
	public static void releaseByteArray(final byte[] b) {
		if(b == null || b.length > MAX)
			return;
		//System.out.println("releasing byte[" + b.length + "]");
		byte[][] pool = (byte[][]) pools_.get();
		for(int i = pool.length; i-- > 0;) {
			if(pool[i] == null) {
				pool[i] = b;
				return;
			}
		}
		
		int s = slot_++;
		if (s < 0)
			s = -s;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ByteConversion.java
 =======================================================================

/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2000-04,  Wolfgang Meier (wolfgang@exist-db.org)
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 *  $Id: ByteConversion.java 680 2004-10-03 17:47:38Z wolfgang_m $
 */
package org.exist.util;

/**
 * A collection of static methods to write integer values from/to a
 * byte array.
 *
 *@author Wolfgang Meier <wolfgang@exist-db.org>
 */
public class ByteConversion {

    /**
     *  Read an integer value from the specified byte array, starting at start.
     */
    public final static int byteToInt( final byte data[], final int start ) {
        return ( data[start] & 0xff ) |
            ( ( data[start + 1] & 0xff ) << 8 ) |
            ( ( data[start + 2] & 0xff ) << 16 ) |
            ( ( data[start + 3] & 0xff ) << 24 );
    }

    /**
     *  Read a long value from the specified byte array, starting at start.
     */
    public final static long byteToLong( final byte[] data, final int start ) {
        return ( ( ( (long) data[start] ) & 0xffL ) << 56 ) |
            ( ( ( (long) data[start + 1] ) & 0xffL ) << 48 ) |
            ( ( ( (long) data[start + 2] ) & 0xffL ) << 40 ) |
            ( ( ( (long) data[start + 3] ) & 0xffL ) << 32 ) |
            ( ( ( (long) data[start + 4] ) & 0xffL ) << 24 ) |

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CharArrayPool.java
 =======================================================================
package org.exist.util;

/**
 * A pool for char arrays.
 * 
 * This pool is used by class XMLString. Whenever an XMLString needs to
 * reallocate the backing char[], the old array is released into the pool. However,
 * only char[] with length &lt; MAX are kept in the pool. Larger char[] are rarely reused.
 * 
 * The pool is bound to the current thread.
 */
public class CharArrayPool {

	public static final int POOL_SIZE = 128;
	public static final int MAX = 128;
	public static final ThreadLocal pools_ = new PoolThreadLocal();
	private static int slot_ = 0;
	
	public CharArrayPool() {
	}

	public static char[] getCharArray(int size) {
		if(MAX > size) {
			final char[][] pool = (char[][])pools_.get();
			for(int i = 0; i < pool.length; i++) {
				if(pool[i] != null && pool[i].length == size) {
						char[] b = pool[i];
						pool[i] = null;
						return b;
				}
			}
		}
		//System.out.println("creating new char[" + size + "]");
		return new char[size];
	}
	
	public static void releaseCharArray(final char[] b) {
		if(b == null || b.length > MAX)
			return;
		final char[][] pool = (char[][]) pools_.get();
		for(int i = 0; i < pool.length; i++) {
			if(pool[i] == null) {
				pool[i] = b;
				return;
			}
		}
		
		int s = slot_++;
		if (s < 0)
			s = -s;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CharSlice.java
 =======================================================================
package org.exist.util;

import java.io.Serializable;
import java.io.Writer;

/**
 * This is an implementation of the JDK 1.4 CharSequence interface: it implements
 * a CharSequence as a view of an array. The implementation relies on the array
 * being immutable: as a minimum, the caller is required to ensure that the array
 * contents will not change so long as the CharSlice remains in existence.
 *
 * This class should be more efficient than String because it avoids copying the
 * characters unnecessarily.
 *
 * The methods in the class don't check their arguments. Incorrect arguments will
 * generally result in exceptions from lower-level classes.
 *
 */
public final class CharSlice implements CharSequence, Serializable {

    private char[] array;
    private int offset;
    private int count;

    public CharSlice(char[] array) {
        this.array = array;
        this.offset = 0;
        this.count = array.length;
    }

    public CharSlice(char[] array, int start, int length) {
        this.array = array;
        this.offset = start;
        this.count = length;
        if (start + length > array.length) {
            throw new IndexOutOfBoundsException("start(" + start +
                    ") + length(" + length + ") > size(" + array.length + ')');
        }
    }

    /**
     * Returns the length of this character sequence.  The length is the number
     * of 16-bit Unicode characters in the sequence. </p>
     *
     * @return  the number of characters in this sequence
     */
    public int length() {
        return count;
    }


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CollectionScanner.java
 =======================================================================

package org.exist.util;

import java.util.ArrayList;
import java.util.List;

import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.XMLDBException;

public class CollectionScanner {

	public final static Resource[] scan(Collection current, String vpath, String pattern) 
	throws XMLDBException {
		List list = new ArrayList();
		scan(list, current, vpath, pattern);
		Resource resources[] = new Resource[list.size()];
		return (Resource[])list.toArray(resources);
	}

	public final static void scan(List list, Collection current, String vpath, String pattern) 
	throws XMLDBException {
		String[] resources = current.listResources();
		String name;
		for(int i = 0; i < resources.length; i++) {
			name = vpath + resources[i];
			System.out.println("checking " + name);
			if(DirectoryScanner.match(pattern, name))
				list.add(current.getResource(resources[i]));
		}
		String[] subs = current.listChildCollections();
		for(int i = 0; i < subs.length; i++) {
			name = vpath + subs[i];
			System.out.println("checking " + name + " = " + pattern);
			if(DirectoryScanner.matchStart(pattern, name))
                ///TODO : use dedicated function in XmldbURI
				scan(list, current.getChildCollection(subs[i]), name + "/", pattern);
		}
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/CompressedWhitespace.java
 =======================================================================
package org.exist.util;

import java.io.Writer;

/**
 * This class provides a compressed representation of a sequence of whitespace characters. The representation
 * is a sequence of bytes: in each byte the top two bits indicate which whitespace character is used
 * (x9, xA, xD, or x20) and the bottom six bits indicate the number of such characters. A zero byte is a filler.
 * We don't compress the sequence if it would occupy more than 8 bytes, because that's the space we've got available
 * in the TinyTree arrays.
 */

public class CompressedWhitespace implements CharSequence {

    private static char[] WHITE_CHARS = {0x09, 0x0A, 0x0D, 0x20};

    private long value;

    public CompressedWhitespace(long compressedValue) {
        this.value = compressedValue;
    }

    /**
     * Attempt to compress a CharSequence
     * @param in the CharSequence to be compressed
     * @return the compressed sequence if it can be compressed; or the original CharSequence otherwise
     */

    public static CharSequence compress(CharSequence in) {
        final int inlen = in.length();
        if (inlen == 0) {
            return in;
        }
        int runlength = 1;
        int outlength = 0;
        for (int i=0; i<inlen; i++) {
            final char c = in.charAt(i);
            if (("\t\n\r ").indexOf(c) >= 0) {
                if (i == inlen-1 || c != in.charAt(i+1) || runlength == 63) {
                    runlength = 1;
                    outlength++;
                    if (outlength > 8) {
                        return in;
                    }
                } else {
                    runlength++;
                }
            } else {
                return in;
            }

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Compressor.java
 =======================================================================
/*
 * eXist Open Source Native XML Database Copyright (C) 2001-2005, Wolfgang M.
 * Meier (meier@ifs.tu-darmstadt.de)
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Library General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option) any
 * later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Library General Public License
 * along with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 * 
 * $Id: Compressor.java 9324 2009-07-12 20:09:34Z dizzzz $
 */
package org.exist.util;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.zip.ZipOutputStream;

import org.apache.commons.io.output.ByteArrayOutputStream;

public class Compressor {

    /**
     * The method <code>compress</code>
     *
     * @param whatToCompress a <code>byte[]</code> value
     * @return a <code>byte[]</code> value
     * @exception IOException if an error occurs
     */
    public static byte[] compress(byte[] whatToCompress) throws IOException {
        return compress(whatToCompress, whatToCompress.length);
    }
    
    /**
     * The method <code>compress</code>
     *
     * @param whatToCompress a <code>byte[]</code> value
     * @param length an <code>int</code> value
     * @return a <code>byte[]</code> value

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/DatabaseConfigurationException.java
 =======================================================================
package org.exist.util;

public class DatabaseConfigurationException extends Exception {

    public DatabaseConfigurationException() {
		super();
	}

	public DatabaseConfigurationException(String message) {
		super(message);
	}

    public DatabaseConfigurationException(String message, Throwable cause) {
        super(message, cause);
    }
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/DeadlockException.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-07 The eXist Project
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * $Id$
 */
package org.exist.util;

public class DeadlockException extends LockException {

    public DeadlockException() {
        super();
    }

    public DeadlockException(String message) {
        super(message);
    }
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/DirectoryScanner.java
 =======================================================================
package org.exist.util;

import java.io.File;
import java.util.ArrayList;

public class DirectoryScanner {

	
	private final static String extractBaseDir(String pattern) {
		int p = 0;
		char ch;
		for(int i = 0; i < pattern.length(); i++) {
			ch = pattern.charAt(i);
			if(ch == File.separatorChar || ch == ':') {
				p = i;
				continue;
			} else if(ch == '*' || ch == '?') {
				if(p > 0)
					return pattern.substring(0, p + 1);
			}
		}
		return null;
	}
	
	public final static File[] scanDir(String pattern) {
        //TODO : why this test ? File should make it ! -pb
		pattern = pattern.replace('/', File.separatorChar).replace('\\',File.separatorChar);
		String baseDir = extractBaseDir(pattern);
		if(baseDir == null) {
                        // Dizzzz ##### Why this dependancy?
			baseDir = System.getProperty("user.dir");
			pattern = baseDir + File.separator + pattern;
		}
		
		File base = new File(baseDir);
		return scanDir(base, pattern.substring(baseDir.length()));
	}
	
	public final static File[] scanDir(File baseDir, String pattern) {
        ///TODO : why this test ? File should make it ! -pb
		pattern = pattern.replace('/', File.separatorChar).replace('\\',File.separatorChar);
		ArrayList list = new ArrayList();
		scanDir(list, baseDir, "", pattern);
		File[] files = new File[list.size()];
		return (File[])list.toArray(files);
	}
	
	private final static void scanDir(ArrayList list, File dir, String vpath, String pattern) {
		String files[] = dir.list();
		if (files == null) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/EXistInputSource.java
 =======================================================================
package org.exist.util;

import org.xml.sax.InputSource;

public abstract class EXistInputSource extends InputSource {
	public EXistInputSource() {
		super();
	}
	
	public abstract long getByteStreamLength();
	
	public abstract String getSymbolicPath();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/EXistOutputKeys.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-06 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist.sourceforge.net
 *  
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *  
 *  $Id: EXistOutputKeys.java 9854 2009-08-20 10:03:23Z wolfgang_m $
 */
package org.exist.util;

public class EXistOutputKeys {

	public final static String OUTPUT_DOCTYPE = "output-doctype";
	 
	public final static String EXPAND_XINCLUDES = "expand-xincludes";
	
	public final static String PROCESS_XSL_PI = "process-xsl-pi";
	
	public final static String HIGHLIGHT_MATCHES = "highlight-matches";
	
	public final static String INDENT_SPACES = "indent-spaces";
	
	public final static String STYLESHEET = "stylesheet";
	
	public final static String STYLESHEET_PARAM = "stylesheet-param";
	
	public final static String COMPRESS_OUTPUT = "compress-output";

    public final static String ADD_EXIST_ID = "add-exist-id";

    public final static String XINCLUDE_PATH = "xinclude-path";
	
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ExistSAXParserFactory.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2009 The eXist Project
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 *  $Id$
 */
package org.exist.util;

import java.lang.reflect.Method;
import javax.xml.parsers.SAXParserFactory;

import org.apache.log4j.Logger;

/**
 *  Helper class for creating an instance of javax.xml.parsers.SAXParserFactory
 * 
 * @author dizzzz@exist-db.org
 */
public class ExistSAXParserFactory {

    private final static Logger LOG = Logger.getLogger(ExistSAXParserFactory.class);

    public final static String systemProperty="org.exist.SAXParserFactory";

    /**
     *  Get SAXParserFactory instance specified by factory class name.
     *
     * @param className Full class name of factory
     *
     * @return A Sax parser factory or NULL when not available.
     */
    public static SAXParserFactory getSAXParserFactory(String className) {

        Class clazz = null;
        try {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FastByteBuffer.java
 =======================================================================
/*
 *  The Apache Software License, Version 1.1
 *
 *
 *  Copyright (c) 1999 The Apache Software Foundation.  All rights
 *  reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *  1. Redistributions of source code must retain the above copyright
 *  notice, this list of conditions and the following disclaimer.
 *
 *  2. Redistributions in binary form must reproduce the above copyright
 *  notice, this list of conditions and the following disclaimer in
 *  the documentation and/or other materials provided with the
 *  distribution.
 *
 *  3. The end-user documentation included with the redistribution,
 *  if any, must include the following acknowledgment:
 *  "This product includes software developed by the
 *  Apache Software Foundation (http://www.apache.org/)."
 *  Alternately, this acknowledgment may appear in the software itself,
 *  if and wherever such third-party acknowledgments normally appear.
 *
 *  4. The names "Xalan" and "Apache Software Foundation" must
 *  not be used to endorse or promote products derived from this
 *  software without prior written permission. For written
 *  permission, please contact apache@apache.org.
 *
 *  5. Products derived from this software may not be called "Apache",
 *  nor may "Apache" appear in their name, without prior written
 *  permission of the Apache Software Foundation.
 *
 *  THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 *  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 *  ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 *  USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 *  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 *  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 *  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 *  SUCH DAMAGE.
 *  ====================================================================
 *
 *  This software consists of voluntary contributions made by many

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FastStringBuffer.java
 =======================================================================
/*
 * eXist Open Source Native XML Database
 * Copyright (C) 2003-2007 The eXist Project
 * http://exist-db.org
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * This class is to large extents copied from Saxon 2003-01-21 (version ?).
 * See comment at the back about licensing for those parts.
 * 
 *  $Id: FastStringBuffer.java 6391 2007-08-21 07:16:18Z ellefj $
 */
package org.exist.util;

import java.io.Serializable;
import java.io.Writer;

/**
 * A simple implementation of a class similar to StringBuffer. Unlike
 * StringBuffer it is not synchronized. It also offers the capability
 * to remove unused space. (This class could possibly be replaced by
 * StringBuilder in JDK 1.5, but using our own class gives more control.)
 */

public final class FastStringBuffer implements CharSequence, Serializable {

    private char[] array;
    private int used = 0;

    public FastStringBuffer(int initialSize) {
        array = new char[initialSize];
    }

    /**
     * Append the contents of a String to the buffer
     * @param s the String to be appended
     */


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FileInputSource.java
 =======================================================================
package org.exist.util;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.Reader;

public class FileInputSource extends EXistInputSource {

	private File file;
	
	/**
	 * Empty constructor
	 */
	public FileInputSource() {
		super();
		file=null;
	}
	
	/**
	 * Constructor which calls {@link #setFile(File)}
	 * @param file
	 * The file passed to {@link #setFile(File)}
	 */
	public FileInputSource(File file) {
		this();
		setFile(file);
	}
	
	/**
	 * If a file source has been set, the File
	 * object used for that is returned
	 * @return
	 * The File object.
	 */
	public File getFile() {
		return file;
	}
	
	/**
	 * This method sets the File object used to get
	 * the uncompressed stream of data
	 * @param file
	 * The File object pointing to the GZIP file.
	 */
	public void setFile(File file) {
		this.file=file;
	}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FileUtils.java
 =======================================================================
/*
 * FileUtils.java
 *
 * Created on December 10, 2007, 1:11 PM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package org.exist.util;

import java.io.File;
import java.io.FileFilter;

/**
 *
 * @author alex
 */
public class FileUtils
{
   
   // Why is this here?  Because we can't use generics because we're
   // still in the dark ages of Java 1.4
   
   static class FileRef {
      File file;
      FileRef next;
      FileRef(FileRef next,File file) {
         this.next = next;
         this.file = file;
      }
      FileRef(File file) {
         this.next = null;
         this.file = file;
      }
   }
   static class DeleteDir {
      FileRef current;
      boolean ok;
      DeleteDir(File dir) {
         current = new FileRef(dir);
         ok = true;
      }
      public boolean delete() {
         while (ok && current!=null) {
            FileRef work = current;
            current.file.listFiles(new FileFilter() {
               public boolean accept(File file) {
                  if (file.isDirectory()) {
                     current = new FileRef(current,file);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FixedByteArray.java
 =======================================================================
/*
 * FixedByteArray.java - Jun 3, 2003
 * 
 * @author wolf
 */
package org.exist.util;

import java.nio.ByteBuffer;

public class FixedByteArray implements ByteArray {

	private byte[] data;
	private int start;
	private int len;
	
	public FixedByteArray(byte[] data, int start, int len) {
		this.data = data;
		this.start = start;
		this.len = len;
	}

    public FixedByteArray(byte[] data) {
        this(data, 0, data.length);
    }
    
	/* (non-Javadoc)
	 * @see org.exist.util.ByteArray#setLength(int)
	 */
	public void setLength(int len) {
		throw new RuntimeException("cannot modify fixed byte array");
	}

    public String toString() {
        return new String(data, start, len);
    }

	/* (non-Javadoc)
	 * @see org.exist.util.ByteArray#copyTo(byte[], int)
	 */
	public void copyTo(byte[] b, int offset) {
		System.arraycopy(data, start, b, offset, len);
	}

	/* (non-Javadoc)
	 * @see org.exist.util.ByteArray#copyTo(int, byte[], int, int)
	 */
	public void copyTo(int startOffset, byte[] newBuf, int offset, int count) {
		System.arraycopy(data, start + startOffset, newBuf, offset, count);
	}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/FloatingPointConverter.java
 =======================================================================
package org.exist.util;

import java.math.BigInteger;

/**
 * This is a utility class that handles formatting of numbers as strings.
 * <p>
 * The algorithm for converting a floating point number to a string is taken from Guy L. Steele and
 * Jon L. White, <i>How to Print Floating-Point Numbers Accurately</i>, ACM SIGPLAN 1990. It is algorithm
 * (FPP)<sup>2</sup> from that paper. There are three separate implementations of the algorithm:
 * <ul>
 * <li>One using long arithmetic and generating non-exponential output representations
 * <li>One using BigInteger arithmetic and generating non-exponential output representation
 * <li>One using BigInteger arithmetic and generating exponential output representations
 * </ul>
 * <p>
 * The choice of method depends on the value of the number being formatted.
 * <p>
 * The module contains some residual code (mainly the routine for formatting integers) from the class
 * AppenderHelper by Jack Shirazi in the O'Reilly book <i>Java Performance Tuning</i>. The floating point routines
 * in that module were found to be unsuitable, since they used floating point arithmetic which introduces
 * rounding errors.
 * <p>
 * There are several reasons for doing this conversion within Saxon, rather than leaving it all to Java.
 * Firstly, there are differences in the required output format, notably the absence of ".0" when formatting
 * whole numbers, and the different rules for the range of numbers where exponential notation is used.
 * Secondly, there are bugs in some Java implementations, for example JDK outputs 0.001 as 0.0010, and
 * IKVM/GNU gets things very wrong sometimes. Finally, this implementation is faster for "everyday" numbers,
 * though it is slower for more extreme numbers. It would probably be reasonable to hand over formatting
 * to the Java platform (at least when running the Sun JDK) for exponents outside the range -7 to +7.
 */

public class FloatingPointConverter {

    public static FloatingPointConverter THE_INSTANCE = new FloatingPointConverter();

    private FloatingPointConverter(){}

    /**
     * char array holding the characters for the string "-Infinity".
     */
    private static final char[] NEGATIVE_INFINITY = {'-', 'I', 'N', 'F'};
    /**
     * char array holding the characters for the string "Infinity".
     */
    private static final char[] POSITIVE_INFINITY = {'I', 'N', 'F'};
    /**
     * char array holding the characters for the string "NaN".
     */
    private static final char[] NaN = {'N', 'a', 'N'};

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/GZIPInputSource.java
 =======================================================================
package org.exist.util;

import java.io.InputStream;
import java.io.IOException;
import java.io.File;
import java.io.Reader;
import java.util.zip.GZIPInputStream;

/**
 * This class extends InputSource to be able to deal with
 * GZIP compressed files. Its main feature is that each time
 * {@link #getByteStream()} is called, a new uncompressed
 * stream is created from the compressed GZIP file.
 * This is very useful for eXist, which works in two steps:
 * validation and insertion.
 * 
 * @author José María Fernández (jmfg@users.sourceforge.net)
 *
 */
public final class GZIPInputSource
	extends FileInputSource
{
	/**
	 * Empty constructor
	 */
	public GZIPInputSource() {
		super();
	}
	
	/**
	 * Constructor which calls {@link #getFile()}
	 * @param gzipFile
	 * The file passed to {@link #getFile()}
	 */
	public GZIPInputSource(File gzipFile) {
		super(gzipFile);
	}
	
	/**
	 * This method was re-implemented to open a
	 * new GZIPInputStream each time it is called.
	 * @return
	 * If the file was set, and it could be opened, and it was
	 * a correct gzip file, a GZIPInputStream object.
	 * null, otherwise.
	 */
	public InputStream getByteStream() {
		InputStream retval=super.getByteStream();
		
		if(retval!=null) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/GlobToRegex.java
 =======================================================================
/*  
 *  This code has been adapted from the jakarta ORO package. The original license
 *  follows below:
 *
 * ====================================================================
 * The Apache Software License, Version 1.1
 *
 * Copyright (c) 2000 The Apache Software Foundation.  All rights
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 *    if any, must include the following acknowledgment:
 *       "This product includes software developed by the
 *        Apache Software Foundation (http://www.apache.org/)."
 *    Alternately, this acknowledgment may appear in the software itself,
 *    if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The names "Apache" and "Apache Software Foundation", "Jakarta-Oro" 
 *    must not be used to endorse or promote products derived from this
 *    software without prior written permission. For written
 *    permission, please contact apache@apache.org.
 *
 * 5. Products derived from this software may not be called "Apache" 
 *    or "Jakarta-Oro", nor may "Apache" or "Jakarta-Oro" appear in their 
 *    name, without prior written permission of the Apache Software Foundation.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Heap.java
 =======================================================================
/*
  File: Heap.java

  Originally written by Doug Lea and released into the public domain.
  This may be used for any purposes whatsoever without acknowledgment.
  Thanks for the assistance and support of Sun Microsystems Labs,
  and everyone contributing, testing, and using this code.

  History:
  Date       Who                What
  29Aug1998  dl               Refactored from BoundedPriorityQueue
  08dec2001  dl               Null out slots of removed items
  03feb2002  dl               Also null out in clear
*/

package org.exist.util;

import java.util.Comparator;

/**
 * A heap-based priority queue, without any concurrency control
 * (i.e., no blocking on empty/full states).
 * This class provides the data structure mechanics for BoundedPriorityQueue.
 * <p>
 * The class currently uses a standard array-based heap, as described
 * in, for example, Sedgewick's Algorithms text. All methods
 * are fully synchronized. In the future,
 * it may instead use structures permitting finer-grained locking.
 * <p>[<a href="http://gee.cs.oswego.edu/dl/classes/EDU/oswego/cs/dl/util/concurrent/intro.html"> Introduction to this package. </a>]
 **/

public class Heap  {
  protected Object[] nodes_;  // the tree nodes, packed into an array
  protected int count_ = 0;   // number of used slots
  protected final Comparator cmp_;  // for ordering

  /**
   * Create a Heap with the given initial capacity and comparator
   * @exception IllegalArgumentException if capacity less or equal to zero
   **/

  public Heap(int capacity, Comparator cmp) 
   throws IllegalArgumentException {
    if (capacity <= 0) throw new IllegalArgumentException();
    nodes_ = new Object[capacity];
    cmp_ = cmp;
  }

  /**
   * Create a Heap with the given capacity,

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/IncludeXMLFilter.java
 =======================================================================
package org.exist.util;

import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

/**
 *  Description of the Class
 *
 *@author     wolf
 *created    17. Juni 2002
 */
public class IncludeXMLFilter extends DefaultHandler {

    private ContentHandler handler;


    /**
     *  Constructor for the WhitespaceFilter object
     *
     *@param  handler  Description of the Parameter
     */
    public IncludeXMLFilter( ContentHandler handler ) {
        super();
        this.handler = handler;
    }

    public void characters( char ch[], int start, int length ) throws SAXException {
        handler.characters( ch, start, length );
    }

    public void endDocument() throws SAXException {
        // remove
    }

    public void endElement( String namespaceURI, String localName, String qName )
         throws SAXException {
        if ( localName == null || localName.length() == 0 )
            localName = qName;
        handler.endElement( namespaceURI, localName, qName );
    }

    public void endPrefixMapping( String prefix ) throws SAXException {
        handler.endPrefixMapping( prefix );
    }

    public void ignorableWhitespace( char[] ch, int start, int length )
         throws SAXException {
        handler.characters( ch, start, length );

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/LockException.java
 =======================================================================
package org.exist.util;

/**
 * @author wolf
 *
 * To change this generated comment edit the template variable "typecomment":
 * Window>Preferences>Java>Templates.
 * To enable and disable the creation of type comments go to
 * Window>Preferences>Java>Code Generation.
 */
public class LockException extends Exception {

    
	/**
	 * Constructor for LockException.
	 */
	public LockException() {
		super();
	}

	/**
	 * Constructor for LockException.
	 * @param s
	 */
	public LockException(String s) {
		super(s);
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/MimeType.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-04 The eXist Project
 *  http://exist-db.org
 *  
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *  
 *  $Id: MimeType.java 9433 2009-07-21 07:15:52Z gev $
 */
package org.exist.util;


public class MimeType {
    
    public final static int XML = 0;
    public final static int BINARY = 1;
    
    public final static MimeType BINARY_TYPE =
        new MimeType("application/octet-stream", BINARY);
    
    public final static MimeType XML_TYPE =
        new MimeType("text/xml", XML);
    //public final static MimeType XML_APPLICATION_TYPE =
    //    new MimeType("application/xml", XML);
    public final static MimeType XML_CONTENT_TYPE =
        new MimeType("text/xml; charset=UTF-8", XML);
    public final static MimeType XSL_TYPE =
        new MimeType("text/xsl", XML);
    public final static MimeType XSLT_TYPE =
        new MimeType("application/xslt+xml", XML);
    public final static MimeType XQUERY_TYPE =
        new MimeType("application/xquery", BINARY);
    public final static MimeType XPROC_TYPE =
        new MimeType("application/xml+xproc", XML);
    public final static MimeType CSS_TYPE =
        new MimeType("text/css", BINARY);
    public final static MimeType HTML_TYPE =
        new MimeType("text/html", BINARY);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/OrderedLinkedList.java
 =======================================================================
package org.exist.util;

/* eXist Native XML Database
 * Copyright (C) 2001,  Wolfgang M. Meier (meier@ifs.tu-darmstadt.de)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 * $Id: OrderedLinkedList.java 519 2004-08-11 12:47:03Z wolfgang_m $
 */

import java.util.Iterator;

import org.apache.log4j.Logger;

public class OrderedLinkedList {

	private final static Logger LOG = Logger.getLogger(OrderedLinkedList.class);
	
	public abstract static class Node {
		Node next = null;
		Node prev = null;

		public Node() {
		}
        
		public Node getNextNode() { return next; }
		public Node getPrevNode() { return prev; }

		public abstract int compareTo(Node other);
		public abstract boolean equals(Node other);
	}

	public static class SimpleNode extends Node {
		Comparable data;
		
		public SimpleNode(Comparable data) {
			this.data = data;
		}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/PorterStemmer.java
 =======================================================================
/*
   Porter stemmer in Java. The original paper is in

       Porter, 1980, An algorithm for suffix stripping, Program, Vol. 14,
       no. 3, pp 130-137,

   See also http://www.muscat.com/~martin/stem.html

   Bug 1 (reported by Gonzalo Parra 16/10/99) fixed as marked below.
   Tthe words 'aed', 'eed', 'oed' leave k at 'a' for step 3, and b[k-1]
   is then out outside the bounds of b.

   Similarly,

   Bug 2 (reported by Steve Dyrdahl 22/2/00) fixed as marked below.
   'ion' by itself leaves j = -1 in the test for 'ion' in step 5, and
   b[j] is then outside the bounds of b.

   Release 3.

   [ This version is derived from Release 3, modified by Brian Goetz to 
     optimize for fewer object creations.  ]

*/

package org.exist.util;


/**
 *
 * Stemmer, implementing the Porter Stemming Algorithm
 *
 * The Stemmer class transforms a word into its root form.  The input
 * word can be provided a character at time (by calling add()), or at once
 * by calling one of the various stem(something) methods.  
 */

public class PorterStemmer
{   
  private char[] b;
  private int i;
  /* offset into b */ private int j;
  private int k;
  private int k0;
  private boolean dirty = false;
  private static final int INC = 50; /* unit of size whereby b is increased */
  private static final int EXTRA = 1;

  public PorterStemmer() {  
    b = new char[INC];

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ProgressBar.java
 =======================================================================

package org.exist.util;

/* eXist xml document repository and xpath implementation
 * Copyright (C) 2001,  Wolfgang Meier (meier@ifs.tu-darmstadt.de)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

public class ProgressBar {

	protected String mMessage;
	protected double mMax = 1;
	protected int mPosition = 0;

	public ProgressBar(String message) {
		mMessage = message;
	}

	public ProgressBar(String message, double max) {
		mMessage = message;
		mMax = max;
	}

	public void set(double value, double max) {
		mMax = max;
		this.set(value);
	}

	public void set(double value) {
		int percent = (int)((value / mMax) * 100);
		if(percent % 2 > 0)
			return;
		int pos = percent / 2;
		if(pos == mPosition)
			return;
		StringBuffer buf = new StringBuffer();
		buf.append(mMessage);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ProgressIndicator.java
 =======================================================================

package org.exist.util;

/*
 *  eXist Native XML Database
 *  Copyright (C) 2001,  Wolfgang Meier (meier@ifs.tu-darmstadt.de)
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/**
 * This class is used to report information about the parsing progress
 * to registered observers.
 *  
 * @author wolf
 */
public class ProgressIndicator {

    protected float max_ = 1;
    protected float value_ = 0;
	protected int step_ = 1;

	public ProgressIndicator( float max, int step) {
		max_ = max;
		step_ = step;
	}
	
    public ProgressIndicator( float max ) {
        max_ = max;
    }


    /**
     *  Sets the value attribute of the ProgressIndicator object
     *
     *@param  value  The new value value
     */
    public void setValue( float value ) {

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ProgressListener.java
 =======================================================================

package org.exist.util;

/* eXist xml document repository and xpath implementation
 * Copyright (C) 2001,  Wolfgang Meier (meier@ifs.tu-darmstadt.de)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

import java.util.EventListener;

public interface ProgressListener extends EventListener {
	public void update(int percent, int max);
}
	

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/Range.java
 =======================================================================
/*
 * Created on Sep 8, 2003
 */
package org.exist.util;

public class Range {
	
	private long start_;
	private long end_;
	
	public Range(long start, long end) {
		start_ = start;
		end_ = end;
	}
	
	public long getStart() {
		return start_;
	}
	
	public long getEnd() {
		return end_;
	}
	
	public boolean inRange(long value) {
		return value >= start_ && value <= end_;
	}
	
	public int getDistance() {
		return (int)(end_ - start_) + 1;
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ReadOnlyException.java
 =======================================================================
package org.exist.util;


public class ReadOnlyException extends Exception {

	/**
	 * Constructor for ReadOnlyException.
	 */
	public ReadOnlyException() {
		super();
	}

	/**
	 * Constructor for ReadOnlyException.
	 * @param message
	 */
	public ReadOnlyException(String message) {
		super(message);
	}

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/SelectorUtils.java
 =======================================================================
/*
 * The Apache Software License, Version 1.1
 *
 * Copyright (c) 2002 The Apache Software Foundation.  All rights
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution, if
 *    any, must include the following acknowlegement:
 *       "This product includes software developed by the
 *        Apache Software Foundation (http://www.apache.org/)."
 *    Alternately, this acknowlegement may appear in the software itself,
 *    if and wherever such third-party acknowlegements normally appear.
 *
 * 4. The names "The Jakarta Project", "Ant", and "Apache Software
 *    Foundation" must not be used to endorse or promote products derived
 *    from this software without prior written permission. For written
 *    permission, please contact apache@apache.org.
 *
 * 5. Products derived from this software may not be called "Apache"
 *    nor may "Apache" appear in their names without prior written
 *    permission of the Apache Group.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * ====================================================================
 *
 * This software consists of voluntary contributions made by many
 * individuals on behalf of the Apache Software Foundation.  For more

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/SwapVals.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-05 The eXist Project
 *  http://exist.sourceforge.net
 *  
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *  
 *  $Id: SwapVals.java 9642 2009-08-03 23:05:37Z jmfg $
 */
package org.exist.util;

import java.util.List;

/**
	This class only contains static
	methods which help when the values
	of two positions in a array or
	list-like structure must be swapped.
	
	Based on previous implementations
	found in eXist FastQSort original
	code and internet
*/
public final class SwapVals {
	public final static void swap(long a[], int i, int j)
	//-----------------------------------------------
	{
		long T = a[i];
		a[i] = a[j];
		a[j] = T;
	}

	public final static void swap(int a[], int i, int j)
	//-----------------------------------------------
	{
		int T = a[i];
		a[i] = a[j];
		a[j] = T;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/SyntaxException.java
 =======================================================================

/*
 *  eXist xml document repository and xpath implementation
 *  Copyright (C) 2000,  Wolfgang M. Meier (meier@ifs.tu-darmstadt.de)
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Library General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  You should have received a copy of the GNU Library General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.exist.util;

/**
 *  Description of the Class
 *
 *@author     Wolfgang Meier <meier@ifs.tu-darmstadt.de>
 *created    24. Juni 2002
 */
public class SyntaxException extends Exception {

    /**  Constructor for the PermissionDeniedException object */
    public SyntaxException() {
        super();
    }


    /**
     *  Constructor for the PermissionDeniedException object
     *
     *@param  message  Description of the Parameter
     */
    public SyntaxException( String message ) {
        super( message );
    }
}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/UTF8.java
 =======================================================================
/* 
 *  `gnu.iou' I/O buffers and utilities.
 *  Copyright (C) 1998, 1999, 2000, 2001, 2002 John Pritchard.
 *
 *  This program is free software; you can redistribute it or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation; either version 2.1 of
 *  the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this program; if not, write to the Free
 *  Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
 *  02111-1307 USA
 */

package org.exist.util;

/**
 * This class contains two static tools for doing UTF-8 encoding and
 * decoding.  
 *
 * <p> UTF-8 is ASCII- transparent.  It supports character sets
 * requiring more than the seven bit ASCII base range of UTF-8,
 * including Unicode, ISO-8859, ISO-10646, etc..
 * 
 * <p> We do not use an ISO UCS code signature, and we do not use a
 * Java Data I/O- style strlen prefix.  
 *
 * @author John Pritchard (john@syntelos.org)
 */
public class UTF8 {

	/**
	 * Encode string in UTF-8.
	 */
	public final static byte[] encode(char[] str) {

		if (null == str || 0 >= str.length)
			return null;

		return encode(str, 0, str.length, null, 0);
	}

	/**
	 * Encode string in UTF-8.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/XMLChar.java
 =======================================================================
package org.exist.util;

// Copied without change from Xerces module org.apache.xerces.util.XMLChar, version 2.5.0

/*
 * The Apache Software License, Version 1.1
 *
 *
 * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 *    if any, must include the following acknowledgment:
 *       "This product includes software developed by the
 *        Apache Software Foundation (http://www.apache.org/)."
 *    Alternately, this acknowledgment may appear in the software itself,
 *    if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The names "Xerces" and "Apache Software Foundation" must
 *    not be used to endorse or promote products derived from this
 *    software without prior written permission. For written
 *    permission, please contact apache@apache.org.
 *
 * 5. Products derived from this software may not be called "Apache",
 *    nor may "Apache" appear in their name, without prior written
 *    permission of the Apache Software Foundation.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/ZipEntryInputSource.java
 =======================================================================
package org.exist.util;

import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

/**
 * This class extends InputSource to be able to deal with
 * ZipEntry objects from ZIP compressed files. Its main
 * feature is that each time {@link #getByteStream()} is
 * called, a new uncompressed stream is created from the
 * ZipEntry in the compressed ZIP file.
 * This is very useful for eXist, which works in two steps:
 * validation and insertion.
 * 
 * @author jmfernandez
 *
 */
public final class ZipEntryInputSource
	extends EXistInputSource
{
	private ZipEntry zipEntry;
	private ZipFile zipFile;
	
	public ZipEntryInputSource()
	{
		super();
		zipEntry=null;
		zipFile=null;
	}
	
	public ZipEntryInputSource(ZipFile zipFile,ZipEntry zipEntry)
	{
		this();
		setZipEntry(zipFile,zipEntry);
	}
	
	public void setZipEntry(ZipFile zipFile,ZipEntry zipEntry)
	{
		this.zipFile=zipFile;
		this.zipEntry=zipEntry;
	}
	
	public InputStream getByteStream() {
		InputStream retval=null;
		if(zipFile!=null && zipEntry!=null) {
			try {
				retval=zipFile.getInputStream(zipEntry);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/util/mime-types.xml
 =======================================================================
<?xml version="1.0" encoding="UTF-8"?>

<!--
    ======================================================
    This file lists all mime types known to eXist.      

    When storing a document with the Java client, the type 
    of the resource is looked up here. A resource will be 
    stored as an XML or a binary resource, depending on the 
    "type" attribute of the corresponding mime-type entry.

    In MimeTable.java mime-types.xml is first searched in 
    directory pointed by property "home.exist", 
    and then as a classpath resource in org/exist/util .
    ======================================================= 

    $Id: mime-types.xml.tmpl 10172 2009-10-01 08:06:00Z shabanovd $
-->

<mime-types xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="schema/mime-types.xsd">

    <!-- Mime types stored as XML -->
    <mime-type name="text/xml" type="xml">
        <description>XML document</description>
        <extensions>.xml,.xsd,.rng,.mods,.xmp,.xmi,.xconf,.xmap,.xsp,.wsdl,.x3d,.rdf,.owl,.dbx,.tei,.xces,.ead,.xqx,.xform,.gml,.fo,.nvdl,.sch,.imdi</extensions>
    </mime-type>
    <mime-type name="application/xslt+xml" type="xml">
        <description>XSL document</description>
        <extensions>.xsl,.xslt</extensions>
    </mime-type>
    <mime-type name="application/xml" type="xml">
        <description>XML document</description>
        <extensions>.xml</extensions>
    </mime-type>
    <mime-type name="application/rdf+xml" type="xml">
        <description>RDF document</description>
        <extensions>.rdf,.rdfs</extensions>
    </mime-type>
    <mime-type name="application/xhtml+xml" type="xml">
        <description>XHTML document</description>
        <extensions>.xhtml,.xht</extensions>
    </mime-type>
    <mime-type name="text/html" type="xml">
        <description>HTML document</description>
        <extensions>.html,.htm</extensions>
    </mime-type>
    <mime-type name="application/atom+xml" type="xml">
        <description>Atom Feed Document</description>
        <extensions>.atom</extensions>
    </mime-type>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/AbstractRemoteResource.java
 =======================================================================
package org.exist.xmldb;

import imc.disxmldb.security.Permission;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.zip.DataFormatException;
import java.util.zip.Inflater;

import org.apache.xmlrpc.XmlRpcException;
import org.apache.commons.io.output.ByteArrayOutputStream;
import org.exist.util.EXistInputSource;
import org.exist.util.EXistOutputKeys;

//import org.exist.security.Permission;
//import org.exist.storage.serializers.EXistOutputKeys;
//import org.exist.util.EXistInputSource;
import org.xml.sax.InputSource;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.XMLDBException;

public abstract class AbstractRemoteResource
	implements EXistResource, ExtendedResource, Resource
{
	protected XmldbURI path = null ;
	protected String mimeType=null;
	protected RemoteCollection parent;
	protected File file=null;
	protected File contentFile=null;
	protected InputSource inputSource = null;
	protected boolean isLocal=false;
	protected long contentLen = 0L;
	protected Permission permissions = null;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/CollectionImpl.java
 =======================================================================
/*
 * eXist Open Source Native XML Database
 *   
 * Copyright (C) 2001-04 Wolfgang M. Meier wolfgang@exist-db.org
 * 
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 * for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 * $Id: CollectionImpl.java 8339 2008-11-30 17:36:23Z wolfgang_m $
 */
package org.exist.xmldb;

import java.util.Date;

import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.XMLDBException;

/**
 * This interface extends org.xmldb.api.base.Collection with extensions specific to eXist.
 */
public interface CollectionImpl extends Collection {

    public boolean isRemoteCollection() throws XMLDBException;
    
	/**
	 * Returns the time of creation of the collection.
	 */
	Date getCreationTime() throws XMLDBException;

	/* Alternative methods, especially to be used from jsp */
	public String[] getChildCollections() throws XMLDBException;
	
	public String[] getResources() throws XMLDBException;
	
	public void storeResource(Resource res, Date a, Date b) throws XMLDBException;
	
	public XmldbURI getPathURI();
	

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/CollectionManagementServiceImpl.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-04 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 *  $Id: CollectionManagementServiceImpl.java 3457 2006-05-07 14:46:21Z wolfgang_m $
 */
package org.exist.xmldb;

import java.util.Date;

import org.xmldb.api.base.Collection;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.CollectionManagementService;


/**
 * Extends the {@link org.xmldb.api.modules.CollectionManagementService}
 * interface with extensions specific to eXist, in particular moving and copying
 * collections and resources.
 * 
 * @author wolf
 */
public interface CollectionManagementServiceImpl extends
        CollectionManagementService {

	/**
	 * @deprecated Use XmldbURI version instead
	 */
    public void move(String collection, String destination, String newName)
    throws XMLDBException;
    
	/**
	 * @deprecated Use XmldbURI version instead
	 */

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/DatabaseImpl.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist.sourceforge.net
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; er version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *  
 *  $Id:
 */
package org.exist.xmldb;

import org.apache.log4j.Logger;
import org.apache.xmlrpc.client.XmlRpcClient;
import org.apache.xmlrpc.client.XmlRpcClientConfigImpl;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Database;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.security.User;

import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.HashMap;

/**
 * The XMLDB driver class for eXist. This driver manages two different
 * internal implementations. The first communicates with a remote
 * database using the XMLRPC protocol. The second has direct access
 * to an embedded database instance running in the same virtual machine.
 * The driver chooses an implementation depending on the XML:DB URI passed
 * to getCollection().
 * 
 * When running in embedded mode, the driver can create a new database
 * instance if none is available yet. It will do so if the property
 * "create-database" is set to "true" or if there is a system property
 * "exist.initdb" with value "true".

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/DatabaseInstanceManager.java
 =======================================================================
package org.exist.xmldb;

import org.xmldb.api.base.Service;
import org.xmldb.api.base.XMLDBException;

/**
 * A service to manage the database instance. The service defines
 * a single method shutdown() to shut down the database instance
 * used by the current driver.
 * 
 */
public interface DatabaseInstanceManager extends Service {
	
	/**
	 * Immediately shutdown the current database instance.
	 * This current user should be a member of the "dba" group
	 * or an exception will be thrown.
	 * 
	 * @throws XMLDBException
	 */
	public void shutdown() throws XMLDBException;
	
	/**
	 * Shutdown the current database instance after the specified
	 * delay (in milliseconds).
	 * This current user should be a member of the "dba" group
	 * or an exception will be thrown.
	 * 
	 * @throws XMLDBException
	 */
	public void shutdown(long delay) throws XMLDBException;

    public boolean enterServiceMode() throws XMLDBException;

    public void exitServiceMode() throws XMLDBException;
    
   // public DatabaseStatus getStatus() throws XMLDBException;
	
	/**
	 * Returns true if the database instance is running local, i.e. in
	 * the same thread as this service.
	 *  
	 * @return true if the database instance is running local
	 */
	public boolean isLocalInstance();
	
	/**
	 * Returns true if XACML is enabled for the database instance. 
	 *
	 * @return True if XACML is enabled

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/EXistResource.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-06 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 *  $Id: EXistResource.java 6320 2007-08-01 18:01:06Z ellefj $
 */
package org.exist.xmldb;

import imc.disxmldb.security.Permission;

import java.util.Date;

//import org.exist.security.Permission;
import org.w3c.dom.DocumentType;
import org.xml.sax.ext.LexicalHandler;
import org.xmldb.api.base.XMLDBException;

/**
 * Defines additional methods implemented by XML and binary 
 * resources.
 * 
 * @author wolf
 *Modified by {xiafan68}@gmail.com
 */
public interface EXistResource {

	Date getCreationTime() throws XMLDBException;
	
	Date getLastModificationTime() throws XMLDBException;
	
	Permission getPermissions() throws XMLDBException;
	
	int getContentLength() throws XMLDBException;
	

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/ExtendedResource.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-08 The eXist Project
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * $Id$
 */

package org.exist.xmldb;

import java.io.File;
import java.io.InputStream;
import java.io.OutputStream;

import org.xmldb.api.base.XMLDBException;

/**
 * An extension to BinaryResource interface, which adds the
 * common methods needed by LocalBinaryResource and RemoteBinaryResource,
 * so they can be streamlined.
 * @author jmfernandez
 *
 */
public interface ExtendedResource
{
	/**
	 * It returns an object representing the content, in the representation
	 * which needs less memory.
	 */
	public Object getExtendedContent()  throws XMLDBException;
	/**
	 * It returns an stream to the content, whichever it is its origin
	 */
	public InputStream getStreamContent()  throws XMLDBException;
	/**
	 * It returns the length of the content, whichever it is its origin

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/FullXmldbURI.java
 =======================================================================
/*
 * eXist Open Source Native XML Database
 * Copyright (C) 2006-2007 The eXist Project
 * http://exist-db.org
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *  
 *  $Id: FullXmldbURI.java 9474 2009-07-23 20:12:38Z dizzzz $
 */
package org.exist.xmldb;

import java.net.URI;
import java.net.URISyntaxException;

public class FullXmldbURI extends XmldbURI {

	//this will never have xmldb:
	private URI wrappedURI;	
	private String context;      
	private String apiName;
	
	/**
	 * Contructs an XmldbURI from given URI.
	 * The provided URI must have the XMLDB_SCHEME ("xmldb")
	 * @param xmldbURI A string 
	 * @throws URISyntaxException If the given string is not a valid xmldb URI.
	 */
	protected FullXmldbURI(URI xmldbURI) throws URISyntaxException {
    	super(xmldbURI);
	}
    /** Feeds private members
     * @throws URISyntaxException
     */
	protected void parseURI(URI xmldbURI, boolean hadXmldbPrefix) throws URISyntaxException {
		wrappedURI = xmldbURI;
		if(hadXmldbPrefix) {
			if (wrappedURI.getScheme() == null)   
				//Put the "right" URI in the message ;-)

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/MapResourceSet.java
 =======================================================================
// $Header$

package org.exist.xmldb;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Vector;

import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;

/**
 *  Implementation of ResourceSet (a container of Resource objects), using internally both a Map and a Vector.
 *  The Map is keyed by the Id of each resource.
 * 
 *@author     Jean-Marc Vanel (2 April 2003)
 */
public class MapResourceSet implements ResourceSet 
{
     protected Map resources = new HashMap();
	protected Vector resourcesVector = new Vector();

    public MapResourceSet() {
    }

    /**
     *  Constructor 
     */
    public MapResourceSet(Map resources) {
        this.resources = resources;
		Iterator iter = resources.values().iterator();
		while ( iter.hasNext() ) {
			Resource res = (Resource)iter.next();
			resourcesVector.add(res);
		}
	}

    /**
     *  Constructor 
     */
    public MapResourceSet(ResourceSet rs) throws XMLDBException {
        for ( int i=0; i<rs.getSize(); i++ ){
        	Resource res = rs.getResource( i );
            resources.put(res.getId(), res);
			resourcesVector.add( rs.getResource( i ) );           
        }

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteBinaryResource.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-06 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 *  $Id: RemoteBinaryResource.java 8726 2009-03-11 11:45:23Z jmfg $
 */
package org.exist.xmldb;

import java.io.InputStream;
import java.io.OutputStream;

import org.exist.util.EXistInputSource;
import org.exist.util.MimeType;
import org.w3c.dom.DocumentType;
import org.xml.sax.ext.LexicalHandler;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.BinaryResource;

/**
 * 
 * @author wolf
 *
 */
public class RemoteBinaryResource
	extends AbstractRemoteResource
	implements BinaryResource
{
	private byte[] data = null;
	
	public RemoteBinaryResource(RemoteCollection parent, XmldbURI documentName) throws XMLDBException {
		super(parent,documentName);
 		mimeType = MimeType.BINARY_TYPE.getName();
 	}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteCollection.java
 =======================================================================

/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001 Wolfgang M. Meier
 *  meier@ifs.tu-darmstadt.de
 *  http://exist.sourceforge.net
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 *  $Id: RemoteCollection.java 9434 2009-07-21 07:17:40Z gev $
 */
package org.exist.xmldb;

import org.apache.xmlrpc.XmlRpcException;
import org.apache.xmlrpc.client.XmlRpcClient;
//import org.exist.security.Permission;
//import org.exist.security.PermissionFactory;
import org.exist.util.Compressor;
import org.exist.util.EXistInputSource;
//import org.exist.validation.service.RemoteValidationService;
import org.xml.sax.InputSource;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.Service;
import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.security.Permission;
import imc.disxmldb.security.PermissionFactory;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.util.ArrayList;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteCollectionManagementService.java
 =======================================================================
/*
 * eXist Open Source Native XML Database
 * Copyright (C) 2001-2006 The eXist team
 * http://exist-db.org
 *  
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *  
 *  $Id: RemoteCollectionManagementService.java 9006 2009-05-12 12:51:31Z dizzzz $
 */

package org.exist.xmldb;

import org.apache.xmlrpc.XmlRpcException;
import org.apache.xmlrpc.client.XmlRpcClient;
import org.w3c.dom.Document;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.XMLDBException;

import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;


public class RemoteCollectionManagementService implements CollectionManagementServiceImpl {

    protected XmlRpcClient client;
    protected RemoteCollection parent = null;

    public RemoteCollectionManagementService( RemoteCollection parent, XmlRpcClient client ) {
        this.client = client;
        this.parent = parent;
    }

	/**
	 * @deprecated Use XmldbURI version instead
	 */

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteCompiledExpression.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-06 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 *  $Id: RemoteCompiledExpression.java 2436 2006-01-07 21:47:15Z brihaye $
 */
package org.exist.xmldb;

import org.xmldb.api.base.CompiledExpression;
/**
 * This is just a placeholder for an expression that has been compiled
 * on the server. It only stores the xquery string.
 * 
 * @author wolf
 *
 */
public class RemoteCompiledExpression implements CompiledExpression {

	private String xquery;
	
	public RemoteCompiledExpression(String xquery) {
		this.xquery = xquery;
	}

	/* (non-Javadoc)
	 * @see org.exist.xmldb.CompiledExpression#reset()
	 */
	public void reset() {
	}

	public String getQuery() {
		return xquery;
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteDatabaseInstanceManager.java
 =======================================================================
package org.exist.xmldb;

import org.apache.xmlrpc.XmlRpcException;
import org.apache.xmlrpc.client.XmlRpcClient;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.XMLDBException;

import java.util.ArrayList;
import java.util.List;

public class RemoteDatabaseInstanceManager implements DatabaseInstanceManager {

	protected XmlRpcClient client;
	
	/**
	 * Constructor for DatabaseInstanceManagerImpl.
	 */
	public RemoteDatabaseInstanceManager(XmlRpcClient client) {
		this.client = client;
	}

	/* (non-Javadoc)
	 * @see org.exist.xmldb.DatabaseInstanceManager#shutdown()
	 */
	public void shutdown() throws XMLDBException {
		shutdown(0);		
	}
	
	/**
	 * @see org.exist.xmldb.DatabaseInstanceManager#shutdown()
	 */
	public void shutdown(long delay) throws XMLDBException {
        List params = new ArrayList(1);
		if(delay > 0)
			params.add(new Long(delay));
		try {
			client.execute("shutdown", params);
		} catch(XmlRpcException e) {
			throw new XMLDBException(ErrorCodes.VENDOR_ERROR, 
				"shutdown failed",
				e);
		}
    }

    public boolean enterServiceMode() throws XMLDBException {
		try {
			client.execute("enterServiceMode", new ArrayList(1));
		} catch(XmlRpcException e) {
			throw new XMLDBException(ErrorCodes.VENDOR_ERROR,

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteResourceIterator.java
 =======================================================================
 /*
 * eXist Open Source Native XML Database
 * Copyright (C) 2001 Wolfgang M. Meier
 * meier@ifs.tu-darmstadt.de
 * http://exist.sourceforge.net
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
package org.exist.xmldb;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Vector;

import org.apache.xmlrpc.XmlRpcException;
import org.apache.xmlrpc.client.XmlRpcClient;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XMLResource;

public class RemoteResourceIterator implements ResourceIterator {

	protected XmlRpcClient rpcClient;
	protected RemoteCollection collection;
	protected Vector resources;
	protected int pos = 0 ;
	protected int indentXML;
	protected String encoding = "UTF-8";

	public RemoteResourceIterator(RemoteCollection col, Vector resources, 
								int indentXML, String encoding) {
		this.resources = resources;
		this.collection = col;
		this.indentXML = indentXML;
		this.encoding = encoding;
	}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteResourceSet.java
 =======================================================================

package org.exist.xmldb;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URISyntaxException;
import java.util.Properties;
import java.util.List;
import java.util.Map;
import java.util.ArrayList;
import java.util.zip.DataFormatException;
import java.util.zip.Inflater;

import javax.xml.transform.OutputKeys;

import org.apache.log4j.Logger;
import org.apache.xmlrpc.XmlRpcException;
import org.exist.util.EXistOutputKeys;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;

public class RemoteResourceSet implements ResourceSet {

    protected RemoteCollection collection;
    protected int handle = -1;
    protected int hash = -1;
    protected List resources;
    protected Properties outputProperties;
    
    private static Logger LOG = Logger.getLogger(RemoteResourceSet.class.getName());

    public RemoteResourceSet(RemoteCollection col, Properties properties, Object[] resources, int handle, int hash) {
        this.handle = handle;
        this.hash = hash;
        this.resources = new ArrayList(resources.length);
        for (int i = 0; i < resources.length; i++) {
            this.resources.add(resources[i]);
        }
        this.collection = col;
        this.outputProperties = properties;
    }

    public void addResource( Resource resource ) {
        resources.add( resource );

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteUserManagementService.java
 =======================================================================
package org.exist.xmldb;

import org.apache.xmlrpc.XmlRpcException;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.security.Permission;
import imc.disxmldb.security.UnixStylePermission;
import imc.disxmldb.security.User;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;


/*************************************************
 * Modified by {Marco.Tampucci, Massimo.Martinelli} @isti.cnr.it
**************************************/

public class RemoteUserManagementService implements UserManagementService {

	private RemoteCollection parent;

	public RemoteUserManagementService(RemoteCollection collection) {
		parent = collection;
	}

	/**
	 *  Add a new user account
	 *
	 *@param  user                The user to be added
	 *@exception  XMLDBException  Description of the Exception
	 */
	public void addUser(User user) throws XMLDBException {
		try {
            List params = new ArrayList(12);
			params.add(user.getName());
			params.add(user.getPassword() == null ? "" : user.getPassword());
			String[] gl = user.getGroups();
			params.add(gl);
			parent.getClient().execute("setUser", params);
		} catch (XmlRpcException e) {
			throw new XMLDBException(ErrorCodes.VENDOR_ERROR, e.getMessage(), e);
		}
    }

	/**
	 * Change permissions for a resource.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteXMLResource.java
 =======================================================================
/*
 * eXist Open Source Native XML Database
 * Copyright (C) 2003-2007 The eXist Project
 * http://exist-db.org
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *  
 *  $Id: RemoteXMLResource.java 9250 2009-06-29 19:05:57Z dizzzz $
 */
package org.exist.xmldb;

import org.apache.log4j.Logger;
import org.apache.xmlrpc.XmlRpcException;

import org.exist.util.MimeType;

import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

import org.xml.sax.ContentHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.LexicalHandler;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XMLResource;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteXPathQueryService.java
 =======================================================================
/*
 * eXist Open Source Native XML Database
 * Copyright (C) 2003-2007 The eXist Project
 * http://exist-db.org
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *  
 *  $Id: RemoteXPathQueryService.java 9908 2009-08-26 17:15:29Z wolfgang_m $
 */
package org.exist.xmldb;

import org.apache.xmlrpc.XmlRpcException;
//import org.exist.source.Source;
import org.exist.xmlrpc.RpcAPI;
import org.exist.xquery.XPathException;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.CompiledExpression;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XMLResource;

import imc.disxmldb.config.SysConfig;

import java.io.IOException;
import java.io.Writer;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Properties;

public class RemoteXPathQueryService implements XPathQueryServiceImpl, XQueryService {

    protected RemoteCollection collection;
	protected HashMap namespaceMappings = new HashMap(5);
	protected HashMap variableDecls = new HashMap();

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/RemoteXUpdateQueryService.java
 =======================================================================
/*
 * RemoteXUpdateQueryService.java - May 2, 2003
 * 
 * @author wolf
 */
package org.exist.xmldb;

import imc.disxmldb.config.SysConfig;

import java.io.UnsupportedEncodingException;
import java.util.Vector;

import org.apache.log4j.Logger;
import org.apache.xmlrpc.XmlRpcException;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XUpdateQueryService;

public class RemoteXUpdateQueryService implements XUpdateQueryService {

	private final static Logger LOG = Logger.getLogger(RemoteXUpdateQueryService.class);

	private RemoteCollection parent;

	/**
	 * 
	 */
	public RemoteXUpdateQueryService(RemoteCollection parent) {
		this.parent = parent;
	}

	/* (non-Javadoc)
	 * @see org.xmldb.api.modules.XUpdateQueryService#update(java.lang.String)
	 */
	public long update(String commands) throws XMLDBException {
		LOG.debug("processing xupdate:\n" + commands);
		Vector params = new Vector();
		byte[] xupdateData;
		try {
			xupdateData = commands.getBytes(SysConfig.ENCODING);
		} catch (UnsupportedEncodingException e) {
			LOG.warn(e);
			xupdateData = commands.getBytes();
		}
		params.addElement(parent.getPath());
		params.addElement(xupdateData);
		try {
			Integer mods = (Integer) parent.getClient().execute("xupdate", params);
			LOG.debug("processed " + mods + " modifications");

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/ResourceSetHelper.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-2005,  Wolfgang M. Meier (meier@ifs.tu-darmstadt.de)
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Library General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  You should have received a copy of the GNU Library General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 *  $Id:
 */
package org.exist.xmldb;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

import org.xmldb.api.base.Resource;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;

/**
 * @author jmv
 *
 */
public class ResourceSetHelper {
	public static ResourceSet intersection(ResourceSet s1, ResourceSet s2) throws XMLDBException {
		Map m1 = new MapResourceSet(s1).getResourcesMap();
		Map m2 = new MapResourceSet(s2).getResourcesMap();
		Set set1 = m1.keySet();
		Set set2 = m2.keySet();
		set1.retainAll(set2);
		Map m = new HashMap();
		Iterator iter = set1.iterator();
		while ( iter.hasNext() ) {
          String key = (String)iter.next();
          Resource resource = (Resource)m1.get(key);
          m.put(key, resource);
		}
		MapResourceSet res = new MapResourceSet(m); 

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/ShutdownListener.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001,  Wolfgang M. Meier (meier@ifs.tu-darmstadt.de)
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Library General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  You should have received a copy of the GNU Library General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 *  $Id:
 */
package org.exist.xmldb;

/**
 * Instances of this class can be registered with the BrokerPool to get informed when the
 * database shuts down. The shutdown method is called after the database instance has
 * been shut down.
 * 
 * @author wolf
 */
public interface ShutdownListener {
	
	/**
	 * The database instance identified by dbname has been shut down.
	 * 
	 * @param dbname The name of the database instance.
	 * @param remainingInstances Number of remaining database instances.
	 */
	public void shutdown(String dbname, int remainingInstances);
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/UserManagementService.java
 =======================================================================

package org.exist.xmldb;
import imc.disxmldb.security.Permission;
import imc.disxmldb.security.User;

import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.Service;
import org.xmldb.api.base.XMLDBException;

/**
 *  An eXist-specific service which provides methods to manage users and
 *  permissions.
 *
 *@author     Wolfgang Meier <meier@ifs.tu-darmstadt.de>
 * Modified by {Marco.Tampucci, Massimo.Martinelli} @isti.cnr.it
 */
public interface UserManagementService extends Service {

    /**
     *  Get the name of this service
     *
     *@return    The name
     */
    public String getName();


    /**
     *  Get the version of this service
     *
     *@return    The version value
     */
    public String getVersion();

	/**
	 * Set permissions for the specified collection.
	 * 
	 * @param child
	 * @param perm
	 * @throws XMLDBException
	 */
	public void setPermissions(Collection child, Permission perm) throws XMLDBException;
	
	/**
	 * Set permissions for the specified resource.
	 * 
	 * @param resource
	 * @param perm
	 * @throws XMLDBException
	 */

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/XPathQueryServiceImpl.java
 =======================================================================
package org.exist.xmldb;

import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XMLResource;
import org.xmldb.api.modules.XPathQueryService;

/**
 * Extends {@link org.xmldb.api.modules.XPathQueryService} by additional
 * methods specific to eXist.
 * 
 * @author Wolfgang <wolfgang@exist-db.org>
 *
 */
public interface XPathQueryServiceImpl extends XPathQueryService {

	/**
	 * Process an XPath query based on the result of a previous query.
	 * The XMLResource contains the result received from a previous
	 * query.
	 * 
	 * @param res an XMLResource as obtained from a previous query.
	 * @param query the XPath query
	 */
    public ResourceSet query( XMLResource res, String query )
    throws XMLDBException;
    
    /**
     * Process an XPath query based on the result of a previous query and sort the
     * results using the second XPath expression. The XMLResource contains 
     * the result received from a previous query.
	 * 
     * @param res an XMLResource as obtained from a previous query
     * @param query the XPath query
     * @param sortExpr another XPath expression, which is executed relative to
     * the results of the primary expression. The result of applying sortExpr is converted
     * to a string value, which is then used to sort the results. 
     * @throws XMLDBException
     */
    public ResourceSet query( XMLResource res, String query, String sortExpr)
    throws XMLDBException;
    
    /**
     * Process an XPath query and sort the results by applying a second XPath expression
     * to each of the search results. The result of applying the sort expression is converted
     * into a string, which is then used to sort the set of results.
     * 
     * @param query the XPath query
     * @param sortExpr another XPath expression, which is executed relative to the
     * results of the primary expression.

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/XQueryService.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-06 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist.sourceforge.net
 *  
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *  
 *  $Id: XQueryService.java 6320 2007-08-01 18:01:06Z ellefj $
 */
package org.exist.xmldb;

import java.io.Writer;

//import org.exist.source.Source;
import org.exist.xquery.XPathException;
import org.xmldb.api.base.CompiledExpression;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XMLResource;

/**
 * Execute XQuery expressions on the database.
 * 
 * This interface is similar to {@link org.xmldb.api.modules.XPathQueryService}, but
 * provides additional methods to compile an XQuery into an internal representation, which
 * can be executed repeatedly. Since XQuery scripts can be very large, compiling an expression
 * in advance can save a lot of time.
 * 
 * @author Wolfgang Meier (wolfgang@exist-db.org)
 */
public interface XQueryService extends org.xmldb.api.modules.XQueryService {
	
	/**
	 * Execute the specified query and return the results as a {@link ResourceSet}.
	 * 
	 * @param query
	 * @throws XMLDBException

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/XmldbURI.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2006 The eXist Project
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; er version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software Foundation
 *  Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *  
 *  $Id: XmldbURI.java 10315 2009-11-01 20:48:23Z wolfgang_m $
 */

package org.exist.xmldb;

import imc.disxmldb.config.SysConfig;

import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLDecoder;
import java.util.regex.Pattern;

import org.apache.log4j.Logger;
import org.exist.util.UTF8;
import org.exist.xquery.Constants;
import org.exist.xquery.util.URIUtils;

/** A utility class for xmldb URis.
 * Since, java.net.URI is <strong>final</strong> this class acts as a wrapper.
 * @author Pierrick Brihaye <pierrick.brihaye@free.fr>
 * modified by xiafan <xiafan68@gmail.com>
 */
/*
 * This base class implementation only provides a path.  FullXmldbURI provides
 * full uri support.  The create method creates a minimal object to keep memory
 * usage low.
 */
public class XmldbURI implements Comparable {
    

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmldb/package.html
 =======================================================================
<html>
	<body>
		eXist's implementation of the XML:DB API.

		eXist has two driver implementations: the first
		uses XML-RPC calls to communicate with a remote
		database, the second talks directly to an embedded
		database instance. The driver class {@link org.exist.xmldb.DatabaseImpl}
		determines dynamically which driver should be used by
		looking at the XML:DB URI provided.
	</body>
</html>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/AbstractCachedResult.java
 =======================================================================
package org.exist.xmlrpc;

/**
 * Simple abstract container for serialized resources or results of a query.
 * Used to cache them that may be retrieved by chunks later by the client.
 * 
 * @author wolf
 * @author jmfernandez
 */
public abstract class AbstractCachedResult {
	
	protected long queryTime = 0;
	protected long creationTimestamp = 0; 
	protected long timestamp = 0; 
	
	public AbstractCachedResult() {
		this(0);
	}
	
	public AbstractCachedResult(long queryTime) {
		this.queryTime = queryTime;
		touch();
		this.creationTimestamp = this.timestamp;
	}
	
	/**
	 * @return Returns the queryTime.
	 */
	public long getQueryTime() {
		return queryTime;
	}
	
	/**
	 * @return Returns the timestamp.
	 */
	public long getTimestamp() {
		return timestamp;
	}

	/**
	 * This method can be used to explicitly update the
	 * last time the cached result has been used
	 */
	public void touch() {
		timestamp = System.currentTimeMillis();
	}
	
	/**
	 * @return Returns the timestamp.
	 */

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcAPI.java
 =======================================================================
/*
 * eXist Open Source Native XML Database
 * Copyright (C) 2001-2007 The eXist Project
 * http://exist-db.org
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *  
 *  $Id: RpcAPI.java 9908 2009-08-26 17:15:29Z wolfgang_m $
 */
package org.exist.xmlrpc;
import imc.disxmldb.security.PermissionDeniedException;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;

import org.xml.sax.SAXException;
import org.xmldb.api.base.XMLDBException;



/**
 *  Defines the methods callable through the XMLRPC interface.
 *
 * @author     Wolfgang Meier <wolfgang@exist-db.org>
 * modified by {Marco.Tampucci, Massimo.Martinelli} @isti.cnr.it
 */
public interface RpcAPI {

	public final static String SORT_EXPR = "sort-expr";
	public final static String NAMESPACES = "namespaces";
	public final static String VARIABLES = "variables";
	public final static String BASE_URI = "base-uri";
	public final static String STATIC_DOCUMENTS = "static-documents";
    public final static String PROTECTED_MODE = "protected";

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcConnection.java
 =======================================================================
package org.exist.xmlrpc;

import org.apache.cassandra.config.Config;
import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.db.ColumnFamilyStore;
import org.apache.cassandra.db.Row;
import org.apache.cassandra.db.marshal.UTF8Type;
import org.apache.cassandra.thrift.UnavailableException;
import org.apache.cassandra.utils.LatencyTracker;
import org.apache.cassandra.utils.Pair;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.w3c.dom.DocumentType;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.AttributesImpl;
import org.xmldb.api.base.ErrorCodes;
import org.xmldb.api.base.XMLDBException;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathQueryCommand;
import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;
import imc.disxmldb.config.CollectionMetaData;
import imc.disxmldb.config.SysConfig;
import imc.disxmldb.config.XMLDBCatalogManager;
import imc.disxmldb.config.XMLMetaData;
import imc.disxmldb.config.XMLSchemaMetaData;
import imc.disxmldb.index.invertindex.CFInvertIndex;
import imc.disxmldb.index.invertindex.IInvertIndex;
import imc.disxmldb.security.Permission;
import imc.disxmldb.security.PermissionDeniedException;
import imc.disxmldb.security.User;
import imc.disxmldb.security.XMLDBSecurityManager;
import imc.disxmldb.util.CassandraSchemaProxy;

import org.exist.xmldb.XmldbURI;

import javax.management.InstanceAlreadyExistsException;
import javax.management.MBeanRegistrationException;
import javax.management.MBeanServer;
import javax.management.MalformedObjectNameException;
import javax.management.NotCompliantMBeanException;
import javax.management.ObjectName;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import java.io.*;
import java.lang.management.ManagementFactory;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcConnectionMBean.java
 =======================================================================
package org.exist.xmlrpc;

public interface RpcConnectionMBean {
	public double getDocumentAvgLatency();
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/RpcServlet.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-07 The eXist Project
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * $Id: RpcServlet.java 8868 2009-04-21 19:13:25Z wolfgang_m $
 */
package org.exist.xmlrpc;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.xmlrpc.XmlRpcException;
import org.apache.xmlrpc.XmlRpcHandler;
import org.apache.xmlrpc.server.AbstractReflectiveHandlerMapping;
import org.apache.xmlrpc.server.RequestProcessorFactoryFactory;
import org.apache.xmlrpc.server.XmlRpcHandlerMapping;
import org.apache.xmlrpc.server.XmlRpcNoSuchHandlerException;
import org.apache.xmlrpc.webserver.XmlRpcServlet;


public class RpcServlet extends XmlRpcServlet {

    @Override
    public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
        // Request logger
        try {
            super.doPost(request, response);
        } catch (Throwable e){
            log("Problem during XmlRpc execution", e);
            throw new ServletException("An unknown error occurred: " + e.getMessage(), e);
        }
    }

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xmlrpc/XmldbRequestProcessorFactory.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-07 The eXist Project
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * $Id$
 */
package org.exist.xmlrpc;

import imc.disxmldb.security.User;
import imc.disxmldb.security.XMLDBSecurityManager;

import org.slf4j.*;
import org.apache.xmlrpc.XmlRpcException;
import org.apache.xmlrpc.XmlRpcRequest;
import org.apache.xmlrpc.common.XmlRpcHttpRequestConfig;
import org.apache.xmlrpc.server.RequestProcessorFactoryFactory;
//import org.exist.EXistException;
//import org.exist.security.User;
//import org.exist.storage.BrokerPool;
//import org.exist.util.XMLDBException;

/**
 * Factory creates a new handler for each XMLRPC request. For eXist, the handler
 * is implemented by class {@link org.sheepdog.xmlrpc.RpcConnection}. The
 * factory is needed to make sure that each RpcConnection is properly
 * initialized.
 */
public class XmldbRequestProcessorFactory implements
		RequestProcessorFactoryFactory.RequestProcessorFactory {

	private final static Logger LOG = LoggerFactory
			.getLogger(XmldbRequestProcessorFactory.class);

	public final static int CHECK_INTERVAL = 2000;


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xquery/Constants.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-06 Wolfgang M. Meier
 *  wolfgang@exist-db.org
 *  http://exist.sourceforge.net
 *  
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *  
 *  $Id: Constants.java 2436 2006-01-07 21:47:15Z brihaye $
 */
package org.exist.xquery;

/**
 * Declares various constants and flags used by the query engine:
 * axis specifiers, operators.
 * 
 * @author wolf
 */
public interface Constants {

    //TODO : move this to a dedicated Axis class
    
	/** Axis names */
    public final static String[] AXISSPECIFIERS = {
						"ancestor",
					    "ancestor-or-self",
					    "parent",
					    "preceding",
					    "preceding-sibling",
					    "child",
					    "attribute",
					    "descendant",
					    "descendant-or-self",
					    "following",
					    "following-sibling",
					    "namespace",
					    "self",
					    "attribute-descendant"

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xquery/XPathException.java
 =======================================================================
package org.exist.xquery;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class XPathException extends Exception {

	private int line = 0;
	private int column = 0;
	private String message = null;
	private List callStack = null;
    
	/**
	 * @param message
	 */
	public XPathException(String message) {
		super();
		this.message = message;
	}

	public XPathException(int line, int column, String message) {
		super();
		this.message = message;
		this.line = line;
        this.column = column;
	}
    
	/**
	 * @param cause
	 */
	public XPathException(Throwable cause) {
		super(cause);
	}

	/**
	 * @param message
	 * @param cause
	 */
	public XPathException(String message, Throwable cause) {
		super(cause);
		this.message = message;
	}
	public XPathException(int line, int column, String message, Throwable cause) {
		super(cause);
		this.message = message;
        this.line = line;
        this.column = column;
	}
    

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/src/java/org/exist/xquery/util/URIUtils.java
 =======================================================================
/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-05 The eXist Project
 *  http://exist-db.org
 *  
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *  
 *  $Id$
 */
package org.exist.xquery.util;

import java.io.UnsupportedEncodingException;
import java.net.URISyntaxException;
import java.net.URLDecoder;
import java.net.URLEncoder;

import org.exist.xmldb.XmldbURI;

/**
 * Utilities for URI related functions
 * 
 * @author Pierrick Brihaye <pierrick.brihaye@free.fr>
 */

public class URIUtils {
	
	public static String encodeForURI(String uriPart) {
		String result = urlEncodeUtf8(uriPart);
		result = result.replaceAll("\\+", "%20");
		//result = result.replaceAll("%23", "#");		
		result = result.replaceAll("%2D", "-");
		result = result.replaceAll("%5F", "_");
		result = result.replaceAll("%2E", ".");
		//result = result.replaceAll("%21", "!");
		result = result.replaceAll("%7E", "~");
		result = result.replaceAll("\\*", "%2A");
		//result = result.replaceAll("%27", "'");
		//result = result.replaceAll("%28", "(");

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/conf/cassandra.yaml
 =======================================================================
#
# Warning!
# Consider the effects on 'o.a.c.i.s.LegacySSTableTest' before changing schemas in this file.
#
cluster_name: Test Cluster
in_memory_compaction_limit_in_mb: 1
commitlog_sync: batch
commitlog_sync_batch_window_in_ms: 1.0
partitioner: org.apache.cassandra.dht.CollatingOrderPreservingPartitioner
rpc_timeout_in_ms: 5000
listen_address: 127.0.0.1
storage_port: 7010
rpc_port: 9170
column_index_size_in_kb: 4
commitlog_directory: build/test/cassandra/commitlog
saved_caches_directory: build/test/cassandra/saved_caches
data_file_directories:
    - build/test/cassandra/data
disk_access_mode: mmap
seed_provider:
    - class_name: org.apache.cassandra.locator.SimpleSeedProvider
      parameters:
          - seeds: "127.0.0.1"
endpoint_snitch: org.apache.cassandra.locator.SimpleSnitch
dynamic_snitch: true
request_scheduler: org.apache.cassandra.scheduler.RoundRobinScheduler
request_scheduler_id: keyspace
encryption_options:
    internode_encryption: none
    keystore: conf/.keystore
    keystore_password: cassandra
    truststore: conf/.truststore
    truststore_password: cassandra
incremental_backups: true
flush_largest_memtables_at: 1.0

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/complex.xml
 =======================================================================
<ProteinEntry id="CCHU">
<header>
  <uid>CCHU</uid>
  <accession>A31764</accession>
  <accession>A05676</accession>
  <created_date>24-Apr-1984</created_date>
  <seq-rev_date>30-Sep-1991</seq-rev_date>
  <txt-rev_date>28-Jul-2000</txt-rev_date>
</header>
<protein>
  <name>cytochrome c [validated]</name>
</protein>
<organism>
  <source>human</source>
  <common>man</common>
  <formal>Homo sapiens</formal>
</organism>
<reference>
<refinfo refid="A31764">
  <authors>
  <author>Evans, M.J.</author>
  <author>Scarpulla, R.C.</author>
  </authors>
  <citation>Proc. Natl. Acad. Sci. U.S.A.</citation>
  <volume>85</volume><year>1988</year><pages>9625-9629</pages>
  <title>The human somatic cytochrome c gene: two classes of processed pseudogenes demarcate a period of rapid molecular evolution.</title>
  <xrefs>
  <xref><db>MUID</db><uid>89071748</uid></xref>
  </xrefs>
</refinfo>
</reference>
<reference>
<refinfo refid="A05676">
  <authors>
  <author>Matsubara, H.</author>
  <author>Smith, E.L.</author>
  </authors>
  <citation>J. Biol. Chem.</citation>
  <volume>238</volume><year>1963</year><pages>2732-2753</pages>
  <title>Human heart cytochrome c. Chymotryptic peptides, tryptic peptides, and the complete amino acid sequence.</title>
</refinfo>
<accinfo label="MATS">
  <accession>A05676</accession>
  <mol-type>protein</mol-type>
  <seq-spec>2-28;29-46;47-100;101-105</seq-spec>
</accinfo>
</reference>
<reference>
<refinfo refid="A00001">
  <authors>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.Truncation.bin
 =======================================================================
?	Keyspace1??Doesn't Really Matter?	Keyspace1??Doesn't Matter Either??	Keyspace1??Still Doesn't Matter????????????????"?	Keyspace1??Doesn't Really Matter???????????????#?	Keyspace1??Doesn't Matter Either????????????????"?	Keyspace1??Still Doesn't Matter?

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.WriteResponse.bin
 =======================================================================
?	Keyspace1??Key01??	Keyspace1??Key01?

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace1.bin
 =======================================================================
G?

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace2.bin
 =======================================================================
1?

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace3.bin
 =======================================================================
)?

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace4.bin
 =======================================================================
(

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/db.migration.Keyspace5.bin
 =======================================================================
 ?

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/data/serialization/0.7/service.TreeResponse.bin
 =======================================================================
?	sessionId?????	Keyspace1?	Standard1????sr?%org.apache.cassandra.utils.MerkleTree???????????B?	hashdepthJ??maxsizeJ??sizeL??roott?0Lorg/apache/cassandra/utils/MerkleTree$Hashable;xp~????????????????sr?*org.apache.cassandra.utils.MerkleTree$Leaf???????????xr?.org.apache.cassandra.utils.MerkleTree$Hashable???????????[??hasht??[Bxpp?	sessionId?????	Keyspace1?	Standard1????sr?%org.apache.cassandra.utils.MerkleTree???????????B?	hashdepthJ??maxsizeJ??sizeL??roott?0Lorg/apache/cassandra/utils/MerkleTree$Hashable;xp~???????????????sr?+org.apache.cassandra.utils.MerkleTree$Inner???????????L??lchildq?~??L??rchildq?~??L??tokent? Lorg/apache/cassandra/dht/Token;xr?.org.apache.cassandra.utils.MerkleTree$Hashable???????????[??hasht??[Bxppsq?~??psq?~??psq?~??psr?*org.apache.cassandra.utils.MerkleTree$Leaf???????????xq?~??psq?~??psr?(org.apache.cassandra.dht.BigIntegerToken?
?j?g????xr??org.apache.cassandra.dht.Token???????????L??tokent??Ljava/lang/Object;xpsr??java.math.BigInteger????;?????I??bitCountI?	bitLengthI??firstNonzeroByteNumI??lowestSetBitI??signum[?	magnitudeq?~??xr??java.lang.Number???????????xp????????????????????ur??[B??????T????xp????????????????????xsq?~??psq?~??sq?~??????????????????????uq?~??????????????????????xsq?~??psq?~??psq?~??psq?~??psq?~??sq?~??????????????????????uq?~??????(???????????????xsq?~??psq?~??psq?~??psq?~??sq?~??????????????????????uq?~??????8???????????????xsq?~??sq?~??????????????????????uq?~??????0???????????????xsq?~??sq?~??????????????????????uq?~?????? ???????????????xsq?~??psq?~??psq?~??psq?~??psq?~??psq?~??psq?~??sq?~??????????????????????uq?~??????h???????????????xsq?~??psq?~??sq?~??????????????????????uq?~??????p???????????????xsq?~??sq?~??????????????????????uq?~??????`???????????????xsq?~??sq?~??????????????????????uq?~??????@???????????????x???????????????M?	sessionId?????	Keyspace1?	Standard1????sr?%org.apache.cassandra.utils.MerkleTree???????????B?	hashdepthJ??maxsizeJ??sizeL??roott?0Lorg/apache/cassandra/utils/MerkleTree$Hashable;xp~????????????????sr?*org.apache.cassandra.utils.MerkleTree$Leaf???????????xr?.org.apache.cassandra.utils.MerkleTree$Hashable???????????[??hasht??[Bxpp?????????????????	sessionId?????	Keyspace1?	Standard1????sr?%org.apache.cassandra.utils.MerkleTree???????????B?	hashdepthJ??maxsizeJ??sizeL??roott?0Lorg/apache/cassandra/utils/MerkleTree$Hashable;xp~???????????????sr?+org.apache.cassandra.utils.MerkleTree$Inner???????????L??lchildq?~??L??rchildq?~??L??tokent? Lorg/apache/cassandra/dht/Token;xr?.org.apache.cassandra.utils.MerkleTree$Hashable???????????[??hasht??[Bxppsq?~??psq?~??psq?~??psr?*org.apache.cassandra.utils.MerkleTree$Leaf???????????xq?~??psq?~??psr?(org.apache.cassandra.dht.BigIntegerToken?
?j?g????xr??org.apache.cassandra.dht.Token???????????L??tokent??Ljava/lang/Object;xpsr??java.math.BigInteger????;?????I??bitCountI?	bitLengthI??firstNonzeroByteNumI??lowestSetBitI??signum[?	magnitudeq?~??xr??java.lang.Number???????????xp????????????????????ur??[B??????T????xp????????????????????xsq?~??psq?~??sq?~??????????????????????uq?~??????????????????????xsq?~??psq?~??psq?~??psq?~??psq?~??sq?~??????????????????????uq?~??????(???????????????xsq?~??psq?~??psq?~??psq?~??sq?~??????????????????????uq?~??????8???????????????xsq?~??sq?~??????????????????????uq?~??????0???????????????xsq?~??sq?~??????????????????????uq?~?????? ???????????????xsq?~??psq?~??psq?~??psq?~??psq?~??psq?~??psq?~??sq?~??????????????????????uq?~??????h???????????????xsq?~??psq?~??sq?~??????????????????????uq?~??????p???????????????xsq?~??sq?~??????????????????????uq?~??????`???????????????xsq?~??sq?~??????????????????????uq?~??????@???????????????x

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/CounterCF.json
 =======================================================================
{
 "726f7741": [["636f6c4141", "000100008c619170467411e00000fe8ebeead9ee0000000000000001000000000000002a", 1294532915068, "c", 0]]
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/SimpleCF.json
 =======================================================================
{
 "726f7741": [["636f6c4141", "76616c4141", 1294532915068], ["636f6c4142", "76616c4142", 1294532915069], ["636f6c4143", "76616c4143", 1294532915071, "e", 42, 2000000000]],
 "726f7742": [["636f6c4241", "76616c4241", 1294532915070], ["636f6c4242", "76616c4242", 1294532915073]]
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/SimpleCF.oldformat.json
 =======================================================================
{
 "726f7741": [["636f6c4141", "76616c4141", 1294532915068, false], ["636f6c4142", "76616c4142", 1294532915069, false], ["636f6c4143", "76616c4143", 1294532915071, false, 42, 2000000000 ]],
 "726f7742": [["636f6c4241", "76616c4241", 1294532915070, false], ["636f6c4242", "76616c4242", 1294532915073, false]]
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/SuperCF.json
 =======================================================================
{
  "726f7741": {"737570657241": {"deletedAt": -9223372036854775808, "subColumns": [["636f6c4141", "76616c75654141", 1294532915069], ["636f6c4142", "76616c75654142", 1294532915069]]}},
  "726f7742": {"737570657242": {"deletedAt": -9223372036854775808, "subColumns": [["636f6c4241", "76616c75654241", 1294532915069], ["636f6c4242", "76616c75654242", 1294532915069]]}}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/resources/UnsortedSuperCF.json
 =======================================================================
{
  "303935": { "5330": {"deletedAt": -9223372036854775808, "subColumns": [["4330", "366338333439636337323630", 1294656637116, false], ["4331", "366338333439636337323630", 1294656637116, false], ["4332", "366338333439636337323630", 1294656637116, false], ["4333", "366338333439636337323630", 1294656637116, false], ["4334", "366338333439636337323630", 1294656637116, false]]}}  , 
  "303630": { "5330": {"deletedAt": -9223372036854775808, "subColumns": [["4330", "643364393434363830326134", 1294656636902, false], ["4331", "643364393434363830326134", 1294656636902, false], ["4332", "643364393434363830326134", 1294656636902, false], ["4333", "643364393434363830326134", 1294656636902, false], ["4334", "643364393434363830326134", 1294656636902, false]]}}  ,
  "303638": { "5330": {"deletedAt": -9223372036854775808, "subColumns": [["4330", "366634393232663435353638", 1294656636885, false], ["4331", "366634393232663435353638", 1294656636885, false], ["4332", "366634393232663435353638", 1294656636885, false], ["4333", "366634393232663435353638", 1294656636885, false], ["4334", "366634393232663435353638", 1294656636885, false]]}}  
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/JavaTest.java
 =======================================================================
import imc.disxmldb.cassandra.verbhandler.XPathQueryResponse;

import java.util.concurrent.ConcurrentMap;

import org.apache.cassandra.net.Message;
import org.apache.cassandra.service.StorageService;
import org.apache.cassandra.utils.FBUtilities;
import org.apache.commons.lang.ArrayUtils;
import org.cliffc.high_scale_lib.NonBlockingHashMap;
import org.junit.Test;

public class JavaTest {
	@Test
	public void FakeMessageTest() {
		Message FAKE_MESSAGE1 = new Message(FBUtilities.getBroadcastAddress(),
				StorageService.Verb.INTERNAL_RESPONSE,
				ArrayUtils.EMPTY_BYTE_ARRAY, -1);
		Message FAKE_MESSAGE2 = new Message(FBUtilities.getBroadcastAddress(),
				StorageService.Verb.INTERNAL_RESPONSE,
				ArrayUtils.EMPTY_BYTE_ARRAY, -2);
		
		 ConcurrentMap<Message, Integer> replies = new NonBlockingHashMap<Message, Integer>();
		 replies.put(FAKE_MESSAGE1, new Integer(1));

		 if (replies.get(FAKE_MESSAGE2) == null) {
			 System.out.println("fake message 1 and 2 is not equal");
		 }
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/BtreeTest.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-27 0.1
 */
package imc.disxmldb;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Random;
import java.util.TreeMap;

import junit.framework.Assert;

import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.Node;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.btree.ComposeKeyBtree;
import imc.disxmldb.index.btree.CacheBtree;
import imc.disxmldb.index.btree.IBtree;
import imc.disxmldb.index.btree.LazyCacheBtree;
import imc.disxmldb.index.filter.IdentityXMLFilter;
import imc.disxmldb.xpath.XPathProcessorV2;

import org.apache.cassandra.io.util.FileUtils;
import org.junit.Test;

import com.sleepycat.je.DatabaseEntry;

public class BtreeTest {
	private static final String btreeFile = "/Users/xiafan/btreeTest";

	@Test
	public void loadBtree() throws IOException {
		int count = 100;
		LazyCacheBtree btree = new LazyCacheBtree(
				"C:\\imcxml\\cassandradata\\data\\xmldb\\btree_4_STRING",
				512 * 1024, ValueType.STRING);
		TreeMap<Integer, List<NodeUnit>> ret = btree.get("20120604000001");

		DatabaseEntry entry = btree.composeKey("20120604000001", -1);
		ret = btree.get(entry, IdentityXMLFilter.instance);
		System.out.println(ret);
		Assert.assertEquals(ret.size(), 1);
		btree.close();
	}

	@Test
	public void testStringBtree() throws IOException {
		int count = 100;

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/CFInvertIndexCleaner.java
 =======================================================================
/**
*@author:xiafan xiafan68@gmail.com
*@version: 2011-10-28 0.1
*/
package imc.disxmldb;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;

import org.antlr.grammar.v3.ANTLRv3Parser.finallyClause_return;
import org.apache.cassandra.SchemaLoader;
import org.apache.cassandra.config.ConfigurationException;
import org.apache.cassandra.config.DatabaseDescriptor;
import org.apache.cassandra.config.KSMetaData;
import org.apache.cassandra.config.Schema;
import org.apache.cassandra.db.commitlog.CommitLog;
import org.apache.cassandra.io.util.FileUtils;
import org.apache.cassandra.locator.AbstractReplicationStrategy;
import org.apache.cassandra.locator.SimpleStrategy;
import org.junit.BeforeClass;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CFInvertIndexCleaner {
	 private static Logger logger = LoggerFactory.getLogger(SchemaLoader.class);
	 public static final String keyspace = "testDb";
	 
	 @BeforeClass
	    public static void cleanupAndLeaveDirs() throws IOException
	    {
	        mkdirs();
	        cleanup();
	        mkdirs();
	        CommitLog.instance.resetUnsafe(); // cleanup screws w/ CommitLog, this brings it back to safe state
	    }

	    public static void cleanup() throws IOException
	    {
	        // clean up commitlog
	        String[] directoryNames = { DatabaseDescriptor.getCommitLogLocation(), };
	        for (String dirName : directoryNames)
	        {
	            File dir = new File(dirName);
	            if (!dir.exists())
	                throw new RuntimeException("No such directory: " + dir.getAbsolutePath());
	            FileUtils.deleteRecursive(dir);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/CFInvertIndexTest.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-10-22 0.1
 */
package imc.disxmldb;

import java.io.IOException;
import java.util.List;
import java.util.Random;
import java.util.TreeMap;

import imc.disxmldb.dom.AttributeNode;
import imc.disxmldb.dom.AttributeNodeImpl;
import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.dom.typesystem.ValueType;
import imc.disxmldb.index.NodeUnit;
import imc.disxmldb.index.invertindex.CFInvertIndex;
import imc.disxmldb.util.CassandraSchemaProxy;
import imc.disxmldb.util.LocalCFStoreProxy;

import org.apache.cassandra.config.Schema;
import org.apache.cassandra.db.ColumnFamilyStore;
import org.apache.cassandra.db.Table;
import org.junit.Test;

public class CFInvertIndexTest extends CFInvertIndexCleaner {
	private String[] dicts = { "CFInvertIndexTest", "CFInvertIndexCleaner",
			"performanceTest", "LocalCFStoreProxy", "CFInvertIndex", "String",
			"texts", "node", "AttributeNode", "setValueType", "setValue",
			"setRange", "testGet", "CassandraSchemaProxy" };

	@Test
	public void performanceTest() {
		ColumnFamilyStore cfStore = CassandraSchemaProxy
				.createInvertIndexCFMetaData(keyspace, "testindex");
		LocalCFStoreProxy proxy = new LocalCFStoreProxy(Table.open(keyspace),
				cfStore);
		CFInvertIndex inv = new CFInvertIndex(proxy);

		int count = 10000;
		Random rand = new Random();
		for (int i = 0; i < count; i++) {
			String dict = "";
			int idx = Math.abs(rand.nextInt());
			for (int b = 0; b < idx % dicts.length; b++) {
				int idx1 = Math.abs(rand.nextInt());
				dict += dicts[idx1 % dicts.length] + " ";
			}
			inv.put(dict, rand.nextInt(), rand.nextInt(),
					new double[] { rand.nextDouble(), rand.nextDouble() }, 0);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/RemoveCollectionTest.java
 =======================================================================
package imc.disxmldb;

public class RemoveCollectionTest {

}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/cassandra/verbhandler/result/ResultTest.java
 =======================================================================
package imc.disxmldb.cassandra.verbhandler.result;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;

import junit.framework.Assert;

import imc.disxmldb.cassandra.verbhandler.XPathResult;
import imc.disxmldb.cassandra.verbhandler.XPathResult.XPathResultType;

import org.junit.Test;

public class ResultTest {

	/**
	 * 测试所有的result类型是否能够正常的进行序列化和反序列化
	 * 
	 * @throws IOException
	 */
	@Test
	public void resultTest() throws IOException {
		XPathResult result = new XPathResult(XPathResultType.Average);
		AvgResult funcRet = new AvgResult();
		funcRet.count = 1;
		funcRet.sum = 100;
		result.setFuncRet(funcRet);

		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		DataOutputStream dos = new DataOutputStream(bos);
		result.serialize(result, dos, 1);
		ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
		DataInputStream dis = new DataInputStream(bis);
		result = result.deserialize(dis, 0);
		System.out.println(result.result());

		result = new XPathResult(XPathResultType.Sum);
		SumResult sumRet = new SumResult();
		sumRet.sum = 100;
		result.setFuncRet(sumRet);

		bos = new ByteArrayOutputStream();
		dos = new DataOutputStream(bos);
		result.serialize(result, dos, 1);
		bis = new ByteArrayInputStream(bos.toByteArray());
		dis = new DataInputStream(bis);
		result = result.deserialize(dis, 0);
		System.out.println(result.result());

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/Config.java
 =======================================================================
package imc.disxmldb.config;

public class Config {
	public static final String testRootColName = "testCol";
	public static final String testRootCol = "/db/" + testRootColName;
	
	public static final String testXMLDocName = "testXML.xml";
	public static final String testXMLDoc = "<test></test>";
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/CreateCollection.java
 =======================================================================
package imc.disxmldb.config;

import junit.framework.Assert;
import imc.disxmldb.util.TestUtilities;

import org.exist.xmldb.RemoteCollection;
import org.exist.xmldb.RemoteCollectionManagementService;
import org.exist.xmldb.XmldbURI;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Database;

public class CreateCollection {
	public static void main(String[] args) {
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);
			String textType = "css";
			RemoteCollection col = (RemoteCollection) DatabaseManager
					.getCollection(TestUtilities.uri, "admin", "admin");
			RemoteCollectionManagementService service = (RemoteCollectionManagementService) col
					.getService("CollectionManagementService", "1.0");

			String[] childs = col.getChildCollections();
			System.out.println("child collection size:" + childs.length);
			for (String child : childs) {
				System.out.println("child collection: " + child);
				Assert.assertTrue(!child.equals(Config.testRootColName));
			}
			// service.removeCollection(XmldbURI.xmldbUriFor(colName));
			RemoteCollection testCol = (RemoteCollection) service.createCollection(XmldbURI
					.xmldbUriFor(Config.testRootCol));

			childs = col.getChildCollections();
			System.out.println("child collection of " + col.getName());
			for (String child : childs) {
				System.out.println("	child collection: " + child);
			}

			System.out.println("create collection " + Config.testRootCol
					+ " again");
			try {
				service.createCollection(XmldbURI
						.xmldbUriFor(Config.testRootCol));
			} catch (Exception ex) {
				System.out.println(ex);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/CreateXMLDoc.java
 =======================================================================
package imc.disxmldb.config;

import imc.disxmldb.util.TestUtilities;
import junit.framework.Assert;

import org.exist.xmldb.RemoteCollection;
import org.exist.xmldb.RemoteCollectionManagementService;
import org.exist.xmldb.RemoteXMLResource;
import org.exist.xmldb.XmldbURI;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Database;
import org.xmldb.api.base.Resource;

public class CreateXMLDoc {
	public static void main(String[] args) {
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);
			String textType = "css";
			RemoteCollection col = (RemoteCollection) DatabaseManager
					.getCollection(TestUtilities.uri, "admin", "admin");
			RemoteCollectionManagementService service = (RemoteCollectionManagementService) col
					.getService("CollectionManagementService", "1.0");
			// service.removeCollection(XmldbURI.xmldbUriFor(colName));

			RemoteCollection testCol = (RemoteCollection) service
					.createCollection(XmldbURI.xmldbUriFor(Config.testRootCol));

	/*		RemoteCollection testCol = (RemoteCollection) TestUtilities
					.getCollection(Config.testRootCol);*/
			System.out.println("created");
			Resource x = testCol.createResource(Config.testXMLDocName,
					"XMLResource");
			// ((RemoteXMLResource) x).setSchemaName("bf.xsd");
			((RemoteXMLResource) x).setSplitted((byte) 1);
			x.setContent(Config.testXMLDoc);
			testCol.storeResource(x);
			String[] docs = testCol.getResources();
			for (String doc : docs) {
				System.out.println(doc);
			}

			try {
				x = testCol
						.createResource(Config.testXMLDocName, "XMLResource");
				// ((RemoteXMLResource) x).setSchemaName("bf.xsd");

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/FileSystemTest.java
 =======================================================================
package imc.disxmldb.config;

import imc.disxmldb.util.TestUtilities;

import org.exist.xmldb.RemoteCollection;
import org.exist.xmldb.RemoteCollectionManagementService;
import org.exist.xmldb.XmldbURI;
import org.junit.Test;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Database;

public class FileSystemTest {
	@Test
	public void collectionCreateAndDelTest() {
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);
			String textType = "css";
			RemoteCollection col = (RemoteCollection) DatabaseManager
					.getCollection(TestUtilities.uri, "admin", "admin");
			RemoteCollectionManagementService service = (RemoteCollectionManagementService) col
					.getService("CollectionManagementService", "1.0");

			String testColName = "/db/testCol/";
			//service.removeCollection(XmldbURI.xmldbUriFor(colName));
			Collection child = service.createCollection(XmldbURI.xmldbUriFor(testColName));
			
			String[] childs = col.getChildCollections();
			service.removeCollection(XmldbURI.xmldbUriFor(testColName));
			// col = (RemoteCollection) col.getChildCollection(colName);
			// System.out.println(col.getName());
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
	}
	
	@Test public void ColCreateSameColTest() {
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/ParseColIDFromCFNameTest.java
 =======================================================================
package imc.disxmldb.config;

import junit.framework.Assert;

import org.apache.cassandra.db.ColumnFamilyStore;
import org.junit.Test;

public class ParseColIDFromCFNameTest {
	@Test
	public void test() {
		String cfName = CollectionMetaData.COLDATA_CFNAME_PREFIX + "12";
		Assert.assertEquals(12, ColumnFamilyStore.getColID(cfName));
		
		cfName = CollectionMetaData.COLDATA_CFNAME_PREFIX + "12" + "_inv";
		Assert.assertEquals(12, ColumnFamilyStore.getColID(cfName));
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/RemoveCollection.java
 =======================================================================
package imc.disxmldb.config;

import imc.disxmldb.util.TestUtilities;

import org.exist.xmldb.RemoteCollection;
import org.exist.xmldb.RemoteCollectionManagementService;
import org.exist.xmldb.XmldbURI;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Database;

public class RemoveCollection {
	public static void main(String[] args) {
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);
			String textType = "css";
			RemoteCollection col = (RemoteCollection) DatabaseManager
					.getCollection(TestUtilities.uri, "admin", "admin");
			RemoteCollectionManagementService service = (RemoteCollectionManagementService) col
					.getService("CollectionManagementService", "1.0");

			String[] childs = col.getChildCollections();
			System.out.println("child collection size:" + childs.length);
			for (String child : childs) {
				System.out.println("child collection: " + child);
			}
			// service.removeCollection(XmldbURI.xmldbUriFor(colName));
			service.removeCollection(XmldbURI.xmldbUriFor(Config.testRootCol));

			childs = col.getChildCollections();
			System.out.println("child collection size:" + childs.length);
			for (String child : childs) {
				System.out.println("child collection: " + child);
			}
			// col = (RemoteCollection) col.getChildCollection(colName);
			// System.out.println(col.getName());
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/config/RemoveXMLDoc.java
 =======================================================================
package imc.disxmldb.config;

import imc.disxmldb.util.TestUtilities;

import org.exist.xmldb.RemoteCollection;
import org.exist.xmldb.RemoteCollectionManagementService;
import org.exist.xmldb.RemoteXMLResource;
import org.exist.xmldb.XmldbURI;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Database;
import org.xmldb.api.base.Resource;

public class RemoveXMLDoc {
	public static void main(String[] args) {
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);
			String textType = "css";
			RemoteCollection col = (RemoteCollection) DatabaseManager
					.getCollection(TestUtilities.uri, "admin", "admin");
			RemoteCollectionManagementService service = (RemoteCollectionManagementService) col
					.getService("CollectionManagementService", "1.0");

			RemoteCollection testCol = (RemoteCollection) TestUtilities
					.getCollection(Config.testRootCol);
			
			String[] docs = testCol.getResources();
			for (String doc : docs) {
				System.out.println(doc);
			}
			
			Resource x = testCol.createResource(Config.testXMLDocName,
					"XMLResource");
			((RemoteXMLResource) x).setSplitted((byte) 1);
			x.setContent(Config.testXMLDoc);
			testCol.removeResource(x);
			
			docs = testCol.getResources();
			for (String doc : docs) {
				System.out.println(doc);
			}
			
			service.removeCollection(XmldbURI.xmldbUriFor(Config.testRootCol));
		} catch (Exception ex) {
			ex.printStackTrace();
		}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/dom/XMLNodeForMutationTest.java
 =======================================================================
package imc.disxmldb.dom;

import imc.disxmldb.dom.typesystem.ValueType;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;

import org.junit.Test;

public class XMLNodeForMutationTest {
	@Test
	public void serializeTest() throws IOException {
		XMLNodeForMutation node = new XMLNodeForMutation(XMLNode.ELEMENTNODE);
		node.tagName = "testNode";
		node.id = 1;
		node.level = 1;
		node.range[0] = 0.0;
		node.range[1] = 10000.0;
		node.value = ByteBuffer.wrap("test".getBytes());
		node.valueType = ValueType.STRING;
		
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		DataOutputStream dos = new DataOutputStream(bos);
		XMLNodeForMutation.serialize(node, dos, 1);
		ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
		DataInputStream dis = new DataInputStream(bis);
		System.out.println(String.format("original node:%s", node.toString()));
		node = XMLNodeForMutation.deserialize(dis, 0);
		System.out.println(String.format("deserialized node:%s",node.toString()));
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/dom/formatter/IndentedXMLNodeFormatterTest.java
 =======================================================================
package imc.disxmldb.dom.formatter;

import java.io.IOException;

import imc.disxmldb.dom.AttributeNode;
import imc.disxmldb.dom.AttributeNodeImpl;
import imc.disxmldb.dom.ElementNode;
import imc.disxmldb.dom.ElementNodeImpl;
import imc.disxmldb.dom.XMLNode;
import imc.disxmldb.util.StringOutputStream;

import org.junit.Test;

public class IndentedXMLNodeFormatterTest {

	@Test
	public void test() throws IOException {
		ElementNode eleNode = new ElementNodeImpl("root", 0, 0, null);
		AttributeNode attrNode = new AttributeNodeImpl("attr", 1, 1, (XMLNode)eleNode);
		eleNode.addAttribute((XMLNode)attrNode);
		
		ElementNode child1 = new ElementNodeImpl("child1", 0, 0, (XMLNode)eleNode);
		((ElementNodeImpl)child1).setValue("value");
		eleNode.addChild((XMLNode)child1);
		IndentedXMLNodeFormatter formatter = new IndentedXMLNodeFormatter(null);
		StringOutputStream sos = new StringOutputStream();
		formatter.format((XMLNode) eleNode, sos);
		System.out.println(sos.toString());
	}
	
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/dom/numbering/NumberingSchemaTest.java
 =======================================================================
package imc.disxmldb.dom.numbering;

import org.junit.Assert;
import org.junit.Test;

public class NumberingSchemaTest {
	/**
	 * test the function of NumberingSchema
	 */
	@Test
	public void onlyElementNodetest() {
		NumberingSchema numbering = new NumberingSchema(new double[] { 0.0,
				1000.0 }, 50.0);
		/**
		 * only one element
		 */
		Assert.assertEquals((int) 0.0, (int) numbering.startElement());
		Assert.assertEquals((int) 50.0, (int) numbering.endElement());

		/**
		 * contains one child
		 */
		numbering = new NumberingSchema(new double[] { 0.0, 1000.0 }, 50.0);
		Assert.assertEquals((int) 0.0, (int) numbering.startElement());
		Assert.assertEquals((int) 50.0, (int) numbering.startElement());
		Assert.assertEquals((int) 100.0, (int) numbering.endElement());
		Assert.assertEquals((int) 150.0, (int) numbering.endElement());

		/**
		 * contains multiple child
		 */
		numbering = new NumberingSchema(new double[] { 0.0, 1000.0 }, 50.0);
		Assert.assertEquals((int) 0.0, (int) numbering.startElement());
		double target = 0.0;
		for (int i = 0; i < 3; i++) {
			target += 50.0;
			Assert.assertEquals((int) target, (int) numbering.startElement());
			target += 50.0;
			Assert.assertEquals((int) target, (int) numbering.endElement());
		}
		target += 50.0;
		Assert.assertEquals((int) target, (int) numbering.endElement());
	}

	@Test
	public void onlyAttributeNodeTest() {
		/**
		 * contains only one attribute
		 */
		NumberingSchema numbering = new NumberingSchema(new double[] { 0.0,

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/security/UserModTest.java
 =======================================================================
package imc.disxmldb.security;

import junit.framework.Assert;
import imc.disxmldb.util.TestUtilities;

import org.exist.xmldb.RemoteCollection;
import org.exist.xmldb.RemoteUserManagementService;
import org.junit.Test;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Database;

public class UserModTest {
	@Test
	public void addUser() {
		String uri_ = TestUtilities.uri;
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);
			String textType = "css";
			RemoteCollection col = (RemoteCollection) DatabaseManager
					.getCollection(uri_, "admin", "admin");
			RemoteUserManagementService usermod = (RemoteUserManagementService) col.getService("UserManagementService", "1");
			User user = new User("testuser", "testpwd");
			user.addGroup("testgrp");
			usermod.addUser(user);
			
			User retUser = usermod.getUser(user.getName());
			Assert.assertEquals(user.getName(), retUser.getName());
			//Assert.assertEquals(user, retUser);
			System.out.println(retUser);
			
			col = (RemoteCollection) DatabaseManager
					.getCollection(uri_, user.getName(), user.getPassword());
		} catch (Exception ex) {
			ex.printStackTrace();
			Assert.assertTrue(false);
		}
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/storexml/StoreNoSplitXMLTest.java
 =======================================================================
package imc.disxmldb.storexml;

import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class StoreNoSplitXMLTest {
	public static String colName = "testNonSplitted";
	public static String fullColName = "/db/" + colName;
	public static String docName = "testNoSplitted.xml";
	public static String emptyDoc = "<number type='sub'><image></image></number>";

	@Before
	public void prepare() {
		TestUtilities.prepareCollection(fullColName);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 0);
	}

	@Test
	public void store() throws XMLDBException {
		Collection col = TestUtilities.getCollection(fullColName);
		XUpdateQueryService update = (XUpdateQueryService) col.getService(
				"XUpdateQueryService", "1.0");
		update.setProperty("pretty", "true");
		update.setProperty("encoding", "ISO-8859-1");
		String node = null;
		String update_code = null;
		int count = 89;
		for (int i = 0; i < count; i++) {
			node = "<total><count>" + i + "</count></total>";
			update_code = "<?xml version=\"1.0\"?><xu:modifications version=\"1.0\" "
					+ "xmlns:xu=\"http://www.xmldb.org/xupdate\">"
					+ "<xu:append select=\"/number/image\">"
					+ node
					+ "</xu:append></xu:modifications>";
			update.update(update_code);
		}
		
		XPathQueryService query = (XPathQueryService) col.getService(
				"XPathQueryService", "1.0");
		String query_code = "/number/image";

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/storexml/StoreSplittedXMLTest.java
 =======================================================================
package imc.disxmldb.storexml;

import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class StoreSplittedXMLTest {
	public static String colName = "testSplitted";
	public static String fullColName = "/db/" + colName;
	public static String docName = "testSplitted.xml";
	public static String emptyDoc = "<number type='sub'><image></image></number>";

	@Before
	public void prepare() {
		TestUtilities.prepareCollection(fullColName);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 1);
	}

	@Test
	public void store() throws XMLDBException {
		Collection col = TestUtilities.getCollection(fullColName);
		XUpdateQueryService update = (XUpdateQueryService) col.getService(
				"XUpdateQueryService", "1.0");
		update.setProperty("pretty", "true");
		update.setProperty("encoding", "ISO-8859-1");
		String node = null;
		String update_code = null;
		int count = 36;
		for (int i = 0; i < count; i++) {
			node = "<total><count>" + i + "</count></total>";
			update_code = "<?xml version=\"1.0\"?><xu:modifications version=\"1.0\" "
					+ "xmlns:xu=\"http://www.xmldb.org/xupdate\">"
					+ "<xu:append select=\"/number/image\">"
					+ node
					+ "</xu:append></xu:modifications>";
			update.update(update_code);
		}
		XPathQueryService query = (XPathQueryService) col.getService(
				"XPathQueryService", "1.0");
		String query_code = "/number/image";
		ResourceSet retSet = query.query(query_code);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/storexml/StoreTextTypeTest.java
 =======================================================================
package imc.disxmldb.storexml;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;

import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XMLResource;
import org.xmldb.api.modules.XPathQueryService;

public class StoreTextTypeTest {
	public static String colName = "textType";
	public static String fullColName = "/db/" + colName;
	public static String docName = "texttype.xml";
	public static String fileName = "testdata/texttype1.xml";

	@Before
	public void prepare() {
		TestUtilities.prepareCollection(fullColName);
	}
	
	@Test
	public void storeAndQuery() {
		try {
			FileInputStream input = new FileInputStream(new File(fileName));
			InputStreamReader ireader = new InputStreamReader(input);
			BufferedReader reader = new BufferedReader(ireader);
			String line = null;
			StringBuilder xmlContent = new StringBuilder();
			while (null != (line = reader.readLine())) {
				xmlContent.append(line);
			}
			TestUtilities.prepareDoc(fullColName, docName, xmlContent.toString(), (byte) 1);
			
			Collection col = TestUtilities.getCollection(fullColName);
			//query the doc
			XPathQueryService query = (XPathQueryService) col.getService(
					"XPathQueryService", "1.0");

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/StringOutputStreamTest.java
 =======================================================================
package imc.disxmldb.util;

import java.io.IOException;

import junit.framework.Assert;

import org.junit.Test;

public class StringOutputStreamTest {
	@Test
	public void test() throws IOException {
		StringOutputStream sos = new StringOutputStream();
		sos.writeUTF("test");
		System.out.println(sos.toString());
		Assert.assertEquals("test", sos.toString());
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/TestUtilities.java
 =======================================================================
package imc.disxmldb.util;

import org.exist.xmldb.RemoteCollection;
import org.exist.xmldb.RemoteCollectionManagementService;
import org.exist.xmldb.RemoteXMLResource;
import org.exist.xmldb.XmldbURI;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Database;
import org.xmldb.api.base.Resource;

public class TestUtilities {
	//public static final String uri = "xmldb:exist://58.198.176.88:10002/xmlrpc/db/";
	public static final String uri = "xmldb:exist://localhost:10002/xmlrpc/db/";
	//public static final String uri = "xmldb:exist://10.11.1.201:10002/xmlrpc/db/";
	public static Collection getCollection(String uri_, String colName) {
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);
			String textType = "css";
			RemoteCollection col = (RemoteCollection) DatabaseManager
					.getCollection(uri_, "admin", "admin");

			if (colName.startsWith("/"))
				colName = colName.substring(1, colName.length());
			if (colName.endsWith("/"))
				colName = colName.substring(0, colName.length() - 1);

			String[] cols = colName.split("/");

			for (int i = 1; i < cols.length; i++) {
				col = (RemoteCollection) col.getChildCollection(cols[i]);
			}

			return col;
		} catch (Exception ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	public static Collection getCollection(String colName) {
		return getCollection(uri, colName);
	}

	/**

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/XMLUtilitiesTest.java
 =======================================================================
package imc.disxmldb.util;

import junit.framework.Assert;

import org.junit.Test;

public class XMLUtilitiesTest {
	@Test
	public void test() {
		String origin = "sdfasd<sdfsd>sdfsd&sdf'sdfsd\"sdfd&amp;";
		String transform = XMLUtilities.encodeString(origin);
		System.out.println("string encoded: " + transform);
		String decoded = XMLUtilities.decodeString(transform);
		System.out.println("String decoded: " + decoded);
		Assert.assertEquals(origin, decoded);
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/util/XUpdateTest.java
 =======================================================================
package imc.disxmldb.util;

import java.io.IOException;
import java.util.List;
import java.util.Map.Entry;

import imc.disxmldb.CollectionStore;
import imc.disxmldb.XMLDBStore;
import imc.disxmldb.cassandra.verbhandler.XPathResult;

import org.apache.cassandra.thrift.CassandraDaemon;
import org.exist.xmldb.RemoteXMLResource;
import org.junit.Test;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Database;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XUpdateQueryService;

public class XUpdateTest {
	private static final String DATADIR = "/home/xiafan/xmldata";

	@Test
	public void testUpdateText() throws Exception {
		String[] args = { "-Djava.rmi.server.hostname=mc1",
				"-Dcom.sun.management.jmxremote.port=7791",
				"-Dcom.sun.management.jmxremote.ssl=false",
				"-Dcom.sun.management.jmxremote.authenticate=false",
				"-Xmx8192M", "-Xms8192M" };
		CassandraDaemon.main(args);
		String xupdate = "<?xml version=\"1.0\"?><xu:modifications version=\"1.0\" "
				+ "xmlns:xu=\"http://www.xmldb.org/xupdate\">"
				+ "<xu:update select=\"/basicfeature/node/id\">"
				+ 1
				+ "</xu:update></xu:modifications>";
		CollectionStore colStore = XMLDBStore.instance().getCollection(0);
		colStore.XUpdate(xupdate.getBytes(), false);
	}

	@Test
	public void testDelete() throws XMLDBException, IOException {
		String[] args = { "-Djava.rmi.server.hostname=mc1",
				"-Dcom.sun.management.jmxremote.port=7791",
				"-Dcom.sun.management.jmxremote.ssl=false",
				"-Dcom.sun.management.jmxremote.authenticate=false",
				"-Xmx8192M", "-Xms8192M" };
		CassandraDaemon.main(args);
		String xupdate = "<?xml version=\"1.0\"?><xu:modifications version=\"1.0\" "
				+ "xmlns:xu=\"http://www.xmldb.org/xupdate\">"

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xmlrpc/XmlRpcServerTest.java
 =======================================================================
package imc.disxmldb.xmlrpc;

import imc.disxmldb.config.SysConfig;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.security.Provider.Service;

import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Database;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;
import org.exist.xmldb.*;

/**
 * @author:xiafan xiafan68@gmail.com
 * @version: Sep 8, 2011 0.1
 */

public class XmlRpcServerTest {
	private static final String DATADIR = "/home/xiafan/xmldata";
	private static final String uri = "xmldb:exist://mc1:8088/xmlrpc/db/";

	public static void testCreateCollection() {
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);
			String textType = "css";
			RemoteCollection col = (RemoteCollection) DatabaseManager
					.getCollection(uri, "admin", "admin");
			// RemoteCollectionManagementService service =
			// (RemoteCollectionManagementService)
			// col.getService("CollectionManagementService", "1.0");


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/ComplexXPathTest.java
 =======================================================================
package imc.disxmldb.xpath;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileReader;
import java.util.Random;

import junit.framework.Assert;
import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

/**
 * kind of queries to be tested:
 * 1.	multiple predicates
 * 2.	nested predicates
 * 3.	predicates contains function
 * 4.	functions contains simple xpath as parameter
 * 5.	functions contains complex xpath as parameter
 * @author xiafan
 *
 */
public class ComplexXPathTest {
	public static String colName = "CXPathCol";
	public static String fullColName = "/db/" + colName;
	public static String docName = "CXPathTest.xml";
	public static String emptyDoc = "<Database></Database>";

	@Before
	public void prepare() {
		TestUtilities.prepareCollection(fullColName);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 1);
	}

	@Test
	public void ComplexPredicateXPathTest() {
		try {
			Collection col = TestUtilities.getCollection(fullColName);
			XUpdateQueryService update = (XUpdateQueryService) col.getService(
					"XUpdateQueryService", "1.0");
			update.setProperty("pretty", "true");
			update.setProperty("encoding", "ISO-8859-1");

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/QueryColRecursiveTest.java
 =======================================================================
package imc.disxmldb.xpath;

import static org.junit.Assert.assertEquals;
import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Database;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class QueryColRecursiveTest {
	public static String colName = "childCollection";
	public static String rootColName = "/db/pcol/";
	public static String fullColName = rootColName + colName;
	public static String docName = "testXML.xml";
	public static String emptyDoc = "<basicfeature></basicfeature>";

	@Before
	public void prepare() {
		TestUtilities.prepareCollection(rootColName);
		TestUtilities.prepareCollection(fullColName);
		TestUtilities.prepareDoc(rootColName, docName, emptyDoc, (byte) 1);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 1);
	}

	@After
	public void clean() {
		TestUtilities.removeCollection(fullColName);
		TestUtilities.removeCollection(rootColName);
	}

	@Test
	public void testXUpdate() {
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);
			String textType = "css";
			Collection pCol = TestUtilities.getCollection(rootColName);
			Collection col = TestUtilities.getCollection(fullColName);


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/QueryMultiCollectionTest.java
 =======================================================================
package imc.disxmldb.xpath;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;

import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XPathQueryService;

public class QueryMultiCollectionTest {
	public static String colName1 = "testCol1";
	public static String colName2 = "testCol2";
	public static String fullColName1 = "/db/" + colName1;
	public static String fullColName2 = "/db/" + colName2;
	public static String docName1 = "texttype1.xml";
	public static String fileName1 = "testdata/" + docName1;
	public static String docName2 = "texttype2.xml";
	public static String fileName2 = "testdata/" + docName2;

	@Before
	public void prepare() {
		TestUtilities.prepareCollection(fullColName1);
	}

	@After
	public void after() {
		TestUtilities.removeCollection(fullColName1);
	}
	
	/**
	 * the same xml document is saved under different collection. Test if query one collection will
	 * return the result multiple times
	 */
	@Test
	public void test() {
		FileInputStream input;
		try {
			input = new FileInputStream(new File(fileName1));
			InputStreamReader ireader = new InputStreamReader(input);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathCompilerTest.java
 =======================================================================
package imc.disxmldb.xpath;

import imc.disxmldb.config.SysConfig;
import imc.disxmldb.xpath.xpathcompile.ParseException;
import imc.disxmldb.xpath.xpathcompile.XPathCompiler;

import java.io.ByteArrayInputStream;
import java.io.IOException;

import org.junit.Assert;
import org.junit.Test;

public class XPathCompilerTest {
	public String[] legalQueries = {
			"/ProteinDatabase/ProteinEntry[./@id='A56894'];",
			"/ProteinEntry[./@id='A56894'];",
			"/ProteinDatabase/ProteinEntry[./@id='A56894']/reference//title;",
			"/ProteinDatabase/ProteinEntry[./header/uid='A56894'];",
			"/ProteinDatabase/ProteinEntry[.//uid='A56894'];",
			"/ProteinDatabase/ProteinEntry[./header/created_date='05-Jan-1996'];",
			"/ProteinDatabase/ProteinEntry[./header/uid='A56894'][./header/created_date='05-Jan-1996'];",
			"/ProteinDatabase/ProteinEntry[./header/uid='A56894'][./header/created_date='05-Jan-1997'];",
			"/ProteinDatabase/ProteinEntry[./header/uid='A56894'][./header/created_date='05-Jan-1996']/reference//title;",
			"/Database/ProteinEntry[./reference[./refinfo[./@refid='A94455'][./contains(./citation, 'unpublished results, 1966, cited by Margoliash')]]]/@id;",
			"/Database/ProteinEntry[./contains(.//title, 'cytochrome c gene: two classes of processed')]/@id;",
			"/Database/ProteinEntry[./contains(./reference/refinfo[./@refid='A94455']/citation, 'unpublished results, 1966, cited by Margoliash')]/@id;",
			"/table/T[./O_ORDERDATE='s']/O_TOTALPRICE/max();",
			"/table/T[./O_ORDERDATE='s_']/O_TOTALPRICE/min();",
			"/table/T[./O_ORDERDATE=';ss']/O_TOTALPRICE/avg();",
			"/table/T[./O_ORDERDATE='ss;']/O_TOTALPRICE/sum();",
			"/table/T[./O_ORDERDATE=';']/O_TOTALPRICE/count();",
			"/table/T[./O_ORDERKEY=7]/O_COMMENT/text();",
			"/table/T[./contains(./O_COMMENT,'pinto beans')]/O_COMMENT;",
			"/table/T[./contains(./O_COMMENT, '易碎物品')]/O_COMMENT;",
			"/table/T[./contains(./O_COMMENT, '易碎物品made in China')]/O_COMMENT;",
			"/table/T[./contains(./O_COMMENT, 'pinto beans')]/O_COMMENT/count();",
			"/table/T[./contains(./O_COMMENT, 'pinto beans')]/O_COMMENT/subsequence(0,1);",
			"/table/T[./contains(./O_COMMENT, 'pinto beans')]/O_COMMENT/subsequence(0,5);",
			"/table/T[./contains(./O_COMMENT, 'pinto beans')]/O_COMMENT/subsequence(4,1);" };

	public String[] illegalQueries = { "测试", "/test///", "/[./test]",
			"/test[./test)", "/test[./test(/test[./exe]]", "]","/test][./test]" };

	@Test
	public void compilerTest() throws IOException {

		for (String query : legalQueries) {
			XPathCompiler compiler = new XPathCompiler(
					new ByteArrayInputStream(query.getBytes(SysConfig.ENCODING)),
					SysConfig.ENCODING);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathFunctionTest.java
 =======================================================================
package imc.disxmldb.xpath;

import imc.disxmldb.util.TestUtilities;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class XPathFunctionTest {
	public static String colName = "funcTestCol";
	public static String fullColName = "/db/" + colName;
	public static String docName = "orders.xml";
	public static String filePath = "testdata/" + docName;

	@Before
	public void prepare() throws IOException {
		TestUtilities.prepareCollection(fullColName);
		FileInputStream input;

		input = new FileInputStream(new File(filePath));
		InputStreamReader ireader = new InputStreamReader(input);
		BufferedReader reader = new BufferedReader(ireader);
		String line = null;
		StringBuilder xmlContent = new StringBuilder();
		while (null != (line = reader.readLine())) {
			xmlContent.append(line);
		}
		TestUtilities.prepareDoc(fullColName, docName, xmlContent.toString(),
				(byte) 1);
	}

	@Test
	public void XPathFuncTest() {
		try {
			Collection col = TestUtilities.getCollection(fullColName);
			XUpdateQueryService update = (XUpdateQueryService) col.getService(
					"XUpdateQueryService", "1.0");
			update.setProperty("pretty", "true");

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathTest.java
 =======================================================================
package imc.disxmldb.xpath;

import java.util.Random;

import junit.framework.Assert;
import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class XPathTest {
	public static String colName = "testCol";
	public static String fullColName = "/db/" + colName;
	public static String docName = "testXML.xml";
	public static String emptyDoc = "<basicfeature></basicfeature>";

	@Before
	public void prepare() {
		TestUtilities.prepareCollection(fullColName);
		String node = "";
		float fileSize = 1.1f;
		for (int i = 0; i < 10; i++) {
			node += "<node id=\"" + i + "\" name=\"activity" + i + "\">"
					+ "<bfid>0300010000000007200</bfid>" + "<general>"
					+ "<TimeUpload>2010年11月09日</TimeUpload>" + ""
					+ "<Sharer>audr</Sharer>" + "</general>"
					+ "<FileName>世界经济能否在明年上半年复苏.avi</FileName>"
					+ "<FileSize>" + fileSize + "MB</FileSize>" + "</node>";
			fileSize += 1.0;
		}
		emptyDoc = "<basicfeature>" + node + "</basicfeature>";
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 1);
		
		
	}

	@Test
	public void IntegerTypeTest() {
		try {
			Collection col = TestUtilities.getCollection(fullColName);
			XUpdateQueryService update = (XUpdateQueryService) col.getService(
					"XUpdateQueryService", "1.0");
			update.setProperty("pretty", "true");
			update.setProperty("encoding", "ISO-8859-1");

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathTokenParserTest.java
 =======================================================================
package imc.disxmldb.xpath;

import imc.disxmldb.xpath.xpathtoken.Token;
import imc.disxmldb.xpath.xpathtoken.XPathTokenParser;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;

import junit.framework.Assert;

import org.junit.Test;

public class XPathTokenParserTest {

	public static String[] legalIdentifiers = { "__", "_identifier", "_12identifier", "i12dentifier",
			"identifier12","T","汉语" };
	public static String[] illegalIdentifiers = { "12identifier", "+identifier" };

	@Test
	public void IdentifierTest() throws IOException {
		PipedOutputStream output = new PipedOutputStream();
		PipedInputStream input = new PipedInputStream();
		input.connect(output);
		XPathTokenParser tokenParser = new XPathTokenParser(input);
		for (String query : legalIdentifiers) {
			System.out.println("input: " + query);
			tokenParser = new XPathTokenParser(new ByteArrayInputStream(
					query.getBytes()));
			Token token = tokenParser.getNextToken();
			while (token.kind != XPathTokenParser.EOF) {
				Assert.assertEquals(token.kind, XPathTokenParser.NCName);
				System.out.println(token.image + " type:" + token.kind);
				token = tokenParser.getNextToken();
			}
		}

		for (String query : illegalIdentifiers) {
			System.out.println("input: " + query);
			tokenParser = new XPathTokenParser(new ByteArrayInputStream(
					query.getBytes()));
			Token token = tokenParser.getNextToken();
			while (token.kind != XPathTokenParser.EOF) {
				System.out.println(token.image + " type:" + token.kind);
				token = tokenParser.getNextToken();
			}
		}
	}


 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xpath/XPathTypeTest.java
 =======================================================================
package imc.disxmldb.xpath;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;

import junit.framework.Assert;

import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class XPathTypeTest {
	public static String colName = "typeTestCol";
	public static String fullColName = "/db/" + colName;
	public static String docName = "synthetic.xml";
	public static String filePath = "testdata/" + docName;

	@Before
	public void prepare() throws IOException {
		TestUtilities.prepareCollection(fullColName);
		FileInputStream input;

		input = new FileInputStream(new File(filePath));
		InputStreamReader ireader = new InputStreamReader(input);
		BufferedReader reader = new BufferedReader(ireader);
		String line = null;
		StringBuilder xmlContent = new StringBuilder();
		while (null != (line = reader.readLine())) {
			xmlContent.append(line);
		}
		TestUtilities.prepareDoc(fullColName, docName, xmlContent.toString(),
				(byte) 1);
	}

	@Test
	public void typeTest() {
		try {
			Collection col = TestUtilities.getCollection(fullColName);
			XUpdateQueryService update = (XUpdateQueryService) col.getService(

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/AppendLevel2Test.java
 =======================================================================
package imc.disxmldb.xupdate;

import static org.junit.Assert.assertEquals;
import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class AppendLevel2Test {
	public static String colName = "testCol";
	public static String fullColName = "/db/" + colName;
	public static String docName = "testXML.xml";
	public static String emptyDoc = "<number><text></text></number>";

	@Before
	public void prepare() throws InterruptedException {
		TestUtilities.prepareCollection(fullColName);
		Thread.sleep(1000);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 1);
	}

	@Test
	public void appendMultiNodesATime() {
		try {
			Collection col = TestUtilities.getCollection(fullColName);
			XUpdateQueryService update = (XUpdateQueryService) col.getService(
					"XUpdateQueryService", "1.0");
			update.setProperty("pretty", "true");
			update.setProperty("encoding", "ISO-8859-1");
			// append three nodes in a xupdate expression
			String node = "";
			float fileSize = 1.1f;
			String[] date = new String[] { "2010年11月09日", "2010年11月09日",
					"2010年11月10日" };

			node = "<consumption><count>0</count></consumption>";
			String update_code = "<?xml version=\"1.0\"?><xu:modifications version=\"1.0\" "
					+ "xmlns:xu=\"http://www.xmldb.org/xupdate\">"
					+ "<xu:append select=\"/number/text\">"
					+ node
					+ "</xu:append></xu:modifications>";
			System.out.println("execute " + update_code);
			System.out.println("updated nodes: " + update.update(update_code));
			Thread.sleep(500);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/RollbackTest.java
 =======================================================================
package imc.disxmldb.xupdate;

import static org.junit.Assert.assertEquals;
import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class RollbackTest {
	public static String colName = "rollBackCol";
	public static String fullColName = "/db/" + colName;
	public static String docName = "rollBackXML.xml";
	public static String emptyDoc = "<basicfeature></basicfeature>";

	@Before
	public void prepare() throws InterruptedException {
		TestUtilities.prepareCollection(fullColName);
		Thread.sleep(1000);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 1);
	}

	@Test
	public void rollBackTest() {
		try {
			Collection col = TestUtilities.getCollection(fullColName);
			XUpdateQueryService update = (XUpdateQueryService) col.getService(
					"XUpdateQueryService", "1.0");
			update.setProperty("pretty", "true");
			update.setProperty("encoding", "ISO-8859-1");
			// append three nodes in a xupdate expression
			String node = "";
			for (int i = 0; i < 10; i++) {
				node += "<node id=\"" + i + "\">"
						+ "<bfid>0300010000000007200</bfid>"
						+ "<TimeUpload>2010年11月09日</TimeUpload>"
						+ "<Sharer>audr</Sharer>"
						+ "<FileName>世界经济能否在明年上半年复苏.avi</FileName>"
						+ "<FileSize>1.5 MB</FileSize>" + "</node>";
			}

			String update_code = "<?xml version=\"1.0\"?><xu:modifications version=\"1.0\" "
					+ "xmlns:xu=\"http://www.xmldb.org/xupdate\">"
					+ "<xu:append select=\"/basicfeature\">"
					+ node

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateAppendMultiAttr.java
 =======================================================================
package imc.disxmldb.xupdate;

import static org.junit.Assert.assertEquals;
import junit.framework.Assert;
import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class XUpdateAppendMultiAttr {
	public static String colName = "testCol";
	public static String fullColName = "/db/" + colName;
	public static String docName = "testXML.xml";
	public static String emptyDoc = "<imagetype sub=\"8\"></imagetype>";

	@Before
	public void prepare() throws InterruptedException {
		TestUtilities.prepareCollection(fullColName);
		Thread.sleep(1000);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 1);
	}

	@Test
	public void test() {
		try {
			Collection col = TestUtilities.getCollection(fullColName);
			XUpdateQueryService update = (XUpdateQueryService) col.getService(
					"XUpdateQueryService", "1.0");
			update.setProperty("pretty", "true");
			update.setProperty("encoding", "ISO-8859-1");
			String[] name = new String[] { "consumption", "culture",
					"education", "finance", "government", "health", "military",
					"science", "sport", "tour" };
			String[] code = new String[] { "020001", "020002", "020003",
					"020004", "020005", "020006", "020007", "020008", "020009",
					"020010" };

			XPathQueryService query = (XPathQueryService) col.getService(
					"XPathQueryService", "1.0");
			for (int i = 0; i < name.length; i++) {
				String node = "<outtype name=\"" + name[i]
						+ "\"  length=\"6\" num=\"1\"><code>" + code[i]
						+ "</code></outtype>";
				String update_code = "<?xml version=\"1.0\"?><xu:modifications version=\"1.0\" "

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateAppendTest.java
 =======================================================================
package imc.disxmldb.xupdate;

import static org.junit.Assert.*;
import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Database;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class XUpdateAppendTest {
	public static String colName = "testCol";
	public static String fullColName = "/db/" + colName;
	public static String docName = "testXML.xml";
	public static String emptyDoc = "<basicfeature></basicfeature>";

	@Before
	public void prepare() throws InterruptedException {
		TestUtilities.prepareCollection(fullColName);
		Thread.sleep(1000);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 1);
	}

	@Test
	public void appendEmptyDoc() {
		try {
			Collection col = TestUtilities.getCollection(fullColName);
			XUpdateQueryService update = (XUpdateQueryService) col.getService(
					"XUpdateQueryService", "1.0");
			update.setProperty("pretty", "true");
			update.setProperty("encoding", "ISO-8859-1");
			String node = "<node id=\"1\">"
					+ "<bfid>0300010000000007201</bfid>"
					+ "<TimeUpload>2010年11月09日</TimeUpload>"
					+ "<Sharer>audr</Sharer>"
					+ "<FileName>世界经济能否在明年上半年复苏.avi</FileName>"
					+ "<FileSize>1.5 MB</FileSize>" + "</node>";

			String update_code = "<?xml version=\"1.0\"?><xu:modifications version=\"1.0\" "
					+ "xmlns:xu=\"http://www.xmldb.org/xupdate\">"
					+ "<xu:append select=\"/basicfeature\">"
					+ node
					+ "</xu:append></xu:modifications>";
			// System.out.println("execute " + update_code);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateClientTest.java
 =======================================================================
/**
 *@author:xiafan xiafan68@gmail.com
 *@version: 2011-11-14 0.1
 */
package imc.disxmldb.xupdate;

import static org.junit.Assert.assertEquals;
import imc.disxmldb.util.TestUtilities;

import org.exist.xmldb.RemoteXMLResource;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.DatabaseManager;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Database;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class XUpdateClientTest {
	public static String colName = "updateTestCol";
	public static String fullColName = "/db/" + colName;
	public static String docName = "testXML.xml";
	public static String emptyDoc = "<basicfeature></basicfeature>";

	@Before
	public void prepare() {
		TestUtilities.prepareCollection(fullColName);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte)1);
	}

	@After
	public void clean() {
		TestUtilities.removeCollection(fullColName);
	}

	@Test
	public void testXUpdate() {
		String driver = "org.exist.xmldb.DatabaseImpl";
		Class cl;
		try {
			cl = Class.forName(driver);
			Database database = (Database) cl.newInstance();
			database.setProperty("creat-database", "true");
			DatabaseManager.registerDatabase(database);
			String textType = "css";
			Collection col = TestUtilities.getCollection(fullColName);

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateDeleteTest.java
 =======================================================================
package imc.disxmldb.xupdate;

import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class XUpdateDeleteTest {
	public static final String colName = "deleteTest";
	public static final String fullColName = "/db/" + colName;
	public static final String docName = "testDel.xml";
	public static String emptyDoc = "<basicfeature></basicfeature>";
	public static final int count = 4;
	
	@Before
	public void prepare() {
		TestUtilities.prepareCollection(fullColName);
		emptyDoc = "<basicfeature>";
		
		for (int i = 0; i < count; i++) {
			emptyDoc += "<node id=\"" + i + "\">"
					+ "<bfid>0300010000000007200</bfid>"
					+ "<TimeUpload>2010年11月09日</TimeUpload>"
					+ "<Sharer>audr</Sharer>"
					+ "<FileName>test file name.avi</FileName>"
					+ "<FileSize>1.5 MB</FileSize>" + "</node>";
		}
		emptyDoc += "</basicfeature>";
		System.out.println(emptyDoc);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 1);
	}

	@Test
	public void deleteTest() {
		try {
			Collection col = TestUtilities.getCollection(fullColName);
			XUpdateQueryService update = (XUpdateQueryService) col.getService(
					"XUpdateQueryService", "1.0");
			update.setProperty("pretty", "true");
			update.setProperty("encoding", "ISO-8859-1");
			String update_code = null;

			XPathQueryService query = (XPathQueryService) col.getService(

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/imc/disxmldb/xupdate/XUpdateTextTest.java
 =======================================================================
package imc.disxmldb.xupdate;

import imc.disxmldb.util.TestUtilities;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.Assert;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.Resource;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.modules.XPathQueryService;
import org.xmldb.api.modules.XUpdateQueryService;

public class XUpdateTextTest {
	public static String colName = "updateTextTest";
	public static String fullColName = "/db/" + colName;
	public static String docName = "testXML.xml";
	public static String emptyDoc = "<basicfeature></basicfeature>";

	@Before
	public void prepare() throws InterruptedException {
		TestUtilities.prepareCollection(fullColName);
		Thread.sleep(1000);
		TestUtilities.prepareDoc(fullColName, docName, emptyDoc, (byte) 1);
	}

	@Test
	public void updateTextTest() {
		try {
			Collection col = TestUtilities.getCollection(fullColName);
			XUpdateQueryService update = (XUpdateQueryService) col.getService(
					"XUpdateQueryService", "1.0");
			update.setProperty("pretty", "true");
			update.setProperty("encoding", "ISO-8859-1"); 

			// append nodes
			String node = "";
			int count = 3;
			for (int i = 0; i < count; i++) {
				node += "<node id=\"" + i + "\">"
						+ "<bfid>0300010000000007200</bfid>"
						+ "<TimeUpload>2010年11月09日</TimeUpload>"
						+ "<Sharer>audr</Sharer>"
						+ "<User_Comment>test</User_Comment>"
						+ "<Keywords>a b</Keywords>" + "<File>"
						+ "<FileName>世界经济能否在明年上半年复苏.avi</FileName>"
						+ "<FileSize>1.5 MB</FileSize>" + "</File>" + "</node>";
			}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/performance/PerformanceTest.java
 =======================================================================
package performance;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;

import imc.disxmldb.util.TestUtilities;

import org.junit.Test;
import org.xmldb.api.base.Collection;
import org.xmldb.api.base.ResourceIterator;
import org.xmldb.api.base.ResourceSet;
import org.xmldb.api.base.XMLDBException;
import org.xmldb.api.modules.XPathQueryService;

public class PerformanceTest {
	private static final String fullCol = "/db/proteindatabase";
	private static final String uri = "xmldb:exist://10.11.1.202:10002/xmlrpc/db/";
	private static final int testCount = 5; // number of test each que

	public static String[] queries = {
			"/ProteinDatabase/ProteinEntry[./@id='CCHU']",
			"/ProteinDatabase/ProteinEntry[reference/accinfo/accession='AE0077']",
			// "/ProteinDatabase/ProteinEntry//accinfo/xrefs",
			"/ProteinDatabase/ProteinEntry[reference/refinfo/authors/author='Massung, R.F.']",
			"/ProteinDatabase/ProteinEntry[organism/variety='strain Marburg']/reference/accinfo/xrefs",
			"/ProteinDatabase/ProteinEntry[reference//year='1988']/organism",
			"/ProteinDatabase/ProteinEntry[organism/source='Anabaena sp.']/reference/accinfo/xrefs",
			"/ProteinDatabase/ProteinEntry[reference/accinfo/note]",
			"/ProteinDatabase/ProteinEntry[reference/accinfo/accession='AE0077']",
			"/ProteinDatabase/ProteinEntry[reference/refinfo/year='1988']/reference/accinfo[status='preliminary']/xrefs" };
	public static String[] compareQueries = {
			"//ProteinEntry[./contains(.//title, ' complete genome sequence')]",
			"//ProteinEntry[.//accession='AE0077']",
			"//ProteinEntry//accinfo/xrefs/count()",
			"//ProteinEntry[.//author='Massung, R.F.']",
			"//ProteinEntry[.//variety='strain Marburg']//accinfo/xrefs",
			"//ProteinEntry[reference//year='1988']/organism",
			"//ProteinEntry[organism/source='Anabaena sp.']//accinfo/xrefs",
			"//ProteinEntry[//accinfo/note]",
			"//ProteinEntry[//accinfo/accession='AE0077']",
			"//ProteinEntry[//year='1988']//accinfo[status='preliminary']/xrefs"};

	public static String[] countQueries = {
			"//ProteinEntry[.//accession='AE0077']/count()",
			"//ProteinEntry//accinfo/xrefs/count()",
			"//ProteinEntry[.//author='Massung, R.F.']/count()",
			"//ProteinEntry[.//variety='strain Marburg']//accinfo/xrefs/count()",
			"//ProteinEntry[reference//year='1988']/organism/count()",
			"//ProteinEntry[organism/source='Anabaena sp.']//accinfo/xrefs/count()",

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/test/unit/performance/xpathtokenparser/XPathTokenParserPerformTest.java
 =======================================================================
package performance.xpathtokenparser;

import imc.disxmldb.xpath.xpathtoken.XPathTokenParser;

import java.io.ByteArrayInputStream;
import java.io.InputStream;


import org.junit.Test;


public class XPathTokenParserPerformTest {
	private static int testCount = 10000;

	@Test
	public void test() {
		InputStream input = new ByteArrayInputStream("test".getBytes());

		long start = System.currentTimeMillis();

		for (int i = 0; i < testCount; i++) {
			XPathTokenParser parser = new XPathTokenParser(input);
		}
		
		long end = System.currentTimeMillis();
		System.out.println("new " + testCount + " times each costs: " + (end -start)/(testCount * 1.0) + "ms");
	}
}

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/ads.xml
 =======================================================================
<ads>
     <ad id = '20120604000002'>
          <compaign id = "20120604000001"/>
          <pics> <!-- 在哪些图片上投放这个广告 -->
               <pic id = "20120601000001"/>
               <pic id = "20120601000002"/>
               <pic id = "20120601000003"/>
               <pic id = "20120601000004"/>
          </pics>
          <locations> <!-- 地域定向 -->
                <location>
                     <province>北京</province>
                     <city>北京</city>
                 </location>
                <location>
                     <province>上海</province>
                     <city>上海</city>
                 </location>
                <location>
                     <province>浙江</province>
                     <city>杭州</city>
                 </location>
                <location>
                     <province>广东</province>
                     <city>深圳</city>
                 </location>
          </locations>
          <targetUsers> <!-- 感兴趣的用户群 -->
               <interests>
                    <interest>汽车</interest>
                    <interest>旅行</interest>
                    <interest>运动</interest>
               </interests>
               <ages>
                    <age>0-20</age>
                    <age>20-30</age>
               </ages>
               <genders>
                    <gender>男</gender>
               </genders>
          </targetUsers>
     </ad>
     <ad id = '20120604000002'>
          <compaign id = "20120604000001"/>
          <pics> <!-- 在哪些图片上投放这个广告 -->
               <pic id = "20120601000001"/>
               <pic id = "20120601000002"/>
               <pic id = "20120601000003"/>
               <pic id = "20120601000004"/>
          </pics>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/anotation.xml
 =======================================================================
<pictures>
<picture id = "20120601000001">
     <url>图片http://auto.sina.com.cn/news/2012-05-24/0959975821.shtml</url>
     <location/>
     <description>Mazda6“以大欺小”A级车如何应对</description>
     <catalog>汽车</catalog>
     <ROI>
          <subject>汽车</subject>
          <brand>一汽马自达</brand>
          <model>mazda6</model>
          <model>睿翼</model>
          <cartype>大中型车</cartype>
          <pricerange>15-20万</pricerange>
          <description>动感的内饰外形、优异的操控性、高标准的安全性、宽大的内部空间和精细的做工</description>
     </ROI>
</picture>
<picture id = "20120601000002">
      <pageurl>http://auto.sina.com.cn/car/2011-11-18/0923872312.shtml</pageurl>
     <url>http://photo.auto.sina.com.cn/tupian/9</url>
     <location/>
     <description>自我升华--试驾奥迪2012款A4L 2.0T</description>
     <catalog>汽车</catalog>
     <ROI>
          <subject>汽车</subject>
          <brand>奥迪</brand>
          <model>A4L</model>
          <model>2012款A4L</model>
          <cartype>中型车</cartype>
          <pricerange>30-40万</pricerange>
          <description>更加运动，更具操控感，动力更加强劲，更加节能</description>
     </ROI>
</picture>
<picture id = "20120601000003">
     <pageurl>http://auto.sina.com.cn/car/2011-08-05/1125817399.shtml</pageurl>
     <url>http://i1.sinaimg.cn/qc/photo_auto/photo/ec/c1/221305/221305_570.jpg</url>
     <location></location>
     <description>长测报告二：配置贴心 标致408长期测试</description>
     <catalog>汽车</catalog>
     <ROI>
          <subject>汽车</subject>
          <brand>标致</brand>
          <model>东风标致408</model>
          <cartype>中型车</cartype>
          <pricerange>10-15万</pricerange>
          <description>空间充裕，动力一般，适合温和驾驶的舒适家用中级车，性价比高</description>
     </ROI>
</picture>
<picture id = "20120601000004">
     <pageurl>http://auto.sina.com.cn/news/2012-04-27/1712962055.shtml</pageurl>
     <url>http://i2.sinaimg.cn/qc/2012/0427/U6652P33DT20120427171141.png</url>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/complex.xml
 =======================================================================
<ProteinEntry id="CCHU">
<header>
  <uid>CCHU</uid>
  <accession>A31764</accession>
  <accession>A05676</accession>
  <accession>I55192</accession>
  <accession>A00001</accession>
  <created_date>24-Apr-1984</created_date>
  <seq-rev_date>30-Sep-1991</seq-rev_date>
  <txt-rev_date>28-Jul-2000</txt-rev_date>
</header>
<protein>
  <name>cytochrome c [validated]</name>
</protein>
<organism>
  <source>human</source>
  <common>man</common>
  <formal>Homo sapiens</formal>
</organism>
<reference>
<refinfo refid="A31764">
  <authors>
  <author>Evans, M.J.</author>
  <author>Scarpulla, R.C.</author>
  </authors>
  <citation>Proc. Natl. Acad. Sci. U.S.A.</citation>
  <volume>85</volume><year>1988</year><pages>9625-9629</pages>
  <title>The human somatic cytochrome c gene: two classes of processed pseudogenes demarcate a period of rapid molecular evolution.</title>
  <xrefs>
  <xref><db>MUID</db><uid>89071748</uid></xref>
  </xrefs>
</refinfo>
<accinfo label="EVA">
  <accession>A31764</accession>
  <mol-type>DNA</mol-type>
  <seq-spec>1-105</seq-spec>
  <xrefs>
  <xref><db>GB</db><uid>M22877</uid></xref>
  <xref><db>NID</db><uid>g181241</uid></xref>
  <xref><db>PIDN</db><uid>AAA35732.1</uid></xref>
  <xref><db>PID</db><uid>g181242</uid></xref>
  </xrefs>
</accinfo>
</reference>
<reference>
<refinfo refid="A05676">
  <authors>
  <author>Matsubara, H.</author>
  <author>Smith, E.L.</author>
  </authors>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/number.xml
 =======================================================================
<number>
	<text>
		<consumption>
			<count>0</count>
		</consumption>
		<culture>
			<count>0</count>
		</culture>
		<education>
			<count>0</count>
		</education>
		<finance>
			<count>0</count>
		</finance>
		<government>
			<count>0</count>
		</government>
		<health>
			<count>0</count>
		</health>
		<military>
			<count>0</count>
		</military>
		<science>
			<count>0</count>
		</science>
		<sport>
			<count>0</count>
		</sport>
		<tour>
			<count>0</count>
		</tour>
		<total>
			<count>0</count>
		</total>
	</text>
</number>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/orders.xml
 =======================================================================
<table>
<T><O_ORDERKEY>1</O_ORDERKEY><O_CUSTKEY>370</O_CUSTKEY><O_ORDERSTATUS>O</O_ORDERSTATUS><O_TOTALPRICE>172799.49</O_TOTALPRICE><O_ORDERDATE>1996-01-02</O_ORDERDATE><O_ORDER-PRIORITY>5-LOW</O_ORDER-PRIORITY><O_CLERK>Clerk#000000951</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>易碎商品，轻拿轻放</O_COMMENT></T>
<T><O_ORDERKEY>2</O_ORDERKEY><O_CUSTKEY>781</O_CUSTKEY><O_ORDERSTATUS>O</O_ORDERSTATUS><O_TOTALPRICE>38426.09</O_TOTALPRICE><O_ORDERDATE>1996-12-01</O_ORDERDATE><O_ORDER-PRIORITY>1-URGENT</O_ORDER-PRIORITY><O_CLERK>Clerk#000000880</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>易碎商品，轻拿轻放</O_COMMENT></T>
<T><O_ORDERKEY>3</O_ORDERKEY><O_CUSTKEY>1234</O_CUSTKEY><O_ORDERSTATUS>F</O_ORDERSTATUS><O_TOTALPRICE>205654.30</O_TOTALPRICE><O_ORDERDATE>1993-10-14</O_ORDERDATE><O_ORDER-PRIORITY>5-LOW</O_ORDER-PRIORITY><O_CLERK>Clerk#000000955</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>易碎商品，轻拿轻放。made in China</O_COMMENT></T>
<T><O_ORDERKEY>4</O_ORDERKEY><O_CUSTKEY>1369</O_CUSTKEY><O_ORDERSTATUS>O</O_ORDERSTATUS><O_TOTALPRICE>56000.91</O_TOTALPRICE><O_ORDERDATE>1995-10-11</O_ORDERDATE><O_ORDER-PRIORITY>5-LOW</O_ORDER-PRIORITY><O_CLERK>Clerk#000000124</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>final requests detect slyly across the blithely bold pinto beans. eve</O_COMMENT></T>
<T><O_ORDERKEY>5</O_ORDERKEY><O_CUSTKEY>445</O_CUSTKEY><O_ORDERSTATUS>F</O_ORDERSTATUS><O_TOTALPRICE>105367.67</O_TOTALPRICE><O_ORDERDATE>1994-07-30</O_ORDERDATE><O_ORDER-PRIORITY>5-LOW</O_ORDER-PRIORITY><O_CLERK>Clerk#000000925</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>even deposits cajole furiously. quickly spe</O_COMMENT></T>
<T><O_ORDERKEY>6</O_ORDERKEY><O_CUSTKEY>557</O_CUSTKEY><O_ORDERSTATUS>F</O_ORDERSTATUS><O_TOTALPRICE>45523.10</O_TOTALPRICE><O_ORDERDATE>1992-02-21</O_ORDERDATE><O_ORDER-PRIORITY>4-NOT SPECIFIED</O_ORDER-PRIORITY><O_CLERK>Clerk#000000058</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>ironically bold asymptotes sleep blithely beyond the regular, clos</O_COMMENT></T>
<T><O_ORDERKEY>7</O_ORDERKEY><O_CUSTKEY>392</O_CUSTKEY><O_ORDERSTATUS>O</O_ORDERSTATUS><O_TOTALPRICE>271885.66</O_TOTALPRICE><O_ORDERDATE>1996-01-10</O_ORDERDATE><O_ORDER-PRIORITY>2-HIGH</O_ORDER-PRIORITY><O_CLERK>Clerk#000000470</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>ironic, regular deposits are. ironic foxes sl</O_COMMENT></T>
<T><O_ORDERKEY>32</O_ORDERKEY><O_CUSTKEY>1301</O_CUSTKEY><O_ORDERSTATUS>O</O_ORDERSTATUS><O_TOTALPRICE>198665.57</O_TOTALPRICE><O_ORDERDATE>1995-07-16</O_ORDERDATE><O_ORDER-PRIORITY>2-HIGH</O_ORDER-PRIORITY><O_CLERK>Clerk#000000616</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>slyly final foxes are slyly. packag</O_COMMENT></T>
<T><O_ORDERKEY>33</O_ORDERKEY><O_CUSTKEY>670</O_CUSTKEY><O_ORDERSTATUS>F</O_ORDERSTATUS><O_TOTALPRICE>146567.24</O_TOTALPRICE><O_ORDERDATE>1993-10-27</O_ORDERDATE><O_ORDER-PRIORITY>3-MEDIUM</O_ORDER-PRIORITY><O_CLERK>Clerk#000000409</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>packages maintain about the deposits; foxes hang after </O_COMMENT></T>
<T><O_ORDERKEY>34</O_ORDERKEY><O_CUSTKEY>611</O_CUSTKEY><O_ORDERSTATUS>O</O_ORDERSTATUS><O_TOTALPRICE>73315.48</O_TOTALPRICE><O_ORDERDATE>1998-07-21</O_ORDERDATE><O_ORDER-PRIORITY>3-MEDIUM</O_ORDER-PRIORITY><O_CLERK>Clerk#000000223</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>quickly express asymptotes use. carefully final packages sleep f</O_COMMENT></T>
<T><O_ORDERKEY>35</O_ORDERKEY><O_CUSTKEY>1276</O_CUSTKEY><O_ORDERSTATUS>O</O_ORDERSTATUS><O_TOTALPRICE>194641.93</O_TOTALPRICE><O_ORDERDATE>1995-10-23</O_ORDERDATE><O_ORDER-PRIORITY>4-NOT SPECIFIED</O_ORDER-PRIORITY><O_CLERK>Clerk#000000259</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>fluffily regular pinto beans </O_COMMENT></T>
<T><O_ORDERKEY>36</O_ORDERKEY><O_CUSTKEY>1153</O_CUSTKEY><O_ORDERSTATUS>O</O_ORDERSTATUS><O_TOTALPRICE>42011.04</O_TOTALPRICE><O_ORDERDATE>1995-11-03</O_ORDERDATE><O_ORDER-PRIORITY>1-URGENT</O_ORDER-PRIORITY><O_CLERK>Clerk#000000358</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>carefully ironic accounts nag</O_COMMENT></T>
<T><O_ORDERKEY>37</O_ORDERKEY><O_CUSTKEY>862</O_CUSTKEY><O_ORDERSTATUS>F</O_ORDERSTATUS><O_TOTALPRICE>131896.49</O_TOTALPRICE><O_ORDERDATE>1992-06-03</O_ORDERDATE><O_ORDER-PRIORITY>3-MEDIUM</O_ORDER-PRIORITY><O_CLERK>Clerk#000000456</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>express requests ar</O_COMMENT></T>
<T><O_ORDERKEY>38</O_ORDERKEY><O_CUSTKEY>1249</O_CUSTKEY><O_ORDERSTATUS>O</O_ORDERSTATUS><O_TOTALPRICE>71553.08</O_TOTALPRICE><O_ORDERDATE>1996-08-21</O_ORDERDATE><O_ORDER-PRIORITY>4-NOT SPECIFIED</O_ORDER-PRIORITY><O_CLERK>Clerk#000000604</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>slyly quick pinto beans detect flu</O_COMMENT></T>
<T><O_ORDERKEY>39</O_ORDERKEY><O_CUSTKEY>818</O_CUSTKEY><O_ORDERSTATUS>O</O_ORDERSTATUS><O_TOTALPRICE>326565.37</O_TOTALPRICE><O_ORDERDATE>1996-09-20</O_ORDERDATE><O_ORDER-PRIORITY>3-MEDIUM</O_ORDER-PRIORITY><O_CLERK>Clerk#000000659</O_CLERK><O_SHIP-PRIORITY>0</O_SHIP-PRIORITY><O_COMMENT>furiously unusual pinto beans above the furiously ironic asymptot</O_COMMENT></T>
</table>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/people.dtd
 =======================================================================
<!ELEMENT people          (person*)>
<!ELEMENT person          (name, emailaddress, phone?, address?, homepage?, creditcard?, profile?)>
<!ATTLIST person          id ID #REQUIRED>
<!ELEMENT emailaddress    (#PCDATA)>
<!ELEMENT phone           (#PCDATA)>
<!ELEMENT address         (street, city, country, province?, zipcode)>
<!ELEMENT street          (#PCDATA)>
<!ELEMENT city            (#PCDATA)>
<!ELEMENT province        (#PCDATA)>
<!ELEMENT zipcode         (#PCDATA)>
<!ELEMENT country         (#PCDATA)>
<!ELEMENT homepage        (#PCDATA)>
<!ELEMENT creditcard      (#PCDATA)>
<!ELEMENT profile         (interest*, education?, gender?, business, age?)>
<!ATTLIST profile         income CDATA #IMPLIED>
<!ELEMENT interest        EMPTY>
<!ATTLIST interest        category IDREF #REQUIRED>
<!ELEMENT education       (#PCDATA)>
<!ELEMENT income          (#PCDATA)>
<!ELEMENT gender          (#PCDATA)>
<!ELEMENT business        (#PCDATA)>
<!ELEMENT age             (#PCDATA)>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/recurele.xml
 =======================================================================
<root>
<ele>
	<level id='1level1'>
		<level id='1level2'>level2</level>
	</level>
</ele>
<ele>
	<level id='2level1'>
		<level id='2level2'>level2</level>
	</level>
</ele>
<ele>
	<level id='3level1'>
		<level id='3level2'>level2</level>
	</level>
</ele>
</root>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/synthetic.xml
 =======================================================================
<basicfeature>
<node id="1">
<bfid>0300010000000007201</bfid>
<TimeUpload>2010年11月09日</TimeUpload>
<Sharer>audr</Sharer>
<FileName>大国崛起.avi</FileName>
<FileSize>190k</FileSize>
</node>
<node id="2">
<bfid>0300010000000007202</bfid>
<TimeUpload>2010年11月10日</TimeUpload>
<Sharer>audr</Sharer>
<FileName>测试视频.avi</FileName>
<FileSize>260k</FileSize>
</node>
<node id="3">
<bfid>0300010000000007203</bfid>
<TimeUpload>2010年11月09日</TimeUpload>
<Sharer>audr</Sharer>
<FileName>经济复苏.avi</FileName>
<FileSize>100k</FileSize>
</node>
<node id="4">
<bfid>0300010000000007204</bfid>
<TimeUpload>2010年11月09日</TimeUpload>
<Sharer>audr</Sharer>
<FileName>测试.avi</FileName>
<FileSize>110k</FileSize>
</node>
<node id="5">
<bfid>0300010000000007204</bfid>
<TimeUpload>2010年11月09日</TimeUpload>
<Sharer>audr</Sharer>
<FileName>测试.avi</FileName>
<FileSize>110MB</FileSize>
</node>
</basicfeature>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/texttype1.xml
 =======================================================================
<texttype sub="8">
    <outtype length="6" name="consumption" num="1" sub="0">
        <code>020001</code>
    </outtype>
    <outtype length="6" name="culture" num="1" sub="0">
        <code>020002</code>
    </outtype>
    <outtype length="6" name="education" num="1" sub="0">
        <code>020003</code>
    </outtype>
    <outtype length="6" name="finance" num="1" sub="0">
        <code>020004</code>
    </outtype>
    <outtype length="6" name="government" num="1" sub="0">
        <code>020005</code>
    </outtype>
    <outtype length="6" name="health" num="1" sub="0">
        <code>020006</code>
    </outtype>
    <outtype length="6" name="military" num="1" sub="0">
        <code>020007</code>
    </outtype>
    <outtype length="6" name="science" num="1" sub="0">
        <code>020008</code>
    </outtype>
    <outtype length="6" name="sport" num="1" sub="0">
        <code>020009</code>
    </outtype>
    <outtype length="6" name="tour" num="1" sub="0">
        <code>020010</code>
    </outtype>
</texttype>

 =======================================================================
 ==apache-cassandra-1.0.0-rc1-SNAPSHOT-src/testdata/texttype2.xml
 =======================================================================
<texttype sub="8">
    <outtype length="6" name="consumption" num="1" sub="0">
        <code>020001</code>
    </outtype>
    <outtype length="6" name="culture" num="1" sub="0">
        <code>020002</code>
    </outtype>
    <outtype length="6" name="education" num="1" sub="0">
        <code>020003</code>
    </outtype>
    <outtype length="6" name="finance" num="1" sub="0">
        <code>020004</code>
    </outtype>
    <outtype length="6" name="government" num="1" sub="0">
        <code>020005</code>
    </outtype>
    <outtype length="6" name="health" num="1" sub="0">
        <code>020006</code>
    </outtype>
    <outtype length="6" name="military" num="1" sub="0">
        <code>020007</code>
    </outtype>
    <outtype length="6" name="science" num="1" sub="0">
        <code>020008</code>
    </outtype>
    <outtype length="6" name="sport" num="1" sub="0">
        <code>020009</code>
    </outtype>
    <outtype length="6" name="tour" num="1" sub="0">
        <code>020010</code>
    </outtype>
</texttype>
