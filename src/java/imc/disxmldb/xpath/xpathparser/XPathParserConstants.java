/* Generated By:JavaCC: Do not edit this line. XPathParserConstants.java */
package imc.disxmldb.xpath.xpathparser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface XPathParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int MINUS = 6;
  /** RegularExpression Id. */
  int MULTIPLY = 7;
  /** RegularExpression Id. */
  int DIVIDE = 8;
  /** RegularExpression Id. */
  int EQ = 9;
  /** RegularExpression Id. */
  int LT = 10;
  /** RegularExpression Id. */
  int LE = 11;
  /** RegularExpression Id. */
  int GT = 12;
  /** RegularExpression Id. */
  int GE = 13;
  /** RegularExpression Id. */
  int UNDERSCODE = 14;
  /** RegularExpression Id. */
  int IntegerLiteral = 15;
  /** RegularExpression Id. */
  int DIGITS = 16;
  /** RegularExpression Id. */
  int DIGIT = 17;
  /** RegularExpression Id. */
  int EscapeApos = 18;
  /** RegularExpression Id. */
  int EscapeQuot = 19;
  /** RegularExpression Id. */
  int DecimalLiteral = 20;
  /** RegularExpression Id. */
  int DoubleLiteral = 21;
  /** RegularExpression Id. */
  int SingleQuotation = 22;
  /** RegularExpression Id. */
  int DoubleQuotation = 23;
  /** RegularExpression Id. */
  int StringLiteral = 24;
  /** RegularExpression Id. */
  int DOT = 25;
  /** RegularExpression Id. */
  int DOUBLESLASH = 26;
  /** RegularExpression Id. */
  int LEADDOUBLESLASH = 27;
  /** RegularExpression Id. */
  int CURSLASH = 28;
  /** RegularExpression Id. */
  int DECENDENTSLASH = 29;
  /** RegularExpression Id. */
  int OPENPARAN = 30;
  /** RegularExpression Id. */
  int CLOSEPARAN = 31;
  /** RegularExpression Id. */
  int COMMA = 32;
  /** RegularExpression Id. */
  int OPENBRAKET = 33;
  /** RegularExpression Id. */
  int CLOSEBRAKET = 34;
  /** RegularExpression Id. */
  int SEMICOLON = 35;
  /** RegularExpression Id. */
  int AT = 36;
  /** RegularExpression Id. */
  int NCName = 37;
  /** RegularExpression Id. */
  int QName = 38;
  /** RegularExpression Id. */
  int AttrName = 39;
  /** RegularExpression Id. */
  int FuncStart = 40;
  /** RegularExpression Id. */
  int Alpha = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"_\"",
    "<IntegerLiteral>",
    "<DIGITS>",
    "<DIGIT>",
    "\"\\\'\\\'\"",
    "\"\\\"\\\"\"",
    "<DecimalLiteral>",
    "<DoubleLiteral>",
    "\"\\\'\"",
    "\"\\\"\"",
    "<StringLiteral>",
    "\".\"",
    "\"//\"",
    "\".//\"",
    "\"./\"",
    "\"../\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\"@\"",
    "<NCName>",
    "<QName>",
    "<AttrName>",
    "<FuncStart>",
    "<Alpha>",
  };

}
